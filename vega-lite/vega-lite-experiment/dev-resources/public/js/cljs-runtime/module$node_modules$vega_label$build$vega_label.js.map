{
"version":3,
"file":"module$node_modules$vega_label$build$vega_label.js",
"lineCount":33,
"mappings":"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",
"sources":["node_modules/vega-label/build/vega-label.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_label$build$vega_label\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-canvas'), require('vega-dataflow'), require('vega-scenegraph'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-canvas', 'vega-dataflow', 'vega-scenegraph', 'vega-util'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega, global.vega));\n}(this, (function (exports, vegaCanvas, vegaDataflow, vegaScenegraph, vegaUtil) { 'use strict';\n\n  const ALPHA_MASK = 0xff000000; // alpha value equivalent to opacity 0.0625\n\n  const INSIDE_OPACITY_IN_ALPHA = 0x10000000;\n  const INSIDE_OPACITY = 0.0625;\n  function baseBitmaps($, data) {\n    const bitmap = $.bitmap(); // when there is no base mark but data points are to be avoided\n\n    (data || []).forEach(d => bitmap.set($(d.boundary[0]), $(d.boundary[3])));\n    return [bitmap, undefined];\n  }\n  function markBitmaps($, avoidMarks, labelInside, isGroupArea) {\n    // create canvas\n    const width = $.width,\n          height = $.height,\n          border = labelInside || isGroupArea,\n          context = vegaCanvas.canvas(width, height).getContext('2d'); // render all marks to be avoided into canvas\n\n    avoidMarks.forEach(items => draw(context, items, border)); // get canvas buffer, create bitmaps\n\n    const buffer = new Uint32Array(context.getImageData(0, 0, width, height).data.buffer),\n          layer1 = $.bitmap(),\n          layer2 = border && $.bitmap(); // populate bitmap layers\n\n    let x, y, u, v, alpha;\n\n    for (y = 0; y < height; ++y) {\n      for (x = 0; x < width; ++x) {\n        alpha = buffer[y * width + x] & ALPHA_MASK;\n\n        if (alpha) {\n          u = $(x);\n          v = $(y);\n          if (!isGroupArea) layer1.set(u, v); // update interior bitmap\n\n          if (border && alpha ^ INSIDE_OPACITY_IN_ALPHA) layer2.set(u, v); // update border bitmap\n        }\n      }\n    }\n\n    return [layer1, layer2];\n  }\n\n  function draw(context, items, interior) {\n    if (!items.length) return;\n    const type = items[0].mark.marktype;\n\n    if (type === 'group') {\n      items.forEach(group => {\n        group.items.forEach(mark => draw(context, mark.items, interior));\n      });\n    } else {\n      vegaScenegraph.Marks[type].draw(context, {\n        items: interior ? items.map(prepare) : items\n      });\n    }\n  }\n  /**\n   * Prepare item before drawing into canvas (setting stroke and opacity)\n   * @param {object} source item to be prepared\n   * @returns prepared item\n   */\n\n\n  function prepare(source) {\n    const item = vegaDataflow.rederive(source, {});\n\n    if (item.stroke) {\n      item.strokeOpacity = 1;\n    }\n\n    if (item.fill) {\n      item.fillOpacity = INSIDE_OPACITY;\n      item.stroke = '#000';\n      item.strokeOpacity = 1;\n      item.strokeWidth = 2;\n    }\n\n    return item;\n  }\n\n  const DIV = 5,\n        // bit shift from x, y index to bit vector array index\n  MOD = 31,\n        // bit mask for index lookup within a bit vector\n  SIZE = 32,\n        // individual bit vector size\n  RIGHT0 = new Uint32Array(SIZE + 1),\n        // left-anchored bit vectors, full -> 0\n  RIGHT1 = new Uint32Array(SIZE + 1); // right-anchored bit vectors, 0 -> full\n\n  RIGHT1[0] = 0;\n  RIGHT0[0] = ~RIGHT1[0];\n\n  for (let i = 1; i <= SIZE; ++i) {\n    RIGHT1[i] = RIGHT1[i - 1] << 1 | 1;\n    RIGHT0[i] = ~RIGHT1[i];\n  }\n\n  function Bitmap (w, h) {\n    const array = new Uint32Array(~~((w * h + SIZE) / SIZE));\n\n    function _set(index, mask) {\n      array[index] |= mask;\n    }\n\n    function _clear(index, mask) {\n      array[index] &= mask;\n    }\n\n    return {\n      array: array,\n      get: (x, y) => {\n        const index = y * w + x;\n        return array[index >>> DIV] & 1 << (index & MOD);\n      },\n      set: (x, y) => {\n        const index = y * w + x;\n\n        _set(index >>> DIV, 1 << (index & MOD));\n      },\n      clear: (x, y) => {\n        const index = y * w + x;\n\n        _clear(index >>> DIV, ~(1 << (index & MOD)));\n      },\n      getRange: (x, y, x2, y2) => {\n        let r = y2,\n            start,\n            end,\n            indexStart,\n            indexEnd;\n\n        for (; r >= y; --r) {\n          start = r * w + x;\n          end = r * w + x2;\n          indexStart = start >>> DIV;\n          indexEnd = end >>> DIV;\n\n          if (indexStart === indexEnd) {\n            if (array[indexStart] & RIGHT0[start & MOD] & RIGHT1[(end & MOD) + 1]) {\n              return true;\n            }\n          } else {\n            if (array[indexStart] & RIGHT0[start & MOD]) return true;\n            if (array[indexEnd] & RIGHT1[(end & MOD) + 1]) return true;\n\n            for (let i = indexStart + 1; i < indexEnd; ++i) {\n              if (array[i]) return true;\n            }\n          }\n        }\n\n        return false;\n      },\n      setRange: (x, y, x2, y2) => {\n        let start, end, indexStart, indexEnd, i;\n\n        for (; y <= y2; ++y) {\n          start = y * w + x;\n          end = y * w + x2;\n          indexStart = start >>> DIV;\n          indexEnd = end >>> DIV;\n\n          if (indexStart === indexEnd) {\n            _set(indexStart, RIGHT0[start & MOD] & RIGHT1[(end & MOD) + 1]);\n          } else {\n            _set(indexStart, RIGHT0[start & MOD]);\n\n            _set(indexEnd, RIGHT1[(end & MOD) + 1]);\n\n            for (i = indexStart + 1; i < indexEnd; ++i) _set(i, 0xffffffff);\n          }\n        }\n      },\n      clearRange: (x, y, x2, y2) => {\n        let start, end, indexStart, indexEnd, i;\n\n        for (; y <= y2; ++y) {\n          start = y * w + x;\n          end = y * w + x2;\n          indexStart = start >>> DIV;\n          indexEnd = end >>> DIV;\n\n          if (indexStart === indexEnd) {\n            _clear(indexStart, RIGHT1[start & MOD] | RIGHT0[(end & MOD) + 1]);\n          } else {\n            _clear(indexStart, RIGHT1[start & MOD]);\n\n            _clear(indexEnd, RIGHT0[(end & MOD) + 1]);\n\n            for (i = indexStart + 1; i < indexEnd; ++i) _clear(i, 0);\n          }\n        }\n      },\n      outOfBounds: (x, y, x2, y2) => x < 0 || y < 0 || y2 >= h || x2 >= w\n    };\n  }\n\n  function scaler (width, height, padding) {\n    const ratio = Math.max(1, Math.sqrt(width * height / 1e6)),\n          w = ~~((width + 2 * padding + ratio) / ratio),\n          h = ~~((height + 2 * padding + ratio) / ratio),\n          scale = _ => ~~((_ + padding) / ratio);\n\n    scale.invert = _ => _ * ratio - padding;\n\n    scale.bitmap = () => Bitmap(w, h);\n\n    scale.ratio = ratio;\n    scale.padding = padding;\n    scale.width = width;\n    scale.height = height;\n    return scale;\n  }\n\n  function placeAreaLabelNaive ($, bitmaps, avoidBaseMark, markIndex) {\n    const width = $.width,\n          height = $.height; // try to place a label within an input area mark\n\n    return function (d) {\n      const items = d.datum.datum.items[markIndex].items,\n            // area points\n      n = items.length,\n            // number of points\n      textHeight = d.datum.fontSize,\n            // label width\n      textWidth = vegaScenegraph.textMetrics.width(d.datum, d.datum.text); // label height\n\n      let maxAreaWidth = 0,\n          x1,\n          x2,\n          y1,\n          y2,\n          x,\n          y,\n          areaWidth; // for each area sample point\n\n      for (let i = 0; i < n; ++i) {\n        x1 = items[i].x;\n        y1 = items[i].y;\n        x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n        y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n        x = (x1 + x2) / 2;\n        y = (y1 + y2) / 2;\n        areaWidth = Math.abs(x2 - x1 + y2 - y1);\n\n        if (areaWidth >= maxAreaWidth) {\n          maxAreaWidth = areaWidth;\n          d.x = x;\n          d.y = y;\n        }\n      }\n\n      x = textWidth / 2;\n      y = textHeight / 2;\n      x1 = d.x - x;\n      x2 = d.x + x;\n      y1 = d.y - y;\n      y2 = d.y + y;\n      d.align = 'center';\n\n      if (x1 < 0 && x2 <= width) {\n        d.align = 'left';\n      } else if (0 <= x1 && width < x2) {\n        d.align = 'right';\n      }\n\n      d.baseline = 'middle';\n\n      if (y1 < 0 && y2 <= height) {\n        d.baseline = 'top';\n      } else if (0 <= y1 && height < y2) {\n        d.baseline = 'bottom';\n      }\n\n      return true;\n    };\n  }\n\n  function outOfBounds(x, y, textWidth, textHeight, width, height) {\n    let r = textWidth / 2;\n    return x - r < 0 || x + r > width || y - (r = textHeight / 2) < 0 || y + r > height;\n  }\n\n  function _outOfBounds() {\n    return false;\n  }\n\n  function collision($, x, y, textHeight, textWidth, h, bm0, bm1) {\n    const w = textWidth * h / (textHeight * 2),\n          x1 = $(x - w),\n          x2 = $(x + w),\n          y1 = $(y - (h = h / 2)),\n          y2 = $(y + h);\n    return bm0.outOfBounds(x1, y1, x2, y2) || bm0.getRange(x1, y1, x2, y2) || bm1 && bm1.getRange(x1, y1, x2, y2);\n  }\n\n  function _collision($, x, y, textHeight, textWidth, h, bm0, bm1) {\n    const w = textWidth * h / (textHeight * 2);\n    let x1 = $(x - w),\n        x2 = $(x + w),\n        y1 = $(y - (h = h / 2)),\n        y2 = $(y + h);\n    x1 = x1 > 0 ? x1 : 0;\n    y1 = y1 > 0 ? y1 : 0;\n    x2 = x2 < $.width ? x2 : $.width - 1;\n    y2 = y2 < $.height ? y2 : $.height - 1;\n    return bm0.getRange(x1, y1, x2, y2) || bm1 && bm1.getRange(x1, y1, x2, y2);\n  }\n\n  function getTests(infPadding) {\n    return infPadding ? [_collision, _outOfBounds] : [collision, outOfBounds];\n  }\n\n  function placeAreaLabelReducedSearch ($, bitmaps, avoidBaseMark, markIndex, infPadding) {\n    const width = $.width,\n          height = $.height,\n          [collision, outOfBounds] = getTests(infPadding),\n          bm0 = bitmaps[0],\n          // where labels have been placed\n    bm1 = bitmaps[1]; // area outlines\n\n    function tryLabel(_x, _y, maxSize, textWidth, textHeight) {\n      const x = $.invert(_x),\n            y = $.invert(_y);\n      let lo = maxSize,\n          hi = height,\n          mid;\n\n      if (!outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, lo, bm0, bm1) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n        // if the label fits at the current sample point,\n        // perform binary search to find the largest font size that fits\n        while (hi - lo >= 1) {\n          mid = (lo + hi) / 2;\n\n          if (collision($, x, y, textHeight, textWidth, mid, bm0, bm1)) {\n            hi = mid;\n          } else {\n            lo = mid;\n          }\n        } // place label if current lower bound exceeds prior max font size\n\n\n        if (lo > maxSize) {\n          return [x, y, lo, true];\n        }\n      }\n    } // try to place a label within an input area mark\n\n\n    return function (d) {\n      const items = d.datum.datum.items[markIndex].items,\n            // area points\n      n = items.length,\n            // number of points\n      textHeight = d.datum.fontSize,\n            // label width\n      textWidth = vegaScenegraph.textMetrics.width(d.datum, d.datum.text); // label height\n\n      let maxSize = avoidBaseMark ? textHeight : 0,\n          labelPlaced = false,\n          labelPlaced2 = false,\n          maxAreaWidth = 0,\n          x1,\n          x2,\n          y1,\n          y2,\n          x,\n          y,\n          _x,\n          _y,\n          _x1,\n          _xMid,\n          _x2,\n          _y1,\n          _yMid,\n          _y2,\n          areaWidth,\n          result,\n          swapTmp; // for each area sample point\n\n\n      for (let i = 0; i < n; ++i) {\n        x1 = items[i].x;\n        y1 = items[i].y;\n        x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n        y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n\n        if (x1 > x2) {\n          swapTmp = x1;\n          x1 = x2;\n          x2 = swapTmp;\n        }\n\n        if (y1 > y2) {\n          swapTmp = y1;\n          y1 = y2;\n          y2 = swapTmp;\n        }\n\n        _x1 = $(x1);\n        _x2 = $(x2);\n        _xMid = ~~((_x1 + _x2) / 2);\n        _y1 = $(y1);\n        _y2 = $(y2);\n        _yMid = ~~((_y1 + _y2) / 2); // search along the line from mid point between the 2 border to lower border\n\n        for (_x = _xMid; _x >= _x1; --_x) {\n          for (_y = _yMid; _y >= _y1; --_y) {\n            result = tryLabel(_x, _y, maxSize, textWidth, textHeight);\n\n            if (result) {\n              [d.x, d.y, maxSize, labelPlaced] = result;\n            }\n          }\n        } // search along the line from mid point between the 2 border to upper border\n\n\n        for (_x = _xMid; _x <= _x2; ++_x) {\n          for (_y = _yMid; _y <= _y2; ++_y) {\n            result = tryLabel(_x, _y, maxSize, textWidth, textHeight);\n\n            if (result) {\n              [d.x, d.y, maxSize, labelPlaced] = result;\n            }\n          }\n        } // place label at slice center if not placed through other means\n        // and if we're not avoiding overlap with other areas\n\n\n        if (!labelPlaced && !avoidBaseMark) {\n          // one span is zero, hence we can add\n          areaWidth = Math.abs(x2 - x1 + y2 - y1);\n          x = (x1 + x2) / 2;\n          y = (y1 + y2) / 2; // place label if it fits and improves the max area width\n\n          if (areaWidth >= maxAreaWidth && !outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n            maxAreaWidth = areaWidth;\n            d.x = x;\n            d.y = y;\n            labelPlaced2 = true;\n          }\n        }\n      } // record current label placement information, update label bitmap\n\n\n      if (labelPlaced || labelPlaced2) {\n        x = textWidth / 2;\n        y = textHeight / 2;\n        bm0.setRange($(d.x - x), $(d.y - y), $(d.x + x), $(d.y + y));\n        d.align = 'center';\n        d.baseline = 'middle';\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n\n  const X_DIR = [-1, -1, 1, 1];\n  const Y_DIR = [-1, 1, -1, 1];\n  function placeAreaLabelFloodFill ($, bitmaps, avoidBaseMark, markIndex, infPadding) {\n    const width = $.width,\n          height = $.height,\n          [collision, outOfBounds] = getTests(infPadding),\n          bm0 = bitmaps[0],\n          // where labels have been placed\n    bm1 = bitmaps[1],\n          // area outlines\n    bm2 = $.bitmap(); // flood-fill visitations\n    // try to place a label within an input area mark\n\n    return function (d) {\n      const items = d.datum.datum.items[markIndex].items,\n            // area points\n      n = items.length,\n            // number of points\n      textHeight = d.datum.fontSize,\n            // label width\n      textWidth = vegaScenegraph.textMetrics.width(d.datum, d.datum.text),\n            // label height\n      stack = []; // flood fill stack\n\n      let maxSize = avoidBaseMark ? textHeight : 0,\n          labelPlaced = false,\n          labelPlaced2 = false,\n          maxAreaWidth = 0,\n          x1,\n          x2,\n          y1,\n          y2,\n          x,\n          y,\n          _x,\n          _y,\n          lo,\n          hi,\n          mid,\n          areaWidth; // for each area sample point\n\n\n      for (let i = 0; i < n; ++i) {\n        x1 = items[i].x;\n        y1 = items[i].y;\n        x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n        y2 = items[i].y2 === undefined ? y1 : items[i].y2; // add scaled center point to stack\n\n        stack.push([$((x1 + x2) / 2), $((y1 + y2) / 2)]); // perform flood fill, visit points\n\n        while (stack.length) {\n          [_x, _y] = stack.pop(); // exit if point already marked\n\n          if (bm0.get(_x, _y) || bm1.get(_x, _y) || bm2.get(_x, _y)) continue; // mark point in flood fill bitmap\n          // add search points for all (in bound) directions\n\n          bm2.set(_x, _y);\n\n          for (let j = 0; j < 4; ++j) {\n            x = _x + X_DIR[j];\n            y = _y + Y_DIR[j];\n            if (!bm2.outOfBounds(x, y, x, y)) stack.push([x, y]);\n          } // unscale point back to x, y space\n\n\n          x = $.invert(_x);\n          y = $.invert(_y);\n          lo = maxSize;\n          hi = height; // TODO: make this bound smaller\n\n          if (!outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, lo, bm0, bm1) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n            // if the label fits at the current sample point,\n            // perform binary search to find the largest font size that fits\n            while (hi - lo >= 1) {\n              mid = (lo + hi) / 2;\n\n              if (collision($, x, y, textHeight, textWidth, mid, bm0, bm1)) {\n                hi = mid;\n              } else {\n                lo = mid;\n              }\n            } // place label if current lower bound exceeds prior max font size\n\n\n            if (lo > maxSize) {\n              d.x = x;\n              d.y = y;\n              maxSize = lo;\n              labelPlaced = true;\n            }\n          }\n        } // place label at slice center if not placed through other means\n        // and if we're not avoiding overlap with other areas\n\n\n        if (!labelPlaced && !avoidBaseMark) {\n          // one span is zero, hence we can add\n          areaWidth = Math.abs(x2 - x1 + y2 - y1);\n          x = (x1 + x2) / 2;\n          y = (y1 + y2) / 2; // place label if it fits and improves the max area width\n\n          if (areaWidth >= maxAreaWidth && !outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n            maxAreaWidth = areaWidth;\n            d.x = x;\n            d.y = y;\n            labelPlaced2 = true;\n          }\n        }\n      } // record current label placement information, update label bitmap\n\n\n      if (labelPlaced || labelPlaced2) {\n        x = textWidth / 2;\n        y = textHeight / 2;\n        bm0.setRange($(d.x - x), $(d.y - y), $(d.x + x), $(d.y + y));\n        d.align = 'center';\n        d.baseline = 'middle';\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n\n  const Aligns = ['right', 'center', 'left'],\n        Baselines = ['bottom', 'middle', 'top'];\n  function placeMarkLabel ($, bitmaps, anchors, offsets, infPadding) {\n    const width = $.width,\n          height = $.height,\n          bm0 = bitmaps[0],\n          bm1 = bitmaps[1],\n          n = offsets.length;\n    return function (d) {\n      const boundary = d.boundary,\n            textHeight = d.datum.fontSize; // can not be placed if the mark is not visible in the graph bound\n\n      if (!infPadding && (boundary[2] < 0 || boundary[5] < 0 || boundary[0] > width || boundary[3] > height)) {\n        return false;\n      }\n\n      let textWidth = 0,\n          dx,\n          dy,\n          isInside,\n          sizeFactor,\n          insideFactor,\n          x1,\n          x2,\n          y1,\n          y2,\n          xc,\n          yc,\n          _x1,\n          _x2,\n          _y1,\n          _y2; // for each anchor and offset\n\n\n      for (let i = 0; i < n; ++i) {\n        dx = (anchors[i] & 0x3) - 1;\n        dy = (anchors[i] >>> 0x2 & 0x3) - 1;\n        isInside = dx === 0 && dy === 0 || offsets[i] < 0;\n        sizeFactor = dx && dy ? Math.SQRT1_2 : 1;\n        insideFactor = offsets[i] < 0 ? -1 : 1;\n        x1 = boundary[1 + dx] + offsets[i] * dx * sizeFactor;\n        yc = boundary[4 + dy] + insideFactor * textHeight * dy / 2 + offsets[i] * dy * sizeFactor;\n        y1 = yc - textHeight / 2;\n        y2 = yc + textHeight / 2;\n        _x1 = $(x1);\n        _y1 = $(y1);\n        _y2 = $(y2);\n\n        if (infPadding) {\n          _x1 = _x1 < 0 ? 0 : _x1;\n          _y1 = _y1 < 0 ? 0 : _y1;\n          _y2 = _y2 >= $.height ? $.height - 1 : _y2;\n        }\n\n        if (!textWidth) {\n          // to avoid finding width of text label,\n          if (!test(_x1, _x1, _y1, _y2, bm0, bm1, x1, x1, y1, y2, boundary, isInside)) {\n            // skip this anchor/offset option if we fail to place a label with 1px width\n            continue;\n          } else {\n            // Otherwise, find the label width\n            textWidth = vegaScenegraph.textMetrics.width(d.datum, d.datum.text);\n          }\n        }\n\n        xc = x1 + insideFactor * textWidth * dx / 2;\n        x1 = xc - textWidth / 2;\n        x2 = xc + textWidth / 2;\n        _x1 = $(x1);\n        _x2 = $(x2);\n\n        if (infPadding) {\n          _x1 = _x1 < 0 ? 0 : _x1;\n          _x2 = _x2 >= $.width ? $.width - 1 : _x2;\n        }\n\n        if (test(_x1, _x2, _y1, _y2, bm0, bm1, x1, x2, y1, y2, boundary, isInside)) {\n          // place label if the position is placeable\n          d.x = !dx ? xc : dx * insideFactor < 0 ? x2 : x1;\n          d.y = !dy ? yc : dy * insideFactor < 0 ? y2 : y1;\n          d.align = Aligns[dx * insideFactor + 1];\n          d.baseline = Baselines[dy * insideFactor + 1];\n          bm0.setRange(_x1, _y1, _x2, _y2);\n          return true;\n        }\n      }\n\n      return false;\n    };\n  } // Test if a label with the given dimensions can be added without overlap\n\n  function test(_x1, _x2, _y1, _y2, bm0, bm1, x1, x2, y1, y2, boundary, isInside) {\n    return !(bm0.outOfBounds(_x1, _y1, _x2, _y2) || (isInside && bm1 ? bm1.getRange(_x1, _y1, _x2, _y2) || !isInMarkBound(x1, y1, x2, y2, boundary) : bm0.getRange(_x1, _y1, _x2, _y2)));\n  }\n\n  function isInMarkBound(x1, y1, x2, y2, boundary) {\n    return boundary[0] <= x1 && x2 <= boundary[2] && boundary[3] <= y1 && y2 <= boundary[5];\n  }\n\n  const TOP = 0x0,\n        MIDDLE = 0x4,\n        BOTTOM = 0x8,\n        LEFT = 0x0,\n        CENTER = 0x1,\n        RIGHT = 0x2; // Mapping from text anchor to number representation\n\n  const anchorCode = {\n    'top-left': TOP + LEFT,\n    'top': TOP + CENTER,\n    'top-right': TOP + RIGHT,\n    'left': MIDDLE + LEFT,\n    'middle': MIDDLE + CENTER,\n    'right': MIDDLE + RIGHT,\n    'bottom-left': BOTTOM + LEFT,\n    'bottom': BOTTOM + CENTER,\n    'bottom-right': BOTTOM + RIGHT\n  };\n  const placeAreaLabel = {\n    'naive': placeAreaLabelNaive,\n    'reduced-search': placeAreaLabelReducedSearch,\n    'floodfill': placeAreaLabelFloodFill\n  };\n  function labelLayout (texts, size, compare, offset, anchor, avoidMarks, avoidBaseMark, lineAnchor, markIndex, padding, method) {\n    // early exit for empty data\n    if (!texts.length) return texts;\n    const positions = Math.max(offset.length, anchor.length),\n          offsets = getOffsets(offset, positions),\n          anchors = getAnchors(anchor, positions),\n          marktype = markType(texts[0].datum),\n          grouptype = marktype === 'group' && texts[0].datum.items[markIndex].marktype,\n          isGroupArea = grouptype === 'area',\n          boundary = markBoundary(marktype, grouptype, lineAnchor, markIndex),\n          infPadding = padding === null || padding === Infinity,\n          $ = scaler(size[0], size[1], infPadding ? 0 : padding),\n          isNaiveGroupArea = isGroupArea && method === 'naive'; // prepare text mark data for placing\n\n    const data = texts.map(d => ({\n      datum: d,\n      opacity: 0,\n      x: undefined,\n      y: undefined,\n      align: undefined,\n      baseline: undefined,\n      boundary: boundary(d)\n    }));\n    let bitmaps;\n\n    if (!isNaiveGroupArea) {\n      // sort labels in priority order, if comparator is provided\n      if (compare) {\n        data.sort((a, b) => compare(a.datum, b.datum));\n      } // flag indicating if label can be placed inside its base mark\n\n\n      let labelInside = false;\n\n      for (let i = 0; i < anchors.length && !labelInside; ++i) {\n        // label inside if anchor is at center\n        // label inside if offset to be inside the mark bound\n        labelInside = anchors[i] === 0x5 || offsets[i] < 0;\n      } // extract data information from base mark when base mark is to be avoided\n      // base mark is implicitly avoided if it is a group area\n\n\n      if (marktype && (avoidBaseMark || isGroupArea)) {\n        avoidMarks = [texts.map(d => d.datum)].concat(avoidMarks);\n      } // generate bitmaps for layout calculation\n\n\n      bitmaps = avoidMarks.length ? markBitmaps($, avoidMarks, labelInside, isGroupArea) : baseBitmaps($, avoidBaseMark && data);\n    } // generate label placement function\n\n\n    const place = isGroupArea ? placeAreaLabel[method]($, bitmaps, avoidBaseMark, markIndex, infPadding) : placeMarkLabel($, bitmaps, anchors, offsets, infPadding); // place all labels\n\n    data.forEach(d => d.opacity = +place(d));\n    return data;\n  }\n\n  function getOffsets(_, count) {\n    const offsets = new Float64Array(count),\n          n = _.length;\n\n    for (let i = 0; i < n; ++i) offsets[i] = _[i] || 0;\n\n    for (let i = n; i < count; ++i) offsets[i] = offsets[n - 1];\n\n    return offsets;\n  }\n\n  function getAnchors(_, count) {\n    const anchors = new Int8Array(count),\n          n = _.length;\n\n    for (let i = 0; i < n; ++i) anchors[i] |= anchorCode[_[i]];\n\n    for (let i = n; i < count; ++i) anchors[i] = anchors[n - 1];\n\n    return anchors;\n  }\n\n  function markType(item) {\n    return item && item.mark && item.mark.marktype;\n  }\n  /**\n   * Factory function for function for getting base mark boundary, depending\n   * on mark and group type. When mark type is undefined, line or area: boundary\n   * is the coordinate of each data point. When base mark is grouped line,\n   * boundary is either at the beginning or end of the line depending on the\n   * value of lineAnchor. Otherwise, use bounds of base mark.\n   */\n\n\n  function markBoundary(marktype, grouptype, lineAnchor, markIndex) {\n    const xy = d => [d.x, d.x, d.x, d.y, d.y, d.y];\n\n    if (!marktype) {\n      return xy; // no reactive geometry\n    } else if (marktype === 'line' || marktype === 'area') {\n      return d => xy(d.datum);\n    } else if (grouptype === 'line') {\n      return d => {\n        const items = d.datum.items[markIndex].items;\n        return xy(items.length ? items[lineAnchor === 'start' ? 0 : items.length - 1] : {\n          x: NaN,\n          y: NaN\n        });\n      };\n    } else {\n      return d => {\n        const b = d.datum.bounds;\n        return [b.x1, (b.x1 + b.x2) / 2, b.x2, b.y1, (b.y1 + b.y2) / 2, b.y2];\n      };\n    }\n  }\n\n  const Output = ['x', 'y', 'opacity', 'align', 'baseline'];\n  const Anchors = ['top-left', 'left', 'bottom-left', 'top', 'bottom', 'top-right', 'right', 'bottom-right'];\n  /**\n   * Compute text label layout to annotate marks.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<number>} params.size - The size of the layout, provided as a [width, height] array.\n   * @param {function(*,*): number} [params.sort] - An optional\n   *   comparator function for sorting label data in priority order.\n   * @param {Array<string>} [params.anchor] - Label anchor points relative to the base mark bounding box.\n   *   The available options are 'top-left', 'left', 'bottom-left', 'top',\n   *   'bottom', 'top-right', 'right', 'bottom-right', 'middle'.\n   * @param {Array<number>} [params.offset] - Label offsets (in pixels) from the base mark bounding box.\n   *   This parameter is parallel to the list of anchor points.\n   * @param {number | null} [params.padding=0] - The amount (in pixels) that a label may exceed the layout size.\n   *   If this parameter is null, a label may exceed the layout size without any boundary.\n   * @param {string} [params.lineAnchor='end'] - For group line mark labels only, indicates the anchor\n   *   position for labels. One of 'start' or 'end'.\n   * @param {string} [params.markIndex=0] - For group mark labels only, an index indicating\n   *   which mark within the group should be labeled.\n   * @param {Array<number>} [params.avoidMarks] - A list of additional mark names for which the label\n   *   layout should avoid overlap.\n   * @param {boolean} [params.avoidBaseMark=true] - Boolean flag indicating if labels should avoid\n   *   overlap with the underlying base mark being labeled.\n   * @param {string} [params.method='naive'] - For area make labels only, a method for\n   *   place labels. One of 'naive', 'reduced-search', or 'floodfill'.\n   * @param {Array<string>} [params.as] - The output fields written by the transform.\n   *   The default is ['x', 'y', 'opacity', 'align', 'baseline'].\n   */\n\n  function Label(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Label.Definition = {\n    type: 'Label',\n    metadata: {\n      modifies: true\n    },\n    params: [{\n      name: 'size',\n      type: 'number',\n      array: true,\n      length: 2,\n      required: true\n    }, {\n      name: 'sort',\n      type: 'compare'\n    }, {\n      name: 'anchor',\n      type: 'string',\n      array: true,\n      default: Anchors\n    }, {\n      name: 'offset',\n      type: 'number',\n      array: true,\n      default: [1]\n    }, {\n      name: 'padding',\n      type: 'number',\n      default: 0,\n      null: true\n    }, {\n      name: 'lineAnchor',\n      type: 'string',\n      values: ['start', 'end'],\n      default: 'end'\n    }, {\n      name: 'markIndex',\n      type: 'number',\n      default: 0\n    }, {\n      name: 'avoidBaseMark',\n      type: 'boolean',\n      default: true\n    }, {\n      name: 'avoidMarks',\n      type: 'data',\n      array: true\n    }, {\n      name: 'method',\n      type: 'string',\n      default: 'naive'\n    }, {\n      name: 'as',\n      type: 'string',\n      array: true,\n      length: Output.length,\n      default: Output\n    }]\n  };\n  vegaUtil.inherits(Label, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      function modp(param) {\n        const p = _[param];\n        return vegaUtil.isFunction(p) && pulse.modified(p.fields);\n      }\n\n      const mod = _.modified();\n\n      if (!(mod || pulse.changed(pulse.ADD_REM) || modp('sort'))) return;\n\n      if (!_.size || _.size.length !== 2) {\n        vegaUtil.error('Size parameter should be specified as a [width, height] array.');\n      }\n\n      const as = _.as || Output; // run label layout\n\n      labelLayout(pulse.materialize(pulse.SOURCE).source || [], _.size, _.sort, vegaUtil.array(_.offset == null ? 1 : _.offset), vegaUtil.array(_.anchor || Anchors), _.avoidMarks || [], _.avoidBaseMark !== false, _.lineAnchor || 'end', _.markIndex || 0, _.padding === undefined ? 0 : _.padding, _.method || 'naive').forEach(l => {\n        // write layout results to data stream\n        const t = l.datum;\n        t[as[0]] = l.x;\n        t[as[1]] = l.y;\n        t[as[2]] = l.opacity;\n        t[as[3]] = l.align;\n        t[as[4]] = l.baseline;\n      });\n      return pulse.reflow(mod).modifies(as);\n    }\n\n  });\n\n  exports.label = Label;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","vegaCanvas","vegaDataflow","vegaScenegraph","vegaUtil","baseBitmaps","$","data","bitmap","forEach","d","set","boundary","undefined","markBitmaps","avoidMarks","labelInside","isGroupArea","width","height","border","context","canvas","getContext","items","draw","buffer","Uint32Array","getImageData","layer1","layer2","x","y","alpha","ALPHA_MASK","u","v","INSIDE_OPACITY_IN_ALPHA","interior","length","type","mark","marktype","group","Marks","map","prepare","source","item","rederive","stroke","strokeOpacity","fill","fillOpacity","INSIDE_OPACITY","strokeWidth","Bitmap","w","h","array","SIZE","get","index","DIV","MOD","clear","mask","getRange","x2","y2","start","end","indexStart","indexEnd","r","RIGHT0","RIGHT1","i","setRange","clearRange","outOfBounds","scaler","padding","ratio","Math","max","sqrt","scale","_","invert","scale.invert","scale.bitmap","textWidth","textHeight","_outOfBounds","collision","bm0","bm1","x1","y1","_collision","placeMarkLabel","bitmaps","anchors","offsets","infPadding","n","datum","fontSize","dx","dy","isInside","sizeFactor","insideFactor","xc","yc","_x1","_x2","_y1","_y2","SQRT1_2","textMetrics","text","align","Aligns","baseline","Baselines","labelLayout","texts","size","compare","offset","anchor","avoidBaseMark","lineAnchor","markIndex","method","positions","getOffsets","getAnchors","markType","grouptype","markBoundary","Infinity","isNaiveGroupArea","opacity","sort","a","b","concat","place","placeAreaLabel","count","Float64Array","Int8Array","anchorCode","xy","NaN","bounds","Label","params","Transform","call","X_DIR","Y_DIR","placeAreaLabelNaive","maxAreaWidth","areaWidth","abs","placeAreaLabelReducedSearch","tryLabel","_x","_y","maxSize","lo","hi","mid","labelPlaced","labelPlaced2","_xMid","_yMid","result","swapTmp","placeAreaLabelFloodFill","bm2","stack","push","pop","j","Output","Anchors","Definition","metadata","modifies","name","required","default","null","values","inherits","transform","pulse","modp","param","p","isFunction","modified","fields","mod","changed","ADD_REM","error","as","materialize","SOURCE","l","t","reflow","label","Object","defineProperty","value"]
}
