{
"version":3,
"file":"module$node_modules$vega_functions$build$vega_functions.js",
"lineCount":39,
"mappings":"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",
"sources":["node_modules/vega-functions/build/vega-functions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_functions$build$vega_functions\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('vega-expression'), require('d3-geo'), require('d3-color'), require('vega-dataflow'), require('vega-scale'), require('vega-scenegraph'), require('vega-selections'), require('vega-statistics'), require('vega-time'), require('d3-array')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'vega-expression', 'd3-geo', 'd3-color', 'vega-dataflow', 'vega-scale', 'vega-scenegraph', 'vega-selections', 'vega-statistics', 'vega-time', 'd3-array'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.vega, global.d3, global.d3, global.vega, global.vega, global.vega, global.vega, global.vega, global.vega, global.d3));\n}(this, (function (exports, vegaUtil, vegaExpression, d3Geo, d3Color, vegaDataflow, vegaScale, vegaScenegraph, vegaSelections, vegaStatistics, vegaTime, d3Array) { 'use strict';\n\n  function data(name) {\n    const data = this.context.data[name];\n    return data ? data.values.value : [];\n  }\n  function indata(name, field, value) {\n    const index = this.context.data[name]['index:' + field],\n          entry = index ? index.value.get(value) : undefined;\n    return entry ? entry.count : entry;\n  }\n  function setdata(name, tuples) {\n    const df = this.context.dataflow,\n          data = this.context.data[name],\n          input = data.input;\n    df.pulse(input, df.changeset().remove(vegaUtil.truthy).insert(tuples));\n    return 1;\n  }\n\n  function encode (item, name, retval) {\n    if (item) {\n      const df = this.context.dataflow,\n            target = item.mark.source;\n      df.pulse(target, df.changeset().encode(item, name));\n    }\n\n    return retval !== undefined ? retval : item;\n  }\n\n  const wrap = method => function (value, spec) {\n    const locale = this.context.dataflow.locale();\n    return locale[method](spec)(value);\n  };\n\n  const format = wrap('format');\n  const timeFormat = wrap('timeFormat');\n  const utcFormat = wrap('utcFormat');\n  const timeParse = wrap('timeParse');\n  const utcParse = wrap('utcParse');\n  const dateObj = new Date(2000, 0, 1);\n\n  function time(month, day, specifier) {\n    if (!Number.isInteger(month) || !Number.isInteger(day)) return '';\n    dateObj.setYear(2000);\n    dateObj.setMonth(month);\n    dateObj.setDate(day);\n    return timeFormat.call(this, dateObj, specifier);\n  }\n\n  function monthFormat(month) {\n    return time.call(this, month, 1, '%B');\n  }\n  function monthAbbrevFormat(month) {\n    return time.call(this, month, 1, '%b');\n  }\n  function dayFormat(day) {\n    return time.call(this, 0, 2 + day, '%A');\n  }\n  function dayAbbrevFormat(day) {\n    return time.call(this, 0, 2 + day, '%a');\n  }\n\n  const DataPrefix = ':';\n  const IndexPrefix = '@';\n  const ScalePrefix = '%';\n  const SignalPrefix = '$';\n\n  function dataVisitor(name, args, scope, params) {\n    if (args[0].type !== vegaExpression.Literal) {\n      vegaUtil.error('First argument to data functions must be a string literal.');\n    }\n\n    const data = args[0].value,\n          dataName = DataPrefix + data;\n\n    if (!vegaUtil.hasOwnProperty(dataName, params)) {\n      try {\n        params[dataName] = scope.getData(data).tuplesRef();\n      } catch (err) {// if data set does not exist, there's nothing to track\n      }\n    }\n  }\n  function indataVisitor(name, args, scope, params) {\n    if (args[0].type !== vegaExpression.Literal) vegaUtil.error('First argument to indata must be a string literal.');\n    if (args[1].type !== vegaExpression.Literal) vegaUtil.error('Second argument to indata must be a string literal.');\n    const data = args[0].value,\n          field = args[1].value,\n          indexName = IndexPrefix + field;\n\n    if (!vegaUtil.hasOwnProperty(indexName, params)) {\n      params[indexName] = scope.getData(data).indataRef(scope, field);\n    }\n  }\n  function scaleVisitor(name, args, scope, params) {\n    if (args[0].type === vegaExpression.Literal) {\n      // add scale dependency\n      addScaleDependency(scope, params, args[0].value);\n    } else {\n      // indirect scale lookup; add all scales as parameters\n      for (name in scope.scales) {\n        addScaleDependency(scope, params, name);\n      }\n    }\n  }\n\n  function addScaleDependency(scope, params, name) {\n    const scaleName = ScalePrefix + name;\n\n    if (!vegaUtil.hasOwnProperty(params, scaleName)) {\n      try {\n        params[scaleName] = scope.scaleRef(name);\n      } catch (err) {// TODO: error handling? warning?\n      }\n    }\n  }\n\n  function getScale(name, ctx) {\n    let s;\n    return vegaUtil.isFunction(name) ? name : vegaUtil.isString(name) ? (s = ctx.scales[name]) && s.value : undefined;\n  }\n  function internalScaleFunctions(codegen, fnctx, visitors) {\n    // add helper method to the 'this' expression function context\n    fnctx.__bandwidth = s => s && s.bandwidth ? s.bandwidth() : 0; // register AST visitors for internal scale functions\n\n\n    visitors._bandwidth = scaleVisitor;\n    visitors._range = scaleVisitor;\n    visitors._scale = scaleVisitor; // resolve scale reference directly to the signal hash argument\n\n    const ref = arg => '_[' + (arg.type === vegaExpression.Literal ? vegaUtil.stringValue(ScalePrefix + arg.value) : vegaUtil.stringValue(ScalePrefix) + '+' + codegen(arg)) + ']'; // define and return internal scale function code generators\n    // these internal functions are called by mark encoders\n\n\n    return {\n      _bandwidth: args => `this.__bandwidth(${ref(args[0])})`,\n      _range: args => `${ref(args[0])}.range()`,\n      _scale: args => `${ref(args[0])}(${codegen(args[1])})`\n    };\n  }\n\n  function geoMethod(methodName, globalMethod) {\n    return function (projection, geojson, group) {\n      if (projection) {\n        // projection defined, use it\n        const p = getScale(projection, (group || this).context);\n        return p && p.path[methodName](geojson);\n      } else {\n        // projection undefined, use global method\n        return globalMethod(geojson);\n      }\n    };\n  }\n\n  const geoArea = geoMethod('area', d3Geo.geoArea);\n  const geoBounds = geoMethod('bounds', d3Geo.geoBounds);\n  const geoCentroid = geoMethod('centroid', d3Geo.geoCentroid);\n\n  function inScope (item) {\n    const group = this.context.group;\n    let value = false;\n    if (group) while (item) {\n      if (item === group) {\n        value = true;\n        break;\n      }\n\n      item = item.mark.group;\n    }\n    return value;\n  }\n\n  function log(df, method, args) {\n    try {\n      df[method].apply(df, ['EXPRESSION'].concat([].slice.call(args)));\n    } catch (err) {\n      df.warn(err);\n    }\n\n    return args[args.length - 1];\n  }\n\n  function warn() {\n    return log(this.context.dataflow, 'warn', arguments);\n  }\n  function info() {\n    return log(this.context.dataflow, 'info', arguments);\n  }\n  function debug() {\n    return log(this.context.dataflow, 'debug', arguments);\n  }\n\n  function channel_luminance_value(channelValue) {\n    const val = channelValue / 255;\n\n    if (val <= 0.03928) {\n      return val / 12.92;\n    }\n\n    return Math.pow((val + 0.055) / 1.055, 2.4);\n  }\n\n  function luminance(color) {\n    const c = d3Color.rgb(color),\n          r = channel_luminance_value(c.r),\n          g = channel_luminance_value(c.g),\n          b = channel_luminance_value(c.b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  } // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n\n  function contrast(color1, color2) {\n    const lum1 = luminance(color1),\n          lum2 = luminance(color2),\n          lumL = Math.max(lum1, lum2),\n          lumD = Math.min(lum1, lum2);\n    return (lumL + 0.05) / (lumD + 0.05);\n  }\n\n  function merge () {\n    const args = [].slice.call(arguments);\n    args.unshift({});\n    return vegaUtil.extend(...args);\n  }\n\n  function equal(a, b) {\n    return a === b || a !== a && b !== b ? true : vegaUtil.isArray(a) ? vegaUtil.isArray(b) && a.length === b.length ? equalArray(a, b) : false : vegaUtil.isObject(a) && vegaUtil.isObject(b) ? equalObject(a, b) : false;\n  }\n\n  function equalArray(a, b) {\n    for (let i = 0, n = a.length; i < n; ++i) {\n      if (!equal(a[i], b[i])) return false;\n    }\n\n    return true;\n  }\n\n  function equalObject(a, b) {\n    for (const key in a) {\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  function removePredicate(props) {\n    return _ => equalObject(props, _);\n  }\n\n  function modify (name, insert, remove, toggle, modify, values) {\n    const df = this.context.dataflow,\n          data = this.context.data[name],\n          input = data.input,\n          stamp = df.stamp();\n    let changes = data.changes,\n        predicate,\n        key;\n\n    if (df._trigger === false || !(input.value.length || insert || toggle)) {\n      // nothing to do!\n      return 0;\n    }\n\n    if (!changes || changes.stamp < stamp) {\n      data.changes = changes = df.changeset();\n      changes.stamp = stamp;\n      df.runAfter(() => {\n        data.modified = true;\n        df.pulse(input, changes).run();\n      }, true, 1);\n    }\n\n    if (remove) {\n      predicate = remove === true ? vegaUtil.truthy : vegaUtil.isArray(remove) || vegaDataflow.isTuple(remove) ? remove : removePredicate(remove);\n      changes.remove(predicate);\n    }\n\n    if (insert) {\n      changes.insert(insert);\n    }\n\n    if (toggle) {\n      predicate = removePredicate(toggle);\n\n      if (input.value.some(predicate)) {\n        changes.remove(predicate);\n      } else {\n        changes.insert(toggle);\n      }\n    }\n\n    if (modify) {\n      for (key in values) {\n        changes.modify(modify, key, values[key]);\n      }\n    }\n\n    return 1;\n  }\n\n  function pinchDistance(event) {\n    const t = event.touches,\n          dx = t[0].clientX - t[1].clientX,\n          dy = t[0].clientY - t[1].clientY;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n  function pinchAngle(event) {\n    const t = event.touches;\n    return Math.atan2(t[0].clientY - t[1].clientY, t[0].clientX - t[1].clientX);\n  }\n\n  const accessors = {};\n  function pluck (data, name) {\n    const accessor = accessors[name] || (accessors[name] = vegaUtil.field(name));\n    return vegaUtil.isArray(data) ? data.map(accessor) : accessor(data);\n  }\n\n  function array(seq) {\n    return vegaUtil.isArray(seq) || ArrayBuffer.isView(seq) ? seq : null;\n  }\n\n  function sequence(seq) {\n    return array(seq) || (vegaUtil.isString(seq) ? seq : null);\n  }\n\n  function join(seq, ...args) {\n    return array(seq).join(...args);\n  }\n  function indexof(seq, ...args) {\n    return sequence(seq).indexOf(...args);\n  }\n  function lastindexof(seq, ...args) {\n    return sequence(seq).lastIndexOf(...args);\n  }\n  function slice(seq, ...args) {\n    return sequence(seq).slice(...args);\n  }\n  function replace(str, pattern, repl) {\n    if (vegaUtil.isFunction(repl)) vegaUtil.error('Function argument passed to replace.');\n    return String(str).replace(pattern, repl);\n  }\n  function reverse(seq) {\n    return array(seq).slice().reverse();\n  }\n\n  function bandspace(count, paddingInner, paddingOuter) {\n    return vegaScale.bandSpace(count || 0, paddingInner || 0, paddingOuter || 0);\n  }\n  function bandwidth(name, group) {\n    const s = getScale(name, (group || this).context);\n    return s && s.bandwidth ? s.bandwidth() : 0;\n  }\n  function copy(name, group) {\n    const s = getScale(name, (group || this).context);\n    return s ? s.copy() : undefined;\n  }\n  function domain(name, group) {\n    const s = getScale(name, (group || this).context);\n    return s ? s.domain() : [];\n  }\n  function invert(name, range, group) {\n    const s = getScale(name, (group || this).context);\n    return !s ? undefined : vegaUtil.isArray(range) ? (s.invertRange || s.invert)(range) : (s.invert || s.invertExtent)(range);\n  }\n  function range(name, group) {\n    const s = getScale(name, (group || this).context);\n    return s && s.range ? s.range() : [];\n  }\n  function scale(name, value, group) {\n    const s = getScale(name, (group || this).context);\n    return s ? s(value) : undefined;\n  }\n\n  function scaleGradient (scale, p0, p1, count, group) {\n    scale = getScale(scale, (group || this).context);\n    const gradient = vegaScenegraph.Gradient(p0, p1);\n    let stops = scale.domain(),\n        min = stops[0],\n        max = vegaUtil.peek(stops),\n        fraction = vegaUtil.identity;\n\n    if (!(max - min)) {\n      // expand scale if domain has zero span, fix #1479\n      scale = (scale.interpolator ? vegaScale.scale('sequential')().interpolator(scale.interpolator()) : vegaScale.scale('linear')().interpolate(scale.interpolate()).range(scale.range())).domain([min = 0, max = 1]);\n    } else {\n      fraction = vegaScale.scaleFraction(scale, min, max);\n    }\n\n    if (scale.ticks) {\n      stops = scale.ticks(+count || 15);\n      if (min !== stops[0]) stops.unshift(min);\n      if (max !== vegaUtil.peek(stops)) stops.push(max);\n    }\n\n    stops.forEach(_ => gradient.stop(fraction(_), scale(_)));\n    return gradient;\n  }\n\n  function geoShape(projection, geojson, group) {\n    const p = getScale(projection, (group || this).context);\n    return function (context) {\n      return p ? p.path.context(context)(geojson) : '';\n    };\n  }\n  function pathShape(path) {\n    let p = null;\n    return function (context) {\n      return context ? vegaScenegraph.pathRender(context, p = p || vegaScenegraph.pathParse(path)) : path;\n    };\n  }\n\n  const datum = d => d.data;\n\n  function treeNodes(name, context) {\n    const tree = data.call(context, name);\n    return tree.root && tree.root.lookup || {};\n  }\n\n  function treePath(name, source, target) {\n    const nodes = treeNodes(name, this),\n          s = nodes[source],\n          t = nodes[target];\n    return s && t ? s.path(t).map(datum) : undefined;\n  }\n  function treeAncestors(name, node) {\n    const n = treeNodes(name, this)[node];\n    return n ? n.ancestors().map(datum) : undefined;\n  }\n\n  const _window = () => typeof window !== 'undefined' && window || null;\n\n  function screen() {\n    const w = _window();\n\n    return w ? w.screen : {};\n  }\n  function windowSize() {\n    const w = _window();\n\n    return w ? [w.innerWidth, w.innerHeight] : [undefined, undefined];\n  }\n  function containerSize() {\n    const view = this.context.dataflow,\n          el = view.container && view.container();\n    return el ? [el.clientWidth, el.clientHeight] : [undefined, undefined];\n  }\n\n  function intersect (b, opt, group) {\n    if (!b) return [];\n    const [u, v] = b,\n          box = new vegaScenegraph.Bounds().set(u[0], u[1], v[0], v[1]),\n          scene = group || this.context.dataflow.scenegraph().root;\n    return vegaScenegraph.intersect(scene, box, filter(opt));\n  }\n\n  function filter(opt) {\n    let p = null;\n\n    if (opt) {\n      const types = vegaUtil.array(opt.marktype),\n            names = vegaUtil.array(opt.markname);\n\n      p = _ => (!types.length || types.some(t => _.marktype === t)) && (!names.length || names.some(s => _.name === s));\n    }\n\n    return p;\n  }\n\n  const functionContext = {\n    random() {\n      return vegaStatistics.random();\n    },\n\n    // override default\n    cumulativeNormal: vegaStatistics.cumulativeNormal,\n    cumulativeLogNormal: vegaStatistics.cumulativeLogNormal,\n    cumulativeUniform: vegaStatistics.cumulativeUniform,\n    densityNormal: vegaStatistics.densityNormal,\n    densityLogNormal: vegaStatistics.densityLogNormal,\n    densityUniform: vegaStatistics.densityUniform,\n    quantileNormal: vegaStatistics.quantileNormal,\n    quantileLogNormal: vegaStatistics.quantileLogNormal,\n    quantileUniform: vegaStatistics.quantileUniform,\n    sampleNormal: vegaStatistics.sampleNormal,\n    sampleLogNormal: vegaStatistics.sampleLogNormal,\n    sampleUniform: vegaStatistics.sampleUniform,\n    isArray: vegaUtil.isArray,\n    isBoolean: vegaUtil.isBoolean,\n    isDate: vegaUtil.isDate,\n\n    isDefined(_) {\n      return _ !== undefined;\n    },\n\n    isNumber: vegaUtil.isNumber,\n    isObject: vegaUtil.isObject,\n    isRegExp: vegaUtil.isRegExp,\n    isString: vegaUtil.isString,\n    isTuple: vegaDataflow.isTuple,\n\n    isValid(_) {\n      return _ != null && _ === _;\n    },\n\n    toBoolean: vegaUtil.toBoolean,\n    toDate: vegaUtil.toDate,\n    toNumber: vegaUtil.toNumber,\n    toString: vegaUtil.toString,\n    indexof,\n    join,\n    lastindexof,\n    replace,\n    reverse,\n    slice,\n    flush: vegaUtil.flush,\n    lerp: vegaUtil.lerp,\n    merge,\n    pad: vegaUtil.pad,\n    peek: vegaUtil.peek,\n    pluck,\n    span: vegaUtil.span,\n    inrange: vegaUtil.inrange,\n    truncate: vegaUtil.truncate,\n    rgb: d3Color.rgb,\n    lab: d3Color.lab,\n    hcl: d3Color.hcl,\n    hsl: d3Color.hsl,\n    luminance,\n    contrast,\n    sequence: d3Array.range,\n    format,\n    utcFormat,\n    utcParse,\n    utcOffset: vegaTime.utcOffset,\n    utcSequence: vegaTime.utcSequence,\n    timeFormat,\n    timeParse,\n    timeOffset: vegaTime.timeOffset,\n    timeSequence: vegaTime.timeSequence,\n    timeUnitSpecifier: vegaTime.timeUnitSpecifier,\n    monthFormat,\n    monthAbbrevFormat,\n    dayFormat,\n    dayAbbrevFormat,\n    quarter: vegaUtil.quarter,\n    utcquarter: vegaUtil.utcquarter,\n    week: vegaTime.week,\n    utcweek: vegaTime.utcweek,\n    dayofyear: vegaTime.dayofyear,\n    utcdayofyear: vegaTime.utcdayofyear,\n    warn,\n    info,\n    debug,\n    extent: vegaUtil.extent,\n    inScope,\n    intersect,\n    clampRange: vegaUtil.clampRange,\n    pinchDistance,\n    pinchAngle,\n    screen,\n    containerSize,\n    windowSize,\n    bandspace,\n    setdata,\n    pathShape,\n    panLinear: vegaUtil.panLinear,\n    panLog: vegaUtil.panLog,\n    panPow: vegaUtil.panPow,\n    panSymlog: vegaUtil.panSymlog,\n    zoomLinear: vegaUtil.zoomLinear,\n    zoomLog: vegaUtil.zoomLog,\n    zoomPow: vegaUtil.zoomPow,\n    zoomSymlog: vegaUtil.zoomSymlog,\n    encode,\n    modify\n  };\n  const eventFunctions = ['view', 'item', 'group', 'xy', 'x', 'y'],\n        // event functions\n  eventPrefix = 'event.vega.',\n        // event function prefix\n  thisPrefix = 'this.',\n        // function context prefix\n  astVisitors = {}; // AST visitors for dependency analysis\n  // export code generator parameters\n\n  const codegenParams = {\n    forbidden: ['_'],\n    allowed: ['datum', 'event', 'item'],\n    fieldvar: 'datum',\n    globalvar: id => `_[${vegaUtil.stringValue(SignalPrefix + id)}]`,\n    functions: buildFunctions,\n    constants: vegaExpression.constants,\n    visitors: astVisitors\n  }; // export code generator\n\n  const codeGenerator = vegaExpression.codegenExpression(codegenParams); // Build expression function registry\n\n  function buildFunctions(codegen) {\n    const fn = vegaExpression.functions(codegen);\n    eventFunctions.forEach(name => fn[name] = eventPrefix + name);\n\n    for (const name in functionContext) {\n      fn[name] = thisPrefix + name;\n    }\n\n    vegaUtil.extend(fn, internalScaleFunctions(codegen, functionContext, astVisitors));\n    return fn;\n  } // Register an expression function\n\n\n  function expressionFunction(name, fn, visitor) {\n    if (arguments.length === 1) {\n      return functionContext[name];\n    } // register with the functionContext\n\n\n    functionContext[name] = fn; // if there is an astVisitor register that, too\n\n    if (visitor) astVisitors[name] = visitor; // if the code generator has already been initialized,\n    // we need to also register the function with it\n\n    if (codeGenerator) codeGenerator.functions[name] = thisPrefix + name;\n    return this;\n  } // register expression functions with ast visitors\n\n  expressionFunction('bandwidth', bandwidth, scaleVisitor);\n  expressionFunction('copy', copy, scaleVisitor);\n  expressionFunction('domain', domain, scaleVisitor);\n  expressionFunction('range', range, scaleVisitor);\n  expressionFunction('invert', invert, scaleVisitor);\n  expressionFunction('scale', scale, scaleVisitor);\n  expressionFunction('gradient', scaleGradient, scaleVisitor);\n  expressionFunction('geoArea', geoArea, scaleVisitor);\n  expressionFunction('geoBounds', geoBounds, scaleVisitor);\n  expressionFunction('geoCentroid', geoCentroid, scaleVisitor);\n  expressionFunction('geoShape', geoShape, scaleVisitor);\n  expressionFunction('indata', indata, indataVisitor);\n  expressionFunction('data', data, dataVisitor);\n  expressionFunction('treePath', treePath, dataVisitor);\n  expressionFunction('treeAncestors', treeAncestors, dataVisitor); // register Vega-Lite selection functions\n\n  expressionFunction('vlSelectionTest', vegaSelections.selectionTest, vegaSelections.selectionVisitor);\n  expressionFunction('vlSelectionIdTest', vegaSelections.selectionIdTest, vegaSelections.selectionVisitor);\n  expressionFunction('vlSelectionResolve', vegaSelections.selectionResolve, vegaSelections.selectionVisitor);\n  expressionFunction('vlSelectionTuples', vegaSelections.selectionTuples);\n\n  function parser (expr, scope) {\n    const params = {}; // parse the expression to an abstract syntax tree (ast)\n\n    let ast;\n\n    try {\n      expr = vegaUtil.isString(expr) ? expr : vegaUtil.stringValue(expr) + '';\n      ast = vegaExpression.parseExpression(expr);\n    } catch (err) {\n      vegaUtil.error('Expression parse error: ' + expr);\n    } // analyze ast function calls for dependencies\n\n\n    ast.visit(node => {\n      if (node.type !== vegaExpression.CallExpression) return;\n      const name = node.callee.name,\n            visit = codegenParams.visitors[name];\n      if (visit) visit(name, node.arguments, scope, params);\n    }); // perform code generation\n\n    const gen = codeGenerator(ast); // collect signal dependencies\n\n    gen.globals.forEach(name => {\n      const signalName = SignalPrefix + name;\n\n      if (!vegaUtil.hasOwnProperty(params, signalName) && scope.getSignal(name)) {\n        params[signalName] = scope.signalRef(name);\n      }\n    }); // return generated expression code and dependencies\n\n    return {\n      $expr: vegaUtil.extend({\n        code: gen.code\n      }, scope.options.ast ? {\n        ast\n      } : null),\n      $fields: gen.fields,\n      $params: params\n    };\n  }\n\n  exports.DataPrefix = DataPrefix;\n  exports.IndexPrefix = IndexPrefix;\n  exports.ScalePrefix = ScalePrefix;\n  exports.SignalPrefix = SignalPrefix;\n  exports.bandspace = bandspace;\n  exports.bandwidth = bandwidth;\n  exports.codeGenerator = codeGenerator;\n  exports.codegenParams = codegenParams;\n  exports.containerSize = containerSize;\n  exports.contrast = contrast;\n  exports.copy = copy;\n  exports.data = data;\n  exports.dataVisitor = dataVisitor;\n  exports.dayAbbrevFormat = dayAbbrevFormat;\n  exports.dayFormat = dayFormat;\n  exports.debug = debug;\n  exports.domain = domain;\n  exports.encode = encode;\n  exports.expressionFunction = expressionFunction;\n  exports.format = format;\n  exports.functionContext = functionContext;\n  exports.geoArea = geoArea;\n  exports.geoBounds = geoBounds;\n  exports.geoCentroid = geoCentroid;\n  exports.geoShape = geoShape;\n  exports.inScope = inScope;\n  exports.indata = indata;\n  exports.indataVisitor = indataVisitor;\n  exports.indexof = indexof;\n  exports.info = info;\n  exports.invert = invert;\n  exports.join = join;\n  exports.lastindexof = lastindexof;\n  exports.luminance = luminance;\n  exports.merge = merge;\n  exports.modify = modify;\n  exports.monthAbbrevFormat = monthAbbrevFormat;\n  exports.monthFormat = monthFormat;\n  exports.parseExpression = parser;\n  exports.pathShape = pathShape;\n  exports.pinchAngle = pinchAngle;\n  exports.pinchDistance = pinchDistance;\n  exports.pluck = pluck;\n  exports.range = range;\n  exports.replace = replace;\n  exports.reverse = reverse;\n  exports.scale = scale;\n  exports.scaleGradient = scaleGradient;\n  exports.scaleVisitor = scaleVisitor;\n  exports.screen = screen;\n  exports.setdata = setdata;\n  exports.slice = slice;\n  exports.timeFormat = timeFormat;\n  exports.timeParse = timeParse;\n  exports.treeAncestors = treeAncestors;\n  exports.treePath = treePath;\n  exports.utcFormat = utcFormat;\n  exports.utcParse = utcParse;\n  exports.warn = warn;\n  exports.windowSize = windowSize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","d3","vegaUtil","vegaExpression","d3Geo","d3Color","vegaDataflow","vegaScale","vegaScenegraph","vegaSelections","vegaStatistics","vegaTime","d3Array","data","name","context","values","value","indata","field","entry","index","get","undefined","count","setdata","tuples","df","dataflow","pulse","input","changeset","remove","truthy","insert","encode","item","retval","mark","source","time","month","day","specifier","Number","isInteger","dateObj","setYear","setMonth","setDate","timeFormat","call","monthFormat","monthAbbrevFormat","dayFormat","dayAbbrevFormat","dataVisitor","args","scope","params","type","Literal","error","dataName","DataPrefix","hasOwnProperty","getData","tuplesRef","err","indataVisitor","indexName","IndexPrefix","indataRef","scaleVisitor","addScaleDependency","scales","scaleName","ScalePrefix","scaleRef","getScale","ctx","s","isFunction","isString","internalScaleFunctions","codegen","fnctx","visitors","__bandwidth","fnctx.__bandwidth","bandwidth","_bandwidth","_range","_scale","ref","arg","stringValue","geoMethod","methodName","globalMethod","projection","geojson","group","p","path","inScope","log","method","apply","concat","slice","warn","length","arguments","info","debug","channel_luminance_value","channelValue","val","Math","pow","luminance","color","c","rgb","r","g","b","contrast","color1","color2","lum1","lum2","lumL","max","lumD","min","merge","unshift","extend","equal","a","i","n","equalObject","key","removePredicate","props","_","modify","toggle","stamp","changes","_trigger","runAfter","modified","run","predicate","isArray","isTuple","some","pinchDistance","event","t","touches","dx","clientX","dy","clientY","sqrt","pinchAngle","atan2","pluck","accessor","accessors","map","array","seq","ArrayBuffer","isView","sequence","join","indexof","indexOf","lastindexof","lastIndexOf","replace","str","pattern","repl","String","reverse","bandspace","paddingInner","paddingOuter","bandSpace","copy","domain","invert","range","invertRange","invertExtent","scale","scaleGradient","p0","p1","gradient","Gradient","stops","peek","fraction","identity","scaleFraction","interpolator","interpolate","ticks","push","forEach","stop","geoShape","pathShape","pathRender","pathParse","treeNodes","tree","root","lookup","treePath","target","nodes","datum","treeAncestors","node","ancestors","screen","w","window","windowSize","innerWidth","innerHeight","containerSize","view","el","container","clientWidth","clientHeight","filter","opt","types","marktype","names","markname","expressionFunction","fn","visitor","functionContext","astVisitors","codeGenerator","functions","thisPrefix","wrap","spec","locale","format","utcFormat","timeParse","utcParse","Date","geoArea","geoBounds","geoCentroid","d","random","cumulativeNormal","cumulativeLogNormal","cumulativeUniform","densityNormal","densityLogNormal","densityUniform","quantileNormal","quantileLogNormal","quantileUniform","sampleNormal","sampleLogNormal","sampleUniform","isBoolean","isDate","isDefined","isNumber","isObject","isRegExp","isValid","toBoolean","toDate","toNumber","toString","flush","lerp","pad","span","inrange","truncate","lab","hcl","hsl","utcOffset","utcSequence","timeOffset","timeSequence","timeUnitSpecifier","quarter","utcquarter","week","utcweek","dayofyear","utcdayofyear","extent","intersect","u","v","box","Bounds","set","scene","scenegraph","clampRange","panLinear","panLog","panPow","panSymlog","zoomLinear","zoomLog","zoomPow","zoomSymlog","eventFunctions","codegenParams","forbidden","allowed","fieldvar","globalvar","id","SignalPrefix","buildFunctions","eventPrefix","constants","codegenExpression","selectionTest","selectionVisitor","selectionIdTest","selectionResolve","selectionTuples","parseExpression","parser","expr","ast","visit","CallExpression","callee","gen","globals","signalName","getSignal","signalRef","$expr","code","options","$fields","fields","$params","Object","defineProperty"]
}
