{
"version":3,
"file":"goog.html.safehtml.js",
"lineCount":338,
"mappings":"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",
"sources":["goog/html/safehtml.js"],
"sourcesContent":["// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview The SafeHtml type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.SafeHtml');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.tags');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.html.trustedtypes');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.object');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\ngoog.require('goog.string.internal');\n\n\n\n/**\n * A string that is safe to use in HTML context in DOM APIs and HTML documents.\n *\n * A SafeHtml is a string-like object that carries the security type contract\n * that its value as a string will not cause untrusted script execution when\n * evaluated as HTML in a browser.\n *\n * Values of this type are guaranteed to be safe to use in HTML contexts,\n * such as, assignment to the innerHTML DOM property, or interpolation into\n * a HTML template in HTML PC_DATA context, in the sense that the use will not\n * result in a Cross-Site-Scripting vulnerability.\n *\n * Instances of this type must be created via the factory methods\n * (`goog.html.SafeHtml.create`, `goog.html.SafeHtml.htmlEscape`),\n * etc and not by invoking its constructor.  The constructor intentionally\n * takes no parameters and the type is immutable; hence only a default instance\n * corresponding to the empty string can be obtained via constructor invocation.\n *\n * Note that there is no `goog.html.SafeHtml.fromConstant`. The reason is that\n * the following code would create an unsafe HTML:\n *\n * ```\n * goog.html.SafeHtml.concat(\n *     goog.html.SafeHtml.fromConstant(goog.string.Const.from('<script>')),\n *     goog.html.SafeHtml.htmlEscape(userInput),\n *     goog.html.SafeHtml.fromConstant(goog.string.Const.from('<\\/script>')));\n * ```\n *\n * There's `goog.dom.constHtmlToNode` to create a node from constant strings\n * only.\n *\n * @see goog.html.SafeHtml.create\n * @see goog.html.SafeHtml.htmlEscape\n * @constructor\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n */\ngoog.html.SafeHtml = function() {\n  /**\n   * The contained value of this SafeHtml.  The field has a purposely ugly\n   * name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @private {!TrustedHTML|string}\n   */\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.html.SafeHtml.unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ =\n      goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;\n\n  /**\n   * This SafeHtml's directionality, or null if unknown.\n   * @private {?goog.i18n.bidi.Dir}\n   */\n  this.dir_ = null;\n};\n\n\n/**\n * @define {boolean} Whether to strip out error messages or to leave them in.\n */\ngoog.html.SafeHtml.ENABLE_ERROR_MESSAGES =\n    goog.define('goog.html.SafeHtml.ENABLE_ERROR_MESSAGES', goog.DEBUG);\n\n\n/**\n * Whether the `style` attribute is supported. Set to false to avoid the byte\n * weight of `goog.html.SafeStyle` where unneeded. An error will be thrown if\n * the `style` attribute is used.\n * @define {boolean}\n */\ngoog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE =\n    goog.define('goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE', true);\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;\n\n\n/** @override */\ngoog.html.SafeHtml.prototype.getDirection = function() {\n  return this.dir_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this SafeHtml's value as string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `SafeHtml`, use `goog.html.SafeHtml.unwrap` instead of\n * this method. If in doubt, assume that it's security relevant. In particular,\n * note that goog.html functions which return a goog.html type do not guarantee\n * that the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml\n * // instanceof goog.html.SafeHtml.\n * </pre>\n *\n * @see goog.html.SafeHtml.unwrap\n * @override\n */\ngoog.html.SafeHtml.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a SafeHtml, use\n   * `goog.html.SafeHtml.unwrap`.\n   *\n   * @see goog.html.SafeHtml.unwrap\n   * @override\n   */\n  goog.html.SafeHtml.prototype.toString = function() {\n    return 'SafeHtml{' + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ +\n        '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a SafeHtml\n * object, and returns its value.\n * @param {!goog.html.SafeHtml} safeHtml The object to extract from.\n * @return {string} The SafeHtml object's contained string, unless the run-time\n *     type check fails. In that case, `unwrap` returns an innocuous\n *     string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.SafeHtml.unwrap = function(safeHtml) {\n  return goog.html.SafeHtml.unwrapTrustedHTML(safeHtml).toString();\n};\n\n\n/**\n * Unwraps value as TrustedHTML if supported or as a string if not.\n * @param {!goog.html.SafeHtml} safeHtml\n * @return {!TrustedHTML|string}\n * @see goog.html.SafeHtml.unwrap\n */\ngoog.html.SafeHtml.unwrapTrustedHTML = function(safeHtml) {\n  // Perform additional run-time type-checking to ensure that safeHtml is indeed\n  // an instance of the expected type.  This provides some additional protection\n  // against security bugs due to application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  // 3. The object carries a type marker for the expected type. \"Faking\" an\n  // object requires a reference to the type marker, which has names intended\n  // to stand out in code reviews.\n  if (safeHtml instanceof goog.html.SafeHtml &&\n      safeHtml.constructor === goog.html.SafeHtml &&\n      safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ===\n          goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {\n    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n  } else {\n    goog.asserts.fail('expected object of type SafeHtml, got \\'' +\n        safeHtml + '\\' of type ' + goog.typeOf(safeHtml));\n    return 'type_error:SafeHtml';\n  }\n};\n\n\n/**\n * Shorthand for union of types that can sensibly be converted to strings\n * or might already be SafeHtml (as SafeHtml is a goog.string.TypedString).\n * @private\n * @typedef {string|number|boolean|!goog.string.TypedString|\n *           !goog.i18n.bidi.DirectionalString}\n */\ngoog.html.SafeHtml.TextOrHtml_;\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object.\n *\n * If text is of a type that implements\n * `goog.i18n.bidi.DirectionalString`, the directionality of the new\n * `SafeHtml` object is set to `text`'s directionality, if known.\n * Otherwise, the directionality of the resulting SafeHtml is unknown (i.e.,\n * `null`).\n *\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscape = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var textIsObject = typeof textOrHtml == 'object';\n  var dir = null;\n  if (textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString) {\n    dir = /** @type {!goog.i18n.bidi.DirectionalString} */ (textOrHtml)\n              .getDirection();\n  }\n  var textAsString;\n  if (textIsObject && textOrHtml.implementsGoogStringTypedString) {\n    textAsString = /** @type {!goog.string.TypedString} */ (textOrHtml)\n                       .getTypedStringValue();\n  } else {\n    textAsString = String(textOrHtml);\n  }\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.internal.htmlEscape(textAsString), dir);\n};\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n * &lt;br&gt;.\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(html)),\n      html.getDirection());\n};\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n * &lt;br&gt; and escaping whitespace to preserve spatial formatting. Character\n * entity #160 is used to make it safer for XML.\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(\n    textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(html)),\n      html.getDirection());\n};\n\n\n/**\n * Coerces an arbitrary object into a SafeHtml object.\n *\n * If `textOrHtml` is already of type `goog.html.SafeHtml`, the same\n * object is returned. Otherwise, `textOrHtml` is coerced to string, and\n * HTML-escaped. If `textOrHtml` is of a type that implements\n * `goog.i18n.bidi.DirectionalString`, its directionality, if known, is\n * preserved.\n *\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text or SafeHtml to\n *     coerce.\n * @return {!goog.html.SafeHtml} The resulting SafeHtml object.\n * @deprecated Use goog.html.SafeHtml.htmlEscape.\n */\ngoog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;\n\n\n/**\n * @const\n * @private\n */\ngoog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;\n\n\n/**\n * Set of attributes containing URL as defined at\n * http://www.w3.org/TR/html5/index.html#attributes-1.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet(\n    'action', 'cite', 'data', 'formaction', 'href', 'manifest', 'poster',\n    'src');\n\n\n/**\n * Tags which are unsupported via create(). They might be supported via a\n * tag-specific create method. These are tags which might require a\n * TrustedResourceUrl in one of their attributes or a restricted type for\n * their content.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(\n    goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED,\n    goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH,\n    goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT,\n    goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);\n\n\n/**\n * @typedef {string|number|goog.string.TypedString|\n *     goog.html.SafeStyle.PropertyMap|undefined}\n */\ngoog.html.SafeHtml.AttributeValue;\n\n\n/**\n * Creates a SafeHtml content consisting of a tag with optional attributes and\n * optional content.\n *\n * For convenience tag names and attribute names are accepted as regular\n * strings, instead of goog.string.Const. Nevertheless, you should not pass\n * user-controlled values to these parameters. Note that these parameters are\n * syntactically validated at runtime, and invalid values will result in\n * an exception.\n *\n * Example usage:\n *\n * goog.html.SafeHtml.create('br');\n * goog.html.SafeHtml.create('div', {'class': 'a'});\n * goog.html.SafeHtml.create('p', {}, 'a');\n * goog.html.SafeHtml.create('p', {}, goog.html.SafeHtml.create('br'));\n *\n * goog.html.SafeHtml.create('span', {\n *   'style': {'margin': '0'}\n * });\n *\n * To guarantee SafeHtml's type contract is upheld there are restrictions on\n * attribute values and tag names.\n *\n * - For attributes which contain script code (on*), a goog.string.Const is\n *   required.\n * - For attributes which contain style (style), a goog.html.SafeStyle or a\n *   goog.html.SafeStyle.PropertyMap is required.\n * - For attributes which are interpreted as URLs (e.g. src, href) a\n *   goog.html.SafeUrl, goog.string.Const or string is required. If a string\n *   is passed, it will be sanitized with SafeUrl.sanitize().\n * - For tags which can load code or set security relevant page metadata,\n *   more specific goog.html.SafeHtml.create*() functions must be used. Tags\n *   which are not supported by this function are applet, base, embed, iframe,\n *   link, math, object, script, style, svg, and template.\n *\n * @param {!goog.dom.TagName|string} tagName The name of the tag. Only tag names\n *     consisting of [a-zA-Z0-9-] are allowed. Tag names documented above are\n *     disallowed.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. This must be empty for void tags\n *     like <br>. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided.\n * @throws {goog.asserts.AssertionError} If content for void tag is provided.\n */\ngoog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {\n  goog.html.SafeHtml.verifyTagName(String(tagName));\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      String(tagName), opt_attributes, opt_content);\n};\n\n\n/**\n * Verifies if the tag name is valid and if it doesn't change the context.\n * E.g. STRONG is fine but SCRIPT throws because it changes context. See\n * goog.html.SafeHtml.create for an explanation of allowed tags.\n * @param {string} tagName\n * @throws {Error} If invalid tag name is provided.\n * @package\n */\ngoog.html.SafeHtml.verifyTagName = function(tagName) {\n  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n            'Invalid tag name <' + tagName + '>.' :\n            '');\n  }\n  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n\n            'Tag name <' + tagName + '> is not allowed for SafeHtml.' :\n            '');\n  }\n};\n\n\n/**\n * Creates a SafeHtml representing an iframe tag.\n *\n * This by default restricts the iframe as much as possible by setting the\n * sandbox attribute to the empty string. If the iframe requires less\n * restrictions, set the sandbox attribute as tight as possible, but do not rely\n * on the sandbox as a security feature because it is not supported by older\n * browsers. If a sandbox is essential to security (e.g. for third-party\n * frames), use createSandboxIframe which checks for browser support.\n *\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n *\n * @param {?goog.html.TrustedResourceUrl=} opt_src The value of the src\n *     attribute. If null or undefined src will not be set.\n * @param {?goog.html.SafeHtml=} opt_srcdoc The value of the srcdoc attribute.\n *     If null or undefined srcdoc will not be set.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided. If opt_attributes contains the src or srcdoc attributes.\n */\ngoog.html.SafeHtml.createIframe = function(\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  if (opt_src) {\n    // Check whether this is really TrustedResourceUrl.\n    goog.html.TrustedResourceUrl.unwrap(opt_src);\n  }\n\n  var fixedAttributes = {};\n  fixedAttributes['src'] = opt_src || null;\n  fixedAttributes['srcdoc'] =\n      opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);\n  var defaultAttributes = {'sandbox': ''};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'iframe', attributes, opt_content);\n};\n\n\n/**\n * Creates a SafeHtml representing a sandboxed iframe tag.\n *\n * The sandbox attribute is enforced in its most restrictive mode, an empty\n * string. Consequently, the security requirements for the src and srcdoc\n * attributes are relaxed compared to SafeHtml.createIframe. This function\n * will throw on browsers that do not support the sandbox attribute, as\n * determined by SafeHtml.canUseSandboxIframe.\n *\n * The SafeHtml returned by this function can trigger downloads with no\n * user interaction on Chrome (though only a few, further attempts are blocked).\n * Firefox and IE will block all downloads from the sandbox.\n *\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n * @see https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Feb/0112.html\n *\n * @param {string|!goog.html.SafeUrl=} opt_src The value of the src\n *     attribute. If null or undefined src will not be set.\n * @param {string=} opt_srcdoc The value of the srcdoc attribute.\n *     If null or undefined srcdoc will not be set. Will not be sanitized.\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid tag name, attribute name, or attribute value is\n *     provided. If opt_attributes contains the src, srcdoc or sandbox\n *     attributes. If browser does not support the sandbox attribute on iframe.\n */\ngoog.html.SafeHtml.createSandboxIframe = function(\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  if (!goog.html.SafeHtml.canUseSandboxIframe()) {\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n            'The browser does not support sandboxed iframes.' :\n            '');\n  }\n\n  var fixedAttributes = {};\n  if (opt_src) {\n    // Note that sanitize is a no-op on SafeUrl.\n    fixedAttributes['src'] =\n        goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));\n  } else {\n    fixedAttributes['src'] = null;\n  }\n  fixedAttributes['srcdoc'] = opt_srcdoc || null;\n  fixedAttributes['sandbox'] = '';\n  var attributes =\n      goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'iframe', attributes, opt_content);\n};\n\n\n/**\n * Checks if the user agent supports sandboxed iframes.\n * @return {boolean}\n */\ngoog.html.SafeHtml.canUseSandboxIframe = function() {\n  return goog.global['HTMLIFrameElement'] &&\n      ('sandbox' in goog.global['HTMLIFrameElement'].prototype);\n};\n\n\n/**\n * Creates a SafeHtml representing a script tag with the src attribute.\n * @param {!goog.html.TrustedResourceUrl} src The value of the src\n * attribute.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=}\n * opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined\n *     causes the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or value is provided. If\n *     opt_attributes contains the src attribute.\n */\ngoog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {\n  // TODO(mlourenco): The charset attribute should probably be blocked. If\n  // its value is attacker controlled, the script contains attacker controlled\n  // sub-strings (even if properly escaped) and the server does not set charset\n  // then XSS is likely possible.\n  // https://html.spec.whatwg.org/multipage/scripting.html#dom-script-charset\n\n  // Check whether this is really TrustedResourceUrl.\n  goog.html.TrustedResourceUrl.unwrap(src);\n\n  var fixedAttributes = {'src': src};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'script', attributes);\n};\n\n\n/**\n * Creates a SafeHtml representing a script tag. Does not allow the language,\n * src, text or type attributes to be set.\n * @param {!goog.html.SafeScript|!Array<!goog.html.SafeScript>}\n *     script Content to put inside the tag. Array elements are\n *     concatenated.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or attribute value is provided. If\n *     opt_attributes contains the language, src, text or type attribute.\n */\ngoog.html.SafeHtml.createScript = function(script, opt_attributes) {\n  for (var attr in opt_attributes) {\n    var attrLower = attr.toLowerCase();\n    if (attrLower == 'language' || attrLower == 'src' || attrLower == 'text' ||\n        attrLower == 'type') {\n      throw new Error(\n          goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n              'Cannot set \"' + attrLower + '\" attribute' :\n              '');\n    }\n  }\n\n  var content = '';\n  script = goog.array.concat(script);\n  for (var i = 0; i < script.length; i++) {\n    content += goog.html.SafeScript.unwrap(script[i]);\n  }\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n  // as part of its contract, SafeScript should have no dangerous '<'.\n  var htmlContent =\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n          content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'script', opt_attributes, htmlContent);\n};\n\n\n/**\n * Creates a SafeHtml representing a style tag. The type attribute is set\n * to \"text/css\".\n * @param {!goog.html.SafeStyleSheet|!Array<!goog.html.SafeStyleSheet>}\n *     styleSheet Content to put inside the tag. Array elements are\n *     concatenated.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {Error} If invalid attribute name or attribute value is provided. If\n *     opt_attributes contains the type attribute.\n */\ngoog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {\n  var fixedAttributes = {'type': 'text/css'};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n\n  var content = '';\n  styleSheet = goog.array.concat(styleSheet);\n  for (var i = 0; i < styleSheet.length; i++) {\n    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);\n  }\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n  // as part of its contract, SafeStyleSheet should have no dangerous '<'.\n  var htmlContent =\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n          content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'style', attributes, htmlContent);\n};\n\n\n/**\n * Creates a SafeHtml representing a meta refresh tag.\n * @param {!goog.html.SafeUrl|string} url Where to redirect. If a string is\n *     passed, it will be sanitized with SafeUrl.sanitize().\n * @param {number=} opt_secs Number of seconds until the page should be\n *     reloaded. Will be set to 0 if unspecified.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n */\ngoog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {\n\n  // Note that sanitize is a no-op on SafeUrl.\n  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\n\n  if (goog.labs.userAgent.browser.isIE() ||\n      goog.labs.userAgent.browser.isEdge()) {\n    // IE/EDGE can't parse the content attribute if the url contains a\n    // semicolon. We can fix this by adding quotes around the url, but then we\n    // can't parse quotes in the URL correctly. Also, it seems that IE/EDGE\n    // did not unescape semicolons in these URLs at some point in the past. We\n    // take a best-effort approach.\n    //\n    // If the URL has semicolons (which may happen in some cases, see\n    // http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2\n    // for instance), wrap it in single quotes to protect the semicolons.\n    // If the URL has semicolons and single quotes, url-encode the single quotes\n    // as well.\n    //\n    // This is imperfect. Notice that both ' and ; are reserved characters in\n    // URIs, so this could do the wrong thing, but at least it will do the wrong\n    // thing in only rare cases.\n    if (goog.string.internal.contains(unwrappedUrl, ';')) {\n      unwrappedUrl = \"'\" + unwrappedUrl.replace(/'/g, '%27') + \"'\";\n    }\n  }\n  var attributes = {\n    'http-equiv': 'refresh',\n    'content': (opt_secs || 0) + '; url=' + unwrappedUrl\n  };\n\n  // This function will handle the HTML escaping for attributes.\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'meta', attributes);\n};\n\n\n/**\n * @param {string} tagName The tag name.\n * @param {string} name The attribute name.\n * @param {!goog.html.SafeHtml.AttributeValue} value The attribute value.\n * @return {string} A \"name=value\" string.\n * @throws {Error} If attribute value is unsafe for the given tag and attribute.\n * @private\n */\ngoog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {\n  // If it's goog.string.Const, allow any valid attribute name.\n  if (value instanceof goog.string.Const) {\n    value = goog.string.Const.unwrap(value);\n  } else if (name.toLowerCase() == 'style') {\n    if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {\n      value = goog.html.SafeHtml.getStyleValue_(value);\n    } else {\n      throw new Error(\n          goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n              'Attribute \"style\" not supported.' :\n              '');\n    }\n  } else if (/^on/i.test(name)) {\n    // TODO(jakubvrana): Disallow more attributes with a special meaning.\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"' + name +\n                '\" requires goog.string.Const value, \"' + value + '\" given.' :\n                                                   '');\n    // URL attributes handled differently according to tag.\n  } else if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {\n    if (value instanceof goog.html.TrustedResourceUrl) {\n      value = goog.html.TrustedResourceUrl.unwrap(value);\n    } else if (value instanceof goog.html.SafeUrl) {\n      value = goog.html.SafeUrl.unwrap(value);\n    } else if (typeof value === 'string') {\n      value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();\n    } else {\n      throw new Error(\n          goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n              'Attribute \"' + name + '\" on tag \"' + tagName +\n                  '\" requires goog.html.SafeUrl, goog.string.Const, or' +\n                  ' string, value \"' + value + '\" given.' :\n              '');\n    }\n  }\n\n  // Accept SafeUrl, TrustedResourceUrl, etc. for attributes which only require\n  // HTML-escaping.\n  if (value.implementsGoogStringTypedString) {\n    // Ok to call getTypedStringValue() since there's no reliance on the type\n    // contract for security here.\n    value =\n        /** @type {!goog.string.TypedString} */ (value).getTypedStringValue();\n  }\n\n  goog.asserts.assert(\n      typeof value === 'string' || typeof value === 'number',\n      'String or number value expected, got ' + (typeof value) +\n          ' with value: ' + value);\n  return name + '=\"' + goog.string.internal.htmlEscape(String(value)) + '\"';\n};\n\n\n/**\n * Gets value allowed in \"style\" attribute.\n * @param {!goog.html.SafeHtml.AttributeValue} value It could be SafeStyle or a\n *     map which will be passed to goog.html.SafeStyle.create.\n * @return {string} Unwrapped value.\n * @throws {Error} If string value is given.\n * @private\n */\ngoog.html.SafeHtml.getStyleValue_ = function(value) {\n  if (!goog.isObject(value)) {\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n            'The \"style\" attribute requires goog.html.SafeStyle or map ' +\n                'of style properties, ' + (typeof value) + ' given: ' + value :\n            '');\n  }\n  if (!(value instanceof goog.html.SafeStyle)) {\n    // Process the property bag into a style object.\n    value = goog.html.SafeStyle.create(value);\n  }\n  return goog.html.SafeStyle.unwrap(value);\n};\n\n\n/**\n * Creates a SafeHtml content with known directionality consisting of a tag with\n * optional attributes and optional content.\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\n * @param {string} tagName\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n */\ngoog.html.SafeHtml.createWithDir = function(\n    dir, tagName, opt_attributes, opt_content) {\n  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);\n  html.dir_ = dir;\n  return html;\n};\n\n\n/**\n * Creates a new SafeHtml object by joining the parts with separator.\n * @param {!goog.html.SafeHtml.TextOrHtml_} separator\n * @param {!Array<!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>>} parts Parts to join. If a part\n *     contains an array then each member of this array is also joined with the\n *     separator.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.join = function(separator, parts) {\n  var separatorHtml = goog.html.SafeHtml.htmlEscape(separator);\n  var dir = separatorHtml.getDirection();\n  var content = [];\n\n  /**\n   * @param {!goog.html.SafeHtml.TextOrHtml_|\n   *     !Array<!goog.html.SafeHtml.TextOrHtml_>} argument\n   */\n  var addArgument = function(argument) {\n    if (goog.isArray(argument)) {\n      goog.array.forEach(argument, addArgument);\n    } else {\n      var html = goog.html.SafeHtml.htmlEscape(argument);\n      content.push(goog.html.SafeHtml.unwrap(html));\n      var htmlDir = html.getDirection();\n      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {\n        dir = htmlDir;\n      } else if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {\n        dir = null;\n      }\n    }\n  };\n\n  goog.array.forEach(parts, addArgument);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      content.join(goog.html.SafeHtml.unwrap(separatorHtml)), dir);\n};\n\n\n/**\n * Creates a new SafeHtml object by concatenating values.\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Values to concatenate.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.concat = function(var_args) {\n  return goog.html.SafeHtml.join(\n      goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));\n};\n\n\n/**\n * Creates a new SafeHtml object with known directionality by concatenating the\n * values.\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Elements of array\n *     arguments would be processed recursively.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.concatWithDir = function(dir, var_args) {\n  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));\n  html.dir_ = dir;\n  return html;\n};\n\n\n/**\n * Type marker for the SafeHtml type, used to implement additional run-time\n * type checking.\n * @const {!Object}\n * @private\n */\ngoog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create SafeHtml instances.\n *\n * @param {string} html The string to initialize the SafeHtml object with.\n * @param {?goog.i18n.bidi.Dir} dir The directionality of the SafeHtml to be\n *     constructed, or null if unknown.\n * @return {!goog.html.SafeHtml} The initialized SafeHtml object.\n * @package\n */\ngoog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(\n    html, dir) {\n  return new goog.html.SafeHtml().initSecurityPrivateDoNotAccessOrElse_(\n      html, dir);\n};\n\n\n/**\n * Called from createSafeHtmlSecurityPrivateDoNotAccessOrElse(). This\n * method exists only so that the compiler can dead code eliminate static\n * fields (like EMPTY) when they're not accessed.\n * @param {string} html\n * @param {?goog.i18n.bidi.Dir} dir\n * @return {!goog.html.SafeHtml}\n * @private\n */\ngoog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(\n    html, dir) {\n  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ =\n      goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ?\n      goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(\n          html) :\n      html;\n  this.dir_ = dir;\n  return this;\n};\n\n\n/**\n * Like create() but does not restrict which tags can be constructed.\n *\n * @param {string} tagName Tag name. Set or validated by caller.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @param {(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)=} opt_content\n * @return {!goog.html.SafeHtml}\n * @throws {Error} If invalid or unsafe attribute name or value is provided.\n * @throws {goog.asserts.AssertionError} If content for void tag is provided.\n * @package\n */\ngoog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(\n    tagName, opt_attributes, opt_content) {\n  var dir = null;\n  var result = '<' + tagName;\n  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);\n\n  var content = opt_content;\n  if (content == null) {\n    content = [];\n  } else if (!goog.isArray(content)) {\n    content = [content];\n  }\n\n  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {\n    goog.asserts.assert(\n        !content.length, 'Void tag <' + tagName + '> does not allow content.');\n    result += '>';\n  } else {\n    var html = goog.html.SafeHtml.concat(content);\n    result += '>' + goog.html.SafeHtml.unwrap(html) + '</' + tagName + '>';\n    dir = html.getDirection();\n  }\n\n  var dirAttribute = opt_attributes && opt_attributes['dir'];\n  if (dirAttribute) {\n    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {\n      // If the tag has the \"dir\" attribute specified then its direction is\n      // neutral because it can be safely used in any context.\n      dir = goog.i18n.bidi.Dir.NEUTRAL;\n    } else {\n      dir = null;\n    }\n  }\n\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      result, dir);\n};\n\n\n/**\n * Creates a string with attributes to insert after tagName.\n * @param {string} tagName\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @return {string} Returns an empty string if there are no attributes, returns\n *     a string starting with a space otherwise.\n * @throws {Error} If attribute value is unsafe for the given tag and attribute.\n * @package\n */\ngoog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {\n  var result = '';\n  if (opt_attributes) {\n    for (var name in opt_attributes) {\n      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {\n        throw new Error(\n            goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n                'Invalid attribute name \"' + name + '\".' :\n                '');\n      }\n      var value = opt_attributes[name];\n      if (value == null) {\n        continue;\n      }\n      result +=\n          ' ' + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);\n    }\n  }\n  return result;\n};\n\n\n/**\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>} fixedAttributes\n * @param {!Object<string, string>} defaultAttributes\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Optional attributes passed to create*().\n * @return {!Object<string, ?goog.html.SafeHtml.AttributeValue>}\n * @throws {Error} If opt_attributes contains an attribute with the same name\n *     as an attribute in fixedAttributes.\n * @package\n */\ngoog.html.SafeHtml.combineAttributes = function(\n    fixedAttributes, defaultAttributes, opt_attributes) {\n  var combinedAttributes = {};\n  var name;\n\n  for (name in fixedAttributes) {\n    goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n    combinedAttributes[name] = fixedAttributes[name];\n  }\n  for (name in defaultAttributes) {\n    goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n    combinedAttributes[name] = defaultAttributes[name];\n  }\n\n  if (opt_attributes) {\n    for (name in opt_attributes) {\n      var nameLower = name.toLowerCase();\n      if (nameLower in fixedAttributes) {\n        throw new Error(\n            goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n                'Cannot override \"' + nameLower + '\" attribute, got \"' + name +\n                    '\" with value \"' + opt_attributes[name] + '\"' :\n                '');\n      }\n      if (nameLower in defaultAttributes) {\n        delete combinedAttributes[nameLower];\n      }\n      combinedAttributes[name] = opt_attributes[name];\n    }\n  }\n\n  return combinedAttributes;\n};\n\n\n/**\n * A SafeHtml instance corresponding to the HTML doctype: \"<!DOCTYPE html>\".\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.DOCTYPE_HTML =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<!DOCTYPE html>', goog.i18n.bidi.Dir.NEUTRAL);\n\n\n/**\n * A SafeHtml instance corresponding to the empty string.\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.EMPTY =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '', goog.i18n.bidi.Dir.NEUTRAL);\n\n\n/**\n * A SafeHtml instance corresponding to the <br> tag.\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.BR =\n    goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<br>', goog.i18n.bidi.Dir.NEUTRAL);\n"],
"names":["goog","provide","require","html","SafeHtml","goog.html.SafeHtml","privateDoNotAccessOrElseSafeHtmlWrappedValue_","SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","dir_","ENABLE_ERROR_MESSAGES","define","DEBUG","SUPPORT_STYLE_ATTRIBUTE","prototype","implementsGoogI18nBidiDirectionalString","getDirection","goog.html.SafeHtml.prototype.getDirection","implementsGoogStringTypedString","getTypedStringValue","goog.html.SafeHtml.prototype.getTypedStringValue","toString","goog.html.SafeHtml.prototype.toString","unwrap","goog.html.SafeHtml.unwrap","safeHtml","unwrapTrustedHTML","goog.html.SafeHtml.unwrapTrustedHTML","constructor","asserts","fail","typeOf","TextOrHtml_","htmlEscape","goog.html.SafeHtml.htmlEscape","textOrHtml","textIsObject","dir","textAsString","String","createSafeHtmlSecurityPrivateDoNotAccessOrElse","string","internal","htmlEscapePreservingNewlines","goog.html.SafeHtml.htmlEscapePreservingNewlines","newLineToBr","htmlEscapePreservingNewlinesAndSpaces","goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces","whitespaceEscape","from","VALID_NAMES_IN_TAG_","URL_ATTRIBUTES_","object","createSet","NOT_ALLOWED_TAG_NAMES_","dom","TagName","APPLET","BASE","EMBED","IFRAME","LINK","MATH","META","OBJECT","SCRIPT","STYLE","SVG","TEMPLATE","AttributeValue","create","goog.html.SafeHtml.create","tagName","opt_attributes","opt_content","verifyTagName","createSafeHtmlTagSecurityPrivateDoNotAccessOrElse","goog.html.SafeHtml.verifyTagName","test","Error","toUpperCase","createIframe","goog.html.SafeHtml.createIframe","opt_src","opt_srcdoc","TrustedResourceUrl","fixedAttributes","defaultAttributes","attributes","combineAttributes","createSandboxIframe","goog.html.SafeHtml.createSandboxIframe","canUseSandboxIframe","SafeUrl","sanitize","goog.html.SafeHtml.canUseSandboxIframe","global","createScriptSrc","goog.html.SafeHtml.createScriptSrc","src","createScript","goog.html.SafeHtml.createScript","script","attr","attrLower","toLowerCase","content","array","concat","i","length","SafeScript","htmlContent","i18n","bidi","Dir","NEUTRAL","createStyle","goog.html.SafeHtml.createStyle","styleSheet","SafeStyleSheet","createMetaRefresh","goog.html.SafeHtml.createMetaRefresh","url","opt_secs","unwrappedUrl","labs","userAgent","browser","isIE","isEdge","contains","replace","getAttrNameAndValue_","goog.html.SafeHtml.getAttrNameAndValue_","name","value","Const","getStyleValue_","assert","goog.html.SafeHtml.getStyleValue_","isObject","SafeStyle","createWithDir","goog.html.SafeHtml.createWithDir","join","goog.html.SafeHtml.join","separator","parts","separatorHtml","addArgument","argument","isArray","forEach","push","htmlDir","goog.html.SafeHtml.concat","var_args","EMPTY","Array","slice","call","arguments","concatWithDir","goog.html.SafeHtml.concatWithDir","goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse","initSecurityPrivateDoNotAccessOrElse_","goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_","trustedtypes","PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY","createHTML","goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse","result","stringifyAttributes","tags","isVoidTag","dirAttribute","goog.html.SafeHtml.stringifyAttributes","goog.html.SafeHtml.combineAttributes","combinedAttributes","nameLower","DOCTYPE_HTML","BR"]
}
