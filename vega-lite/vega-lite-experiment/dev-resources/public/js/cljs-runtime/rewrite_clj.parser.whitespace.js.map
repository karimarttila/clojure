{"version":3,"sources":["rewrite_clj/parser/whitespace.cljs"],"mappings":";AAIA;;;;AAAA,AAAMA,AAGSC;AAHf,AAIE,AAAI,AAACC,AAAa,AAACC,AAAAA,AAAAA,AAAYF,AAAAA;AAC7B,AAAAG,AACE,AAACE,AAAaL,AAAOC;AADvB,AAAA,AAAAE,AAAAA,AAACC,AAAAA,AAAAA;;AAED,AAAAE,AACE,AAACD,AAAaL,AAAOQ;AADvB,AAAA,AAAAF,AAAAA,AAACC,AAAAA,AAAAA","names":["rewrite-clj.parser.whitespace/parse-whitespace","reader","rewrite-clj.reader/linebreak?","rewrite-clj.reader/peek-char","G__46183","rewrite-clj.node/newline-node","rewrite_clj.reader.read_while","G__46184","rewrite-clj.node/whitespace-node","rewrite-clj.reader/space?"],"sourcesContent":["(ns rewrite-clj.parser.whitespace\n  (:require [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n(defn parse-whitespace\n  \"Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs.\"\n  [^not-native reader]\n  (if (r/linebreak? (r/peek-char reader))\n    (node/newline-node\n      (r/read-while reader r/linebreak?))\n    (node/whitespace-node\n      (r/read-while reader r/space?))))\n"]}