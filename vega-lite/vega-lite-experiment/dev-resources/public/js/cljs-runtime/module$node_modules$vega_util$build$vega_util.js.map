{
"version":3,
"file":"module$node_modules$vega_util$build$vega_util.js",
"lineCount":27,
"mappings":"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",
"sources":["node_modules/vega-util/build/vega-util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_util$build$vega_util\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}));\n}(this, (function (exports) { 'use strict';\n\n  function accessor (fn, fields, name) {\n    fn.fields = fields || [];\n    fn.fname = name;\n    return fn;\n  }\n  function accessorName(fn) {\n    return fn == null ? null : fn.fname;\n  }\n  function accessorFields(fn) {\n    return fn == null ? null : fn.fields;\n  }\n\n  function getter (path) {\n    return path.length === 1 ? get1(path[0]) : getN(path);\n  }\n\n  const get1 = field => function (obj) {\n    return obj[field];\n  };\n\n  const getN = path => {\n    const len = path.length;\n    return function (obj) {\n      for (let i = 0; i < len; ++i) {\n        obj = obj[path[i]];\n      }\n\n      return obj;\n    };\n  };\n\n  function error (message) {\n    throw Error(message);\n  }\n\n  function splitAccessPath (p) {\n    const path = [],\n          n = p.length;\n    let q = null,\n        b = 0,\n        s = '',\n        i,\n        j,\n        c;\n    p = p + '';\n\n    function push() {\n      path.push(s + p.substring(i, j));\n      s = '';\n      i = j + 1;\n    }\n\n    for (i = j = 0; j < n; ++j) {\n      c = p[j];\n\n      if (c === '\\\\') {\n        s += p.substring(i, j);\n        s += p.substring(++j, ++j);\n        i = j;\n      } else if (c === q) {\n        push();\n        q = null;\n        b = -1;\n      } else if (q) {\n        continue;\n      } else if (i === b && c === '\"') {\n        i = j + 1;\n        q = c;\n      } else if (i === b && c === \"'\") {\n        i = j + 1;\n        q = c;\n      } else if (c === '.' && !b) {\n        if (j > i) {\n          push();\n        } else {\n          i = j + 1;\n        }\n      } else if (c === '[') {\n        if (j > i) push();\n        b = i = j + 1;\n      } else if (c === ']') {\n        if (!b) error('Access path missing open bracket: ' + p);\n        if (b > 0) push();\n        b = 0;\n        i = j + 1;\n      }\n    }\n\n    if (b) error('Access path missing closing bracket: ' + p);\n    if (q) error('Access path missing closing quote: ' + p);\n\n    if (j > i) {\n      j++;\n      push();\n    }\n\n    return path;\n  }\n\n  function field (field, name, opt) {\n    const path = splitAccessPath(field);\n    field = path.length === 1 ? path[0] : field;\n    return accessor((opt && opt.get || getter)(path), [field], name || field);\n  }\n\n  const id = field('id');\n  const identity = accessor(_ => _, [], 'identity');\n  const zero = accessor(() => 0, [], 'zero');\n  const one = accessor(() => 1, [], 'one');\n  const truthy = accessor(() => true, [], 'true');\n  const falsy = accessor(() => false, [], 'false');\n\n  function log$1(method, level, input) {\n    const args = [level].concat([].slice.call(input));\n    console[method].apply(console, args); // eslint-disable-line no-console\n  }\n\n  const None = 0;\n  const Error$1 = 1;\n  const Warn = 2;\n  const Info = 3;\n  const Debug = 4;\n  function logger (_, method, handler = log$1) {\n    let level = _ || None;\n    return {\n      level(_) {\n        if (arguments.length) {\n          level = +_;\n          return this;\n        } else {\n          return level;\n        }\n      },\n\n      error() {\n        if (level >= Error$1) handler(method || 'error', 'ERROR', arguments);\n        return this;\n      },\n\n      warn() {\n        if (level >= Warn) handler(method || 'warn', 'WARN', arguments);\n        return this;\n      },\n\n      info() {\n        if (level >= Info) handler(method || 'log', 'INFO', arguments);\n        return this;\n      },\n\n      debug() {\n        if (level >= Debug) handler(method || 'log', 'DEBUG', arguments);\n        return this;\n      }\n\n    };\n  }\n\n  var isArray = Array.isArray;\n\n  function isObject (_) {\n    return _ === Object(_);\n  }\n\n  const isLegalKey = key => key !== '__proto__';\n\n  function mergeConfig(...configs) {\n    return configs.reduce((out, source) => {\n      for (const key in source) {\n        if (key === 'signals') {\n          // for signals, we merge the signals arrays\n          // source signals take precedence over\n          // existing signals with the same name\n          out.signals = mergeNamed(out.signals, source.signals);\n        } else {\n          // otherwise, merge objects subject to recursion constraints\n          // for legend block, recurse for the layout entry only\n          // for style block, recurse for all properties\n          // otherwise, no recursion: objects overwrite, no merging\n          const r = key === 'legend' ? {\n            layout: 1\n          } : key === 'style' ? true : null;\n          writeConfig(out, key, source[key], r);\n        }\n      }\n\n      return out;\n    }, {});\n  }\n  function writeConfig(output, key, value, recurse) {\n    if (!isLegalKey(key)) return;\n    let k, o;\n\n    if (isObject(value) && !isArray(value)) {\n      o = isObject(output[key]) ? output[key] : output[key] = {};\n\n      for (k in value) {\n        if (recurse && (recurse === true || recurse[k])) {\n          writeConfig(o, k, value[k]);\n        } else if (isLegalKey(k)) {\n          o[k] = value[k];\n        }\n      }\n    } else {\n      output[key] = value;\n    }\n  }\n\n  function mergeNamed(a, b) {\n    if (a == null) return b;\n    const map = {},\n          out = [];\n\n    function add(_) {\n      if (!map[_.name]) {\n        map[_.name] = 1;\n        out.push(_);\n      }\n    }\n\n    b.forEach(add);\n    a.forEach(add);\n    return out;\n  }\n\n  function peek (array) {\n    return array[array.length - 1];\n  }\n\n  function toNumber (_) {\n    return _ == null || _ === '' ? null : +_;\n  }\n\n  const exp = sign => x => sign * Math.exp(x);\n\n  const log = sign => x => Math.log(sign * x);\n\n  const symlog = c => x => Math.sign(x) * Math.log1p(Math.abs(x / c));\n\n  const symexp = c => x => Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n\n  const pow = exponent => x => x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\n  function pan(domain, delta, lift, ground) {\n    const d0 = lift(domain[0]),\n          d1 = lift(peek(domain)),\n          dd = (d1 - d0) * delta;\n    return [ground(d0 - dd), ground(d1 - dd)];\n  }\n\n  function panLinear(domain, delta) {\n    return pan(domain, delta, toNumber, identity);\n  }\n  function panLog(domain, delta) {\n    var sign = Math.sign(domain[0]);\n    return pan(domain, delta, log(sign), exp(sign));\n  }\n  function panPow(domain, delta, exponent) {\n    return pan(domain, delta, pow(exponent), pow(1 / exponent));\n  }\n  function panSymlog(domain, delta, constant) {\n    return pan(domain, delta, symlog(constant), symexp(constant));\n  }\n\n  function zoom(domain, anchor, scale, lift, ground) {\n    const d0 = lift(domain[0]),\n          d1 = lift(peek(domain)),\n          da = anchor != null ? lift(anchor) : (d0 + d1) / 2;\n    return [ground(da + (d0 - da) * scale), ground(da + (d1 - da) * scale)];\n  }\n\n  function zoomLinear(domain, anchor, scale) {\n    return zoom(domain, anchor, scale, toNumber, identity);\n  }\n  function zoomLog(domain, anchor, scale) {\n    const sign = Math.sign(domain[0]);\n    return zoom(domain, anchor, scale, log(sign), exp(sign));\n  }\n  function zoomPow(domain, anchor, scale, exponent) {\n    return zoom(domain, anchor, scale, pow(exponent), pow(1 / exponent));\n  }\n  function zoomSymlog(domain, anchor, scale, constant) {\n    return zoom(domain, anchor, scale, symlog(constant), symexp(constant));\n  }\n\n  function quarter(date) {\n    return 1 + ~~(new Date(date).getMonth() / 3);\n  }\n  function utcquarter(date) {\n    return 1 + ~~(new Date(date).getUTCMonth() / 3);\n  }\n\n  function array (_) {\n    return _ != null ? isArray(_) ? _ : [_] : [];\n  }\n\n  /**\n   * Span-preserving range clamp. If the span of the input range is less\n   * than (max - min) and an endpoint exceeds either the min or max value,\n   * the range is translated such that the span is preserved and one\n   * endpoint touches the boundary of the min/max range.\n   * If the span exceeds (max - min), the range [min, max] is returned.\n   */\n  function clampRange (range, min, max) {\n    let lo = range[0],\n        hi = range[1],\n        span;\n\n    if (hi < lo) {\n      span = hi;\n      hi = lo;\n      lo = span;\n    }\n\n    span = hi - lo;\n    return span >= max - min ? [min, max] : [lo = Math.min(Math.max(lo, min), max - span), lo + span];\n  }\n\n  function isFunction (_) {\n    return typeof _ === 'function';\n  }\n\n  const DESCENDING = 'descending';\n  function compare (fields, orders, opt) {\n    opt = opt || {};\n    orders = array(orders) || [];\n    const ord = [],\n          get = [],\n          fmap = {},\n          gen = opt.comparator || comparator;\n    array(fields).forEach((f, i) => {\n      if (f == null) return;\n      ord.push(orders[i] === DESCENDING ? -1 : 1);\n      get.push(f = isFunction(f) ? f : field(f, null, opt));\n      (accessorFields(f) || []).forEach(_ => fmap[_] = 1);\n    });\n    return get.length === 0 ? null : accessor(gen(get, ord), Object.keys(fmap));\n  }\n  const ascending = (u, v) => (u < v || u == null) && v != null ? -1 : (u > v || v == null) && u != null ? 1 : (v = v instanceof Date ? +v : v, u = u instanceof Date ? +u : u) !== u && v === v ? -1 : v !== v && u === u ? 1 : 0;\n\n  const comparator = (fields, orders) => fields.length === 1 ? compare1(fields[0], orders[0]) : compareN(fields, orders, fields.length);\n\n  const compare1 = (field, order) => function (a, b) {\n    return ascending(field(a), field(b)) * order;\n  };\n\n  const compareN = (fields, orders, n) => {\n    orders.push(0); // pad zero for convenient lookup\n\n    return function (a, b) {\n      let f,\n          c = 0,\n          i = -1;\n\n      while (c === 0 && ++i < n) {\n        f = fields[i];\n        c = ascending(f(a), f(b));\n      }\n\n      return c * orders[i];\n    };\n  };\n\n  function constant (_) {\n    return isFunction(_) ? _ : () => _;\n  }\n\n  function debounce (delay, handler) {\n    let tid;\n    return e => {\n      if (tid) clearTimeout(tid);\n      tid = setTimeout(() => (handler(e), tid = null), delay);\n    };\n  }\n\n  function extend (_) {\n    for (let x, k, i = 1, len = arguments.length; i < len; ++i) {\n      x = arguments[i];\n\n      for (k in x) {\n        _[k] = x[k];\n      }\n    }\n\n    return _;\n  }\n\n  /**\n   * Return an array with minimum and maximum values, in the\n   * form [min, max]. Ignores null, undefined, and NaN values.\n   */\n  function extent (array, f) {\n    let i = 0,\n        n,\n        v,\n        min,\n        max;\n\n    if (array && (n = array.length)) {\n      if (f == null) {\n        // find first valid value\n        for (v = array[i]; i < n && (v == null || v !== v); v = array[++i]);\n\n        min = max = v; // visit all other values\n\n        for (; i < n; ++i) {\n          v = array[i]; // skip null/undefined; NaN will fail all comparisons\n\n          if (v != null) {\n            if (v < min) min = v;\n            if (v > max) max = v;\n          }\n        }\n      } else {\n        // find first valid value\n        for (v = f(array[i]); i < n && (v == null || v !== v); v = f(array[++i]));\n\n        min = max = v; // visit all other values\n\n        for (; i < n; ++i) {\n          v = f(array[i]); // skip null/undefined; NaN will fail all comparisons\n\n          if (v != null) {\n            if (v < min) min = v;\n            if (v > max) max = v;\n          }\n        }\n      }\n    }\n\n    return [min, max];\n  }\n\n  function extentIndex (array, f) {\n    const n = array.length;\n    let i = -1,\n        a,\n        b,\n        c,\n        u,\n        v;\n\n    if (f == null) {\n      while (++i < n) {\n        b = array[i];\n\n        if (b != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      if (i === n) return [-1, -1];\n      u = v = i;\n\n      while (++i < n) {\n        b = array[i];\n\n        if (b != null) {\n          if (a > b) {\n            a = b;\n            u = i;\n          }\n\n          if (c < b) {\n            c = b;\n            v = i;\n          }\n        }\n      }\n    } else {\n      while (++i < n) {\n        b = f(array[i], i, array);\n\n        if (b != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      if (i === n) return [-1, -1];\n      u = v = i;\n\n      while (++i < n) {\n        b = f(array[i], i, array);\n\n        if (b != null) {\n          if (a > b) {\n            a = b;\n            u = i;\n          }\n\n          if (c < b) {\n            c = b;\n            v = i;\n          }\n        }\n      }\n    }\n\n    return [u, v];\n  }\n\n  const hop = Object.prototype.hasOwnProperty;\n  function has (object, property) {\n    return hop.call(object, property);\n  }\n\n  const NULL = {};\n  function fastmap (input) {\n    let obj = {},\n        test;\n\n    function has$1(key) {\n      return has(obj, key) && obj[key] !== NULL;\n    }\n\n    const map = {\n      size: 0,\n      empty: 0,\n      object: obj,\n      has: has$1,\n\n      get(key) {\n        return has$1(key) ? obj[key] : undefined;\n      },\n\n      set(key, value) {\n        if (!has$1(key)) {\n          ++map.size;\n          if (obj[key] === NULL) --map.empty;\n        }\n\n        obj[key] = value;\n        return this;\n      },\n\n      delete(key) {\n        if (has$1(key)) {\n          --map.size;\n          ++map.empty;\n          obj[key] = NULL;\n        }\n\n        return this;\n      },\n\n      clear() {\n        map.size = map.empty = 0;\n        map.object = obj = {};\n      },\n\n      test(_) {\n        if (arguments.length) {\n          test = _;\n          return map;\n        } else {\n          return test;\n        }\n      },\n\n      clean() {\n        const next = {};\n        let size = 0;\n\n        for (const key in obj) {\n          const value = obj[key];\n\n          if (value !== NULL && (!test || !test(value))) {\n            next[key] = value;\n            ++size;\n          }\n        }\n\n        map.size = size;\n        map.empty = 0;\n        map.object = obj = next;\n      }\n\n    };\n    if (input) Object.keys(input).forEach(key => {\n      map.set(key, input[key]);\n    });\n    return map;\n  }\n\n  function flush (range, value, threshold, left, right, center) {\n    if (!threshold && threshold !== 0) return center;\n    const t = +threshold;\n    let a = range[0],\n        b = peek(range),\n        l; // swap endpoints if range is reversed\n\n    if (b < a) {\n      l = a;\n      a = b;\n      b = l;\n    } // compare value to endpoints\n\n\n    l = Math.abs(value - a);\n    const r = Math.abs(b - value); // adjust if value is within threshold distance of endpoint\n\n    return l < r && l <= t ? left : r <= t ? right : center;\n  }\n\n  function inherits (child, parent, members) {\n    const proto = child.prototype = Object.create(parent.prototype);\n    Object.defineProperty(proto, 'constructor', {\n      value: child,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n    return extend(proto, members);\n  }\n\n  /**\n   * Predicate that returns true if the value lies within the span\n   * of the given range. The left and right flags control the use\n   * of inclusive (true) or exclusive (false) comparisons.\n   */\n  function inrange (value, range, left, right) {\n    let r0 = range[0],\n        r1 = range[range.length - 1],\n        t;\n\n    if (r0 > r1) {\n      t = r0;\n      r0 = r1;\n      r1 = t;\n    }\n\n    left = left === undefined || left;\n    right = right === undefined || right;\n    return (left ? r0 <= value : r0 < value) && (right ? value <= r1 : value < r1);\n  }\n\n  function isBoolean (_) {\n    return typeof _ === 'boolean';\n  }\n\n  function isDate (_) {\n    return Object.prototype.toString.call(_) === '[object Date]';\n  }\n\n  function isIterable (_) {\n    return _ && isFunction(_[Symbol.iterator]);\n  }\n\n  function isNumber (_) {\n    return typeof _ === 'number';\n  }\n\n  function isRegExp (_) {\n    return Object.prototype.toString.call(_) === '[object RegExp]';\n  }\n\n  function isString (_) {\n    return typeof _ === 'string';\n  }\n\n  function key (fields, flat, opt) {\n    if (fields) {\n      fields = flat ? array(fields).map(f => f.replace(/\\\\(.)/g, '$1')) : array(fields);\n    }\n\n    const len = fields && fields.length,\n          gen = opt && opt.get || getter,\n          map = f => gen(flat ? [f] : splitAccessPath(f));\n\n    let fn;\n\n    if (!len) {\n      fn = function () {\n        return '';\n      };\n    } else if (len === 1) {\n      const get = map(fields[0]);\n\n      fn = function (_) {\n        return '' + get(_);\n      };\n    } else {\n      const get = fields.map(map);\n\n      fn = function (_) {\n        let s = '' + get[0](_),\n            i = 0;\n\n        while (++i < len) s += '|' + get[i](_);\n\n        return s;\n      };\n    }\n\n    return accessor(fn, fields, 'key');\n  }\n\n  function lerp (array, frac) {\n    const lo = array[0],\n          hi = peek(array),\n          f = +frac;\n    return !f ? lo : f === 1 ? hi : lo + f * (hi - lo);\n  }\n\n  const DEFAULT_MAX_SIZE = 10000; // adapted from https://github.com/dominictarr/hashlru/ (MIT License)\n\n  function lruCache (maxsize) {\n    maxsize = +maxsize || DEFAULT_MAX_SIZE;\n    let curr, prev, size;\n\n    const clear = () => {\n      curr = {};\n      prev = {};\n      size = 0;\n    };\n\n    const update = (key, value) => {\n      if (++size > maxsize) {\n        prev = curr;\n        curr = {};\n        size = 1;\n      }\n\n      return curr[key] = value;\n    };\n\n    clear();\n    return {\n      clear,\n      has: key => has(curr, key) || has(prev, key),\n      get: key => has(curr, key) ? curr[key] : has(prev, key) ? update(key, prev[key]) : undefined,\n      set: (key, value) => has(curr, key) ? curr[key] = value : update(key, value)\n    };\n  }\n\n  function merge (compare, array0, array1, output) {\n    const n0 = array0.length,\n          n1 = array1.length;\n    if (!n1) return array0;\n    if (!n0) return array1;\n    const merged = output || new array0.constructor(n0 + n1);\n    let i0 = 0,\n        i1 = 0,\n        i = 0;\n\n    for (; i0 < n0 && i1 < n1; ++i) {\n      merged[i] = compare(array0[i0], array1[i1]) > 0 ? array1[i1++] : array0[i0++];\n    }\n\n    for (; i0 < n0; ++i0, ++i) {\n      merged[i] = array0[i0];\n    }\n\n    for (; i1 < n1; ++i1, ++i) {\n      merged[i] = array1[i1];\n    }\n\n    return merged;\n  }\n\n  function repeat (str, reps) {\n    let s = '';\n\n    while (--reps >= 0) s += str;\n\n    return s;\n  }\n\n  function pad (str, length, padchar, align) {\n    const c = padchar || ' ',\n          s = str + '',\n          n = length - s.length;\n    return n <= 0 ? s : align === 'left' ? repeat(c, n) + s : align === 'center' ? repeat(c, ~~(n / 2)) + s + repeat(c, Math.ceil(n / 2)) : s + repeat(c, n);\n  }\n\n  /**\n   * Return the numerical span of an array: the difference between\n   * the last and first values.\n   */\n\n  function span (array) {\n    return array && peek(array) - array[0] || 0;\n  }\n\n  function $(x) {\n    return isArray(x) ? '[' + x.map($) + ']' : isObject(x) || isString(x) ? // Output valid JSON and JS source strings.\n    // See http://timelessrepo.com/json-isnt-a-javascript-subset\n    JSON.stringify(x).replace('\\u2028', '\\\\u2028').replace('\\u2029', '\\\\u2029') : x;\n  }\n\n  function toBoolean (_) {\n    return _ == null || _ === '' ? null : !_ || _ === 'false' || _ === '0' ? false : !!_;\n  }\n\n  const defaultParser = _ => isNumber(_) ? _ : isDate(_) ? _ : Date.parse(_);\n\n  function toDate (_, parser) {\n    parser = parser || defaultParser;\n    return _ == null || _ === '' ? null : parser(_);\n  }\n\n  function toString (_) {\n    return _ == null || _ === '' ? null : _ + '';\n  }\n\n  function toSet (_) {\n    const s = {},\n          n = _.length;\n\n    for (let i = 0; i < n; ++i) s[_[i]] = true;\n\n    return s;\n  }\n\n  function truncate (str, length, align, ellipsis) {\n    const e = ellipsis != null ? ellipsis : '\\u2026',\n          s = str + '',\n          n = s.length,\n          l = Math.max(0, length - e.length);\n    return n <= length ? s : align === 'left' ? e + s.slice(n - l) : align === 'center' ? s.slice(0, Math.ceil(l / 2)) + e + s.slice(n - ~~(l / 2)) : s.slice(0, l) + e;\n  }\n\n  function visitArray (array, filter, visitor) {\n    if (array) {\n      if (filter) {\n        const n = array.length;\n\n        for (let i = 0; i < n; ++i) {\n          const t = filter(array[i]);\n          if (t) visitor(t, i, array);\n        }\n      } else {\n        array.forEach(visitor);\n      }\n    }\n  }\n\n  exports.Debug = Debug;\n  exports.Error = Error$1;\n  exports.Info = Info;\n  exports.None = None;\n  exports.Warn = Warn;\n  exports.accessor = accessor;\n  exports.accessorFields = accessorFields;\n  exports.accessorName = accessorName;\n  exports.array = array;\n  exports.ascending = ascending;\n  exports.clampRange = clampRange;\n  exports.compare = compare;\n  exports.constant = constant;\n  exports.debounce = debounce;\n  exports.error = error;\n  exports.extend = extend;\n  exports.extent = extent;\n  exports.extentIndex = extentIndex;\n  exports.falsy = falsy;\n  exports.fastmap = fastmap;\n  exports.field = field;\n  exports.flush = flush;\n  exports.hasOwnProperty = has;\n  exports.id = id;\n  exports.identity = identity;\n  exports.inherits = inherits;\n  exports.inrange = inrange;\n  exports.isArray = isArray;\n  exports.isBoolean = isBoolean;\n  exports.isDate = isDate;\n  exports.isFunction = isFunction;\n  exports.isIterable = isIterable;\n  exports.isNumber = isNumber;\n  exports.isObject = isObject;\n  exports.isRegExp = isRegExp;\n  exports.isString = isString;\n  exports.key = key;\n  exports.lerp = lerp;\n  exports.logger = logger;\n  exports.lruCache = lruCache;\n  exports.merge = merge;\n  exports.mergeConfig = mergeConfig;\n  exports.one = one;\n  exports.pad = pad;\n  exports.panLinear = panLinear;\n  exports.panLog = panLog;\n  exports.panPow = panPow;\n  exports.panSymlog = panSymlog;\n  exports.peek = peek;\n  exports.quarter = quarter;\n  exports.repeat = repeat;\n  exports.span = span;\n  exports.splitAccessPath = splitAccessPath;\n  exports.stringValue = $;\n  exports.toBoolean = toBoolean;\n  exports.toDate = toDate;\n  exports.toNumber = toNumber;\n  exports.toSet = toSet;\n  exports.toString = toString;\n  exports.truncate = truncate;\n  exports.truthy = truthy;\n  exports.utcquarter = utcquarter;\n  exports.visitArray = visitArray;\n  exports.writeConfig = writeConfig;\n  exports.zero = zero;\n  exports.zoomLinear = zoomLinear;\n  exports.zoomLog = zoomLog;\n  exports.zoomPow = zoomPow;\n  exports.zoomSymlog = zoomSymlog;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","accessor","fn","fields","name","fname","accessorFields","getter","path","length","get1","getN","error","message","Error","splitAccessPath","p","push","s","substring","i","j","n","q","b","c","field","opt","get","log$1","method","level","input","args","concat","slice","call","console","apply","isObject","_","Object","writeConfig","output","key","value","recurse","k","isArray","o","mergeNamed","a","add","map","out","forEach","peek","array","toNumber","pan","domain","delta","lift","ground","d0","d1","dd","zoom","anchor","scale","da","isFunction","extend","x","len","arguments","has","object","property","hop","isDate","prototype","toString","isNumber","isString","repeat","str","reps","$","JSON","stringify","replace","obj","id","identity","zero","one","truthy","falsy","Array","exp","sign","Math","log","symlog","log1p","abs","symexp","expm1","pow","exponent","ascending","u","v","Date","comparator","orders","compare1","compareN","order","f","hasOwnProperty","NULL","defaultParser","parse","Debug","Error$1","Info","None","Warn","accessorName","clampRange","range","min","max","lo","hi","span","compare","ord","fmap","gen","DESCENDING","keys","constant","debounce","delay","handler","tid","e","clearTimeout","setTimeout","extent","extentIndex","fastmap","has$1","test","size","empty","undefined","set","delete","clear","clean","next","flush","threshold","left","right","center","t","l","r","inherits","child","parent","members","proto","create","defineProperty","writable","enumerable","configurable","inrange","r0","r1","isBoolean","isIterable","Symbol","iterator","isRegExp","flat","lerp","frac","logger","warn","info","debug","lruCache","maxsize","DEFAULT_MAX_SIZE","curr","prev","update","merge","array0","array1","n0","n1","merged","constructor","i0","i1","mergeConfig","configs","reduce","source","signals","layout","pad","padchar","align","ceil","panLinear","panLog","panPow","panSymlog","quarter","date","getMonth","stringValue","toBoolean","toDate","parser","toSet","truncate","ellipsis","utcquarter","getUTCMonth","visitArray","filter","visitor","zoomLinear","zoomLog","zoomPow","zoomSymlog"]
}
