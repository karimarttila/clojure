{"version":3,"sources":["vega/frontend/components.cljs"],"mappings":";;;;;;;;AAcA,AAAA,AAAKA;AAOL,AAAA,AAAAC,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAM,AAAA,AAAA,AAAA,AAAA,AAAWC,AAAcC,AAAKC;;AAE7C,AAAA,AAAMC,AAAWC,AAASC;AAA1B,AACE,AAACC,AAAeF;;AADlB,AAEOC,AACA,AACA,AACE,AAAKE;AAAL,AACMH,AACA,AAAcG;;;AAE7B;;;AAAA,AAAMC,AAEHC,AAAKC;AAFR,AAGE,AAAML,AAAK,AAACI,AAAAA,AAAAA,AAAKC,AAAAA;AAAjB,AACE,AAAA,AAAA,AAAA,AAAA,AAACC,AAEuB,AAAKC;AAAL,AACE,AAACT,AAAU,AAACU,AAAYD,AAAMP;AAHxD,AAImB,AAAKO;AAAL,AAAA,AAAA;;;AAMvB,AAAA,AAAME,AAAyBT;AAA/B,AACE,AAAA,AAACU,AACAC,AACWX;;AAEd,AAAA,AAAMY,AAAmCZ;AAAzC,AACE,AAAA,AAACU,AACAC,AACW,AAACE,AAAQb","names":["vega.frontend.components/debug","js/vega","js/vega.frontend","js/vega.frontend.components","js/vega.frontend.components.my-vl","vega.frontend.components/my-vl","js/module$node_modules$vega_lite_api$build$vega_lite_api","js/module$node_modules$vega$build$vega_node","js/module$node_modules$vega_lite$build$vega_lite","vega.frontend.components/render-it","dom-node","spec","js/console.log","viewElement","vega.frontend.components/vega-lite-api-render","func","data","reagent.core.create_class","this","reagent.dom/dom-node","vega.frontend.components/vega-lite-react-wrapper","reagent.core.create_element","js/module$node_modules$react_vega$lib$index.VegaLite","vega.frontend.components/vega-lite-react-wrapper-old-style","cljs.core/clj->js"],"sourcesContent":["(ns vega.frontend.components\n  (:require\n    [reagent.core :as r]\n    [reagent.dom :as rd]\n    [\"react\" :as react]\n    [\"react-dom\" :as r-dom]\n    [\"react-vega\" :as r-vega :refer [VegaLite]]\n    [\"vega-embed\" :as vegaEmbed]\n    [\"vega\" :as vega]\n    [\"vega-lite\" :as vega-lite]\n    [\"vega-lite-api\" :as vega-lite-api :refer [vl]]\n    )\n  )\n\n(def debug true)\n\n;; ********************************************************'\n;; Vega Lite API\n;; As explained in https://observablehq.com/@vega/vega-lite-api#standalone_use\n;; but using Clojurescript.\n\n(defonce my-vl (.register vega-lite-api vega vega-lite #js {:view {:renderer \"canvas\"}}))\n\n(defn render-it [dom-node spec]\n  (js/console.log dom-node) ; See the div in browser console.\n  [(-> spec\n       (.render)\n       (.then\n         (fn [viewElement]\n           (-> dom-node\n               (.appendChild viewElement)))))])\n\n(defn vega-lite-api-render\n  \"Reagent component that renders vega\"\n  [func data]\n  (let [spec (func data)]\n    (r/create-class\n      {:display-name \"vega\"\n       :component-did-mount (fn [this]\n                              (render-it (rd/dom-node this) spec))\n       :reagent-render (fn [this]\n                         [:div.viz])})))\n\n;; *****************************************************************\n;; Vega-Lite React wrapper\n; See: https://github.com/reagent-project/reagent/blob/master/examples/react-context/src/example/core.cljs\n(defn vega-lite-react-wrapper [spec]\n  (r/create-element\n   VegaLite\n   #js {:spec spec}))\n\n(defn vega-lite-react-wrapper-old-style [spec]\n  (r/create-element\n   VegaLite\n   #js {:spec (clj->js spec)}))\n\n\n"]}