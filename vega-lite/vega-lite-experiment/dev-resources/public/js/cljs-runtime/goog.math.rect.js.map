{
"version":3,
"file":"goog.math.rect.js",
"lineCount":191,
"mappings":"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",
"sources":["goog/math/rect.js"],
"sourcesContent":["// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A utility class for representing rectangles. Some of these\n * functions should be migrated over to non-nullable params.\n */\n\ngoog.provide('goog.math.Rect');\n\ngoog.require('goog.asserts');\ngoog.require('goog.math.Box');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.IRect');\ngoog.require('goog.math.Size');\n\n\n\n/**\n * Class for representing rectangular regions.\n * @param {number} x Left.\n * @param {number} y Top.\n * @param {number} w Width.\n * @param {number} h Height.\n * @struct\n * @constructor\n * @implements {goog.math.IRect}\n */\ngoog.math.Rect = function(x, y, w, h) {\n  /** @type {number} */\n  this.left = x;\n\n  /** @type {number} */\n  this.top = y;\n\n  /** @type {number} */\n  this.width = w;\n\n  /** @type {number} */\n  this.height = h;\n};\n\n\n/**\n * @return {!goog.math.Rect} A new copy of this Rectangle.\n */\ngoog.math.Rect.prototype.clone = function() {\n  return new goog.math.Rect(this.left, this.top, this.width, this.height);\n};\n\n\n/**\n * Returns a new Box object with the same position and dimensions as this\n * rectangle.\n * @return {!goog.math.Box} A new Box representation of this Rectangle.\n */\ngoog.math.Rect.prototype.toBox = function() {\n  var right = this.left + this.width;\n  var bottom = this.top + this.height;\n  return new goog.math.Box(this.top, right, bottom, this.left);\n};\n\n\n/**\n * Creates a new Rect object with the position and size given.\n * @param {!goog.math.Coordinate} position The top-left coordinate of the Rect\n * @param {!goog.math.Size} size The size of the Rect\n * @return {!goog.math.Rect} A new Rect initialized with the given position and\n *     size.\n */\ngoog.math.Rect.createFromPositionAndSize = function(position, size) {\n  return new goog.math.Rect(position.x, position.y, size.width, size.height);\n};\n\n\n/**\n * Creates a new Rect object with the same position and dimensions as a given\n * Box.  Note that this is only the inverse of toBox if left/top are defined.\n * @param {goog.math.Box} box A box.\n * @return {!goog.math.Rect} A new Rect initialized with the box's position\n *     and size.\n */\ngoog.math.Rect.createFromBox = function(box) {\n  return new goog.math.Rect(\n      box.left, box.top, box.right - box.left, box.bottom - box.top);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a nice string representing size and dimensions of rectangle.\n   * @return {string} In the form (50, 73 - 75w x 25h).\n   * @override\n   */\n  goog.math.Rect.prototype.toString = function() {\n    return '(' + this.left + ', ' + this.top + ' - ' + this.width + 'w x ' +\n        this.height + 'h)';\n  };\n}\n\n\n/**\n * Compares rectangles for equality.\n * @param {goog.math.IRect} a A Rectangle.\n * @param {goog.math.IRect} b A Rectangle.\n * @return {boolean} True iff the rectangles have the same left, top, width,\n *     and height, or if both are null.\n */\ngoog.math.Rect.equals = function(a, b) {\n  if (a == b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.left == b.left && a.width == b.width && a.top == b.top &&\n      a.height == b.height;\n};\n\n\n/**\n * Computes the intersection of this rectangle and the rectangle parameter.  If\n * there is no intersection, returns false and leaves this rectangle as is.\n * @param {goog.math.IRect} rect A Rectangle.\n * @return {boolean} True iff this rectangle intersects with the parameter.\n */\ngoog.math.Rect.prototype.intersection = function(rect) {\n  var x0 = Math.max(this.left, rect.left);\n  var x1 = Math.min(this.left + this.width, rect.left + rect.width);\n\n  if (x0 <= x1) {\n    var y0 = Math.max(this.top, rect.top);\n    var y1 = Math.min(this.top + this.height, rect.top + rect.height);\n\n    if (y0 <= y1) {\n      this.left = x0;\n      this.top = y0;\n      this.width = x1 - x0;\n      this.height = y1 - y0;\n\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Returns the intersection of two rectangles. Two rectangles intersect if they\n * touch at all, for example, two zero width and height rectangles would\n * intersect if they had the same top and left.\n * @param {goog.math.IRect} a A Rectangle.\n * @param {goog.math.IRect} b A Rectangle.\n * @return {goog.math.Rect} A new intersection rect (even if width and height\n *     are 0), or null if there is no intersection.\n */\ngoog.math.Rect.intersection = function(a, b) {\n  // There is no nice way to do intersection via a clone, because any such\n  // clone might be unnecessary if this function returns null.  So, we duplicate\n  // code from above.\n\n  var x0 = Math.max(a.left, b.left);\n  var x1 = Math.min(a.left + a.width, b.left + b.width);\n\n  if (x0 <= x1) {\n    var y0 = Math.max(a.top, b.top);\n    var y1 = Math.min(a.top + a.height, b.top + b.height);\n\n    if (y0 <= y1) {\n      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);\n    }\n  }\n  return null;\n};\n\n\n/**\n * Returns whether two rectangles intersect. Two rectangles intersect if they\n * touch at all, for example, two zero width and height rectangles would\n * intersect if they had the same top and left.\n * @param {goog.math.IRect} a A Rectangle.\n * @param {goog.math.IRect} b A Rectangle.\n * @return {boolean} Whether a and b intersect.\n */\ngoog.math.Rect.intersects = function(a, b) {\n  return (\n      a.left <= b.left + b.width && b.left <= a.left + a.width &&\n      a.top <= b.top + b.height && b.top <= a.top + a.height);\n};\n\n\n/**\n * Returns whether a rectangle intersects this rectangle.\n * @param {goog.math.IRect} rect A rectangle.\n * @return {boolean} Whether rect intersects this rectangle.\n */\ngoog.math.Rect.prototype.intersects = function(rect) {\n  return goog.math.Rect.intersects(this, rect);\n};\n\n\n/**\n * Computes the difference regions between two rectangles. The return value is\n * an array of 0 to 4 rectangles defining the remaining regions of the first\n * rectangle after the second has been subtracted.\n * @param {goog.math.Rect} a A Rectangle.\n * @param {goog.math.IRect} b A Rectangle.\n * @return {!Array<!goog.math.Rect>} An array with 0 to 4 rectangles which\n *     together define the difference area of rectangle a minus rectangle b.\n */\ngoog.math.Rect.difference = function(a, b) {\n  var intersection = goog.math.Rect.intersection(a, b);\n  if (!intersection || !intersection.height || !intersection.width) {\n    return [a.clone()];\n  }\n\n  var result = [];\n\n  var top = a.top;\n  var height = a.height;\n\n  var ar = a.left + a.width;\n  var ab = a.top + a.height;\n\n  var br = b.left + b.width;\n  var bb = b.top + b.height;\n\n  // Subtract off any area on top where A extends past B\n  if (b.top > a.top) {\n    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));\n    top = b.top;\n    // If we're moving the top down, we also need to subtract the height diff.\n    height -= b.top - a.top;\n  }\n  // Subtract off any area on bottom where A extends past B\n  if (bb < ab) {\n    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));\n    height = bb - top;\n  }\n  // Subtract any area on left where A extends past B\n  if (b.left > a.left) {\n    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));\n  }\n  // Subtract any area on right where A extends past B\n  if (br < ar) {\n    result.push(new goog.math.Rect(br, top, ar - br, height));\n  }\n\n  return result;\n};\n\n\n/**\n * Computes the difference regions between this rectangle and `rect`. The\n * return value is an array of 0 to 4 rectangles defining the remaining regions\n * of this rectangle after the other has been subtracted.\n * @param {goog.math.IRect} rect A Rectangle.\n * @return {!Array<!goog.math.Rect>} An array with 0 to 4 rectangles which\n *     together define the difference area of rectangle a minus rectangle b.\n */\ngoog.math.Rect.prototype.difference = function(rect) {\n  return goog.math.Rect.difference(this, rect);\n};\n\n\n/**\n * Expand this rectangle to also include the area of the given rectangle.\n * @param {goog.math.IRect} rect The other rectangle.\n */\ngoog.math.Rect.prototype.boundingRect = function(rect) {\n  // We compute right and bottom before we change left and top below.\n  var right = Math.max(this.left + this.width, rect.left + rect.width);\n  var bottom = Math.max(this.top + this.height, rect.top + rect.height);\n\n  this.left = Math.min(this.left, rect.left);\n  this.top = Math.min(this.top, rect.top);\n\n  this.width = right - this.left;\n  this.height = bottom - this.top;\n};\n\n\n/**\n * Returns a new rectangle which completely contains both input rectangles.\n * @param {goog.math.IRect} a A rectangle.\n * @param {goog.math.IRect} b A rectangle.\n * @return {goog.math.Rect} A new bounding rect, or null if either rect is\n *     null.\n */\ngoog.math.Rect.boundingRect = function(a, b) {\n  if (!a || !b) {\n    return null;\n  }\n\n  var newRect = new goog.math.Rect(a.left, a.top, a.width, a.height);\n  newRect.boundingRect(b);\n\n  return newRect;\n};\n\n\n/**\n * Tests whether this rectangle entirely contains another rectangle or\n * coordinate.\n *\n * @param {goog.math.IRect|goog.math.Coordinate} another The rectangle or\n *     coordinate to test for containment.\n * @return {boolean} Whether this rectangle contains given rectangle or\n *     coordinate.\n */\ngoog.math.Rect.prototype.contains = function(another) {\n  if (another instanceof goog.math.Coordinate) {\n    return another.x >= this.left && another.x <= this.left + this.width &&\n        another.y >= this.top && another.y <= this.top + this.height;\n  } else {  // (another instanceof goog.math.IRect)\n    return this.left <= another.left &&\n        this.left + this.width >= another.left + another.width &&\n        this.top <= another.top &&\n        this.top + this.height >= another.top + another.height;\n  }\n};\n\n\n/**\n * @param {!goog.math.Coordinate} point A coordinate.\n * @return {number} The squared distance between the point and the closest\n *     point inside the rectangle. Returns 0 if the point is inside the\n *     rectangle.\n */\ngoog.math.Rect.prototype.squaredDistance = function(point) {\n  var dx = point.x < this.left ?\n      this.left - point.x :\n      Math.max(point.x - (this.left + this.width), 0);\n  var dy = point.y < this.top ? this.top - point.y :\n                                Math.max(point.y - (this.top + this.height), 0);\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @param {!goog.math.Coordinate} point A coordinate.\n * @return {number} The distance between the point and the closest point\n *     inside the rectangle. Returns 0 if the point is inside the rectangle.\n */\ngoog.math.Rect.prototype.distance = function(point) {\n  return Math.sqrt(this.squaredDistance(point));\n};\n\n\n/**\n * @return {!goog.math.Size} The size of this rectangle.\n */\ngoog.math.Rect.prototype.getSize = function() {\n  return new goog.math.Size(this.width, this.height);\n};\n\n\n/**\n * @return {!goog.math.Coordinate} A new coordinate for the top-left corner of\n *     the rectangle.\n */\ngoog.math.Rect.prototype.getTopLeft = function() {\n  return new goog.math.Coordinate(this.left, this.top);\n};\n\n\n/**\n * @return {!goog.math.Coordinate} A new coordinate for the center of the\n *     rectangle.\n */\ngoog.math.Rect.prototype.getCenter = function() {\n  return new goog.math.Coordinate(\n      this.left + this.width / 2, this.top + this.height / 2);\n};\n\n\n/**\n * @return {!goog.math.Coordinate} A new coordinate for the bottom-right corner\n *     of the rectangle.\n */\ngoog.math.Rect.prototype.getBottomRight = function() {\n  return new goog.math.Coordinate(\n      this.left + this.width, this.top + this.height);\n};\n\n\n/**\n * Rounds the fields to the next larger integer values.\n * @return {!goog.math.Rect} This rectangle with ceil'd fields.\n */\ngoog.math.Rect.prototype.ceil = function() {\n  this.left = Math.ceil(this.left);\n  this.top = Math.ceil(this.top);\n  this.width = Math.ceil(this.width);\n  this.height = Math.ceil(this.height);\n  return this;\n};\n\n\n/**\n * Rounds the fields to the next smaller integer values.\n * @return {!goog.math.Rect} This rectangle with floored fields.\n */\ngoog.math.Rect.prototype.floor = function() {\n  this.left = Math.floor(this.left);\n  this.top = Math.floor(this.top);\n  this.width = Math.floor(this.width);\n  this.height = Math.floor(this.height);\n  return this;\n};\n\n\n/**\n * Rounds the fields to nearest integer values.\n * @return {!goog.math.Rect} This rectangle with rounded fields.\n */\ngoog.math.Rect.prototype.round = function() {\n  this.left = Math.round(this.left);\n  this.top = Math.round(this.top);\n  this.width = Math.round(this.width);\n  this.height = Math.round(this.height);\n  return this;\n};\n\n\n/**\n * Translates this rectangle by the given offsets. If a\n * `goog.math.Coordinate` is given, then the left and top values are\n * translated by the coordinate's x and y values. Otherwise, left and top are\n * translated by `tx` and `opt_ty` respectively.\n * @param {number|goog.math.Coordinate} tx The value to translate left by or the\n *     the coordinate to translate this rect by.\n * @param {number=} opt_ty The value to translate top by.\n * @return {!goog.math.Rect} This rectangle after translating.\n */\ngoog.math.Rect.prototype.translate = function(tx, opt_ty) {\n  if (tx instanceof goog.math.Coordinate) {\n    this.left += tx.x;\n    this.top += tx.y;\n  } else {\n    this.left += goog.asserts.assertNumber(tx);\n    if (typeof opt_ty === 'number') {\n      this.top += opt_ty;\n    }\n  }\n  return this;\n};\n\n\n/**\n * Scales this rectangle by the given scale factors. The left and width values\n * are scaled by `sx` and the top and height values are scaled by\n * `opt_sy`.  If `opt_sy` is not given, then all fields are scaled\n * by `sx`.\n * @param {number} sx The scale factor to use for the x dimension.\n * @param {number=} opt_sy The scale factor to use for the y dimension.\n * @return {!goog.math.Rect} This rectangle after scaling.\n */\ngoog.math.Rect.prototype.scale = function(sx, opt_sy) {\n  var sy = (typeof opt_sy === 'number') ? opt_sy : sx;\n  this.left *= sx;\n  this.width *= sx;\n  this.top *= sy;\n  this.height *= sy;\n  return this;\n};\n"],
"names":["goog","provide","require","math","Rect","goog.math.Rect","x","y","w","h","left","top","width","height","prototype","clone","goog.math.Rect.prototype.clone","toBox","goog.math.Rect.prototype.toBox","right","bottom","Box","createFromPositionAndSize","goog.math.Rect.createFromPositionAndSize","position","size","createFromBox","goog.math.Rect.createFromBox","box","DEBUG","toString","goog.math.Rect.prototype.toString","equals","goog.math.Rect.equals","a","b","intersection","goog.math.Rect.prototype.intersection","rect","x0","Math","max","x1","min","y0","y1","goog.math.Rect.intersection","intersects","goog.math.Rect.intersects","goog.math.Rect.prototype.intersects","difference","goog.math.Rect.difference","result","ar","ab","br","bb","push","goog.math.Rect.prototype.difference","boundingRect","goog.math.Rect.prototype.boundingRect","goog.math.Rect.boundingRect","newRect","contains","goog.math.Rect.prototype.contains","another","Coordinate","squaredDistance","goog.math.Rect.prototype.squaredDistance","point","dx","dy","distance","goog.math.Rect.prototype.distance","sqrt","getSize","goog.math.Rect.prototype.getSize","Size","getTopLeft","goog.math.Rect.prototype.getTopLeft","getCenter","goog.math.Rect.prototype.getCenter","getBottomRight","goog.math.Rect.prototype.getBottomRight","ceil","goog.math.Rect.prototype.ceil","floor","goog.math.Rect.prototype.floor","round","goog.math.Rect.prototype.round","translate","goog.math.Rect.prototype.translate","tx","opt_ty","asserts","assertNumber","scale","goog.math.Rect.prototype.scale","sx","opt_sy","sy"]
}
