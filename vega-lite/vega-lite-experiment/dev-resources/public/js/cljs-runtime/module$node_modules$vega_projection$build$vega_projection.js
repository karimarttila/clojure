shadow$provide.module$node_modules$vega_projection$build$vega_projection=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$d3_geo$dist$d3_geo"),require("module$node_modules$d3_geo_projection$dist$d3_geo_projection")):"function"===typeof define&&define.amd?define(["exports","d3-geo","d3-geo-projection"],factory):(global="undefined"!==typeof globalThis?
globalThis:global||self,factory(global.vega={},global.d3,global.d3))})(this,function(exports,d3Geo,d3GeoProjection){function create(type,constructor){return function projection(){var p=constructor();p.type=type;p.path=d3Geo.geoPath().projection(p);p.copy=p.copy||function(){var c=projection();projectionProperties.forEach(function(prop){if(p[prop])c[prop](p[prop]())});c.path.pointRadius(p.path.pointRadius());return c};return p}}function projection$jscomp$0(type,proj){if(!type||"string"!==typeof type)throw Error("Projection type must be a name string.");
type=type.toLowerCase();return 1<arguments.length?(projections[type]=create(type,proj),this):projections[type]||null}var defaultPath=d3Geo.geoPath(),projectionProperties="clipAngle clipExtent scale translate center rotate parallels precision reflectX reflectY coefficient distance fraction lobes parallel radius ratio spacing tilt".split(" "),projections={albers:d3Geo.geoAlbers,albersusa:d3Geo.geoAlbersUsa,azimuthalequalarea:d3Geo.geoAzimuthalEqualArea,azimuthalequidistant:d3Geo.geoAzimuthalEquidistant,
conicconformal:d3Geo.geoConicConformal,conicequalarea:d3Geo.geoConicEqualArea,conicequidistant:d3Geo.geoConicEquidistant,equalEarth:d3Geo.geoEqualEarth,equirectangular:d3Geo.geoEquirectangular,gnomonic:d3Geo.geoGnomonic,identity:d3Geo.geoIdentity,mercator:d3Geo.geoMercator,mollweide:d3GeoProjection.geoMollweide,naturalEarth1:d3Geo.geoNaturalEarth1,orthographic:d3Geo.geoOrthographic,stereographic:d3Geo.geoStereographic,transversemercator:d3Geo.geoTransverseMercator},key;for(key in projections)projection$jscomp$0(key,
projections[key]);exports.getProjectionPath=function(proj){return proj&&proj.path||defaultPath};exports.projection=projection$jscomp$0;exports.projectionProperties=projectionProperties;Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$vega_projection$build$vega_projection.js.map
