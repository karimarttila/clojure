{
"version":3,
"file":"module$node_modules$vega_geo$build$vega_geo.js",
"lineCount":44,
"mappings":"AAAAA,cAAA,CAAe,2CAAf,CAAgE,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,gBAAvB,CAAgC,CACvG,SAAS,CAACH,MAAD,CAASI,OAAT,CAAkB,CACP,QAAnB,GAAA,MAAOD,iBAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DE,OAAA,CAAQD,gBAAR,CAAiBF,OAAA,CAAQ,uDAAR,CAAjB,CAA2CA,OAAA,CAAQ,+CAAR,CAA3C,CAAiEA,OAAA,CAAQ,4CAAR,CAAjE,CAAsFA,OAAA,CAAQ,2DAAR,CAAtF,CAAkHA,OAAA,CAAQ,2DAAR,CAAlH;AAA8IA,OAAA,CAAQ,wCAAR,CAA9I,CAAiKA,OAAA,CAAQ,4CAAR,CAAjK,CAAsLA,OAAA,CAAQ,uDAAR,CAAtL,CAA/D,CACkB,UAAlB,GAAA,MAAOI,OAAP,EAAgCA,MAAhC,CAAuCC,GAAvC,CAA6CD,MAAA,CAAO,sGAAA,CAAA,KAAA,CAAA,GAAA,CAAP,CAAyID,OAAzI,CAA7C,EACCJ,MAAA,CAA+B,WAAtB,GAAA,MAAOO,WAAP,CAAoCA,UAApC,CAAiDP,MAAjD,EAA2DQ,IAApE,CAA0EJ,OAAA,EAASJ,MAAA,CAAOS,IAAP,CAAcT,MAAd,CAAqBS,IAArB,EAA6B,EAA7B,CAAiCT,MAAjC,CAAwCS,IAAxC,CAA6CC,UAA7C,CAA0D,EAAnE,EAAwEV,MAAxE,CAA+ES,IAA/E,CAAqFT,MAArF,CAA4FS,IAA5F,CAAkGT,MAAlG,CAAyGW,EAAzG;AAA6GX,MAA7G,CAAoHS,IAApH,CAA0HT,MAA1H,CAAiIS,IAAjI,CAAuIT,MAAvI,CAA8IW,EAA9I,CAAkJX,MAAlJ,CAAyJW,EAAzJ,CAA6JX,MAA7J,CAAoKS,IAApK,CAD3E,CAF0B,CAA3B,CAAA,CAIC,IAJD,CAIQ,QAAS,CAACN,OAAD,CAAUS,YAAV,CAAwBC,QAAxB,CAAkCC,OAAlC,CAA2CC,cAA3C,CAA2DC,cAA3D,CAA2EC,KAA3E,CAAkFC,OAAlF,CAA2FC,UAA3F,CAAuG,CAEvHC,QAASA,KAAI,EAAG,EAIhBC,QAASA,SAAS,EAAG,CAKnBA,QAASA,SAAQ,CAACC,MAAD,CAASC,EAAT,CAAa,CAC5B,MAAOA,GAAA,CAAGC,GAAH,CAAO,QAAA,CAAAC,KAAA,CAAS,CAAA,MAAAC,QAAA,CAAQJ,MAAR,CAAgBG,KAAhB,CAAA,CAAhB,CADqB,CAM9BC,QAASA,QAAO,CAACJ,MAAD,CAASG,KAAT,CAAgB,CAAA,IAC1BE,SAAW,EADe,CAE1BC,MAAQ,EACZC,SAAA,CAASP,MAAT,CAAiBG,KAAjB,CAAwB,QAAA,CAAAK,IAAA,CAAQ,CAC9BC,MAAA,CAAOD,IAAP,CAAaR,MAAb,CAAqBG,KAArB,CA+KJ,KALkB,IACdO,EAAI,CADU,CAEdC,EA3KSH,IA2KTG,CAASC,MAFK,CAGdC,KA5KSL,IA4KF,CAAKG,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAPE,CA5KSL,IA4Ke,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAxBK,CA5KSL,IA4K4B,CAAKG,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAArCE,CA5KSL,IA4K6C,CAAK,CAAL,CAAA,CAAQ,CAAR,CAE1D,CAAO,EAAEE,CAAT,CAAaC,CAAb,CAAA,CAAgBE,IAAA;AA9KHL,IA8KW,CAAKE,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAR,CA9KHF,IA8K4B,CAAKE,CAAL,CAAA,CAAQ,CAAR,CAAzB,CA9KHF,IA8KyC,CAAKE,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAtC,CA9KHF,IA8K0D,CAAKE,CAAL,CAAA,CAAQ,CAAR,CA9KlD,EAAjB,CAgLGG,IAhLH,CAAoBR,QAAA,CAASS,IAAT,CAAc,CAACN,IAAD,CAAd,CAApB,CAA+CF,KAAA,CAAMQ,IAAN,CAAWN,IAAX,CAFjB,CAAhC,CAIAF,MAAA,CAAMS,OAAN,CAAc,QAAA,CAAAC,aAAA,CAAQ,CACpB,IADoB,IACXN,EAAI,CADO,CACJC,EAAIN,QAAJM,CAAaC,MADT,CACiBK,OAArC,CAA8CP,CAA9C,CAAkDC,CAAlD,CAAqD,EAAED,CAAvD,CAA0D,CAgLlC,CAAA,CAAA,CA/KT,IAAA,yBAAA,CAACO,OAAD,CAAWZ,QAAA,CAASK,CAAT,CAAX,EAAwB,CAAxB,CAoLnB,KApL+CM,IAAAA,KAAAA,aAAAA,CAgL3CN,WAAI,EAhLuCM,CAiL3CL,WAAIK,IAAJL,CAASC,MAGb,CAAO,EAAEF,UAAT,CAAaC,UAAb,CAAA,CAAgB,CAKiB,CAAA,CAAA,CALIH,IAAAA,EAAAA,wBAUrC,KAV2C,IAAA,MAAAQ,IAAA,CAAKN,UAAL,CAAA,CAMvCQ,EAAIC,KAAA,CAAM,CAAN,CANmC,CAOvCC,EAAID,KAAA,CAAM,CAAN,CAPmC,CAQvCE,SAAW,EAR4B,CAUlCX,WAAI,CAV8B,CAU3BC,WAAIH,CAAJG,CAASC,MAVkB,CAUVU,EAAIX,UAAJW,CAAQ,CAAzC,CAA4CZ,UAA5C,CAAgDC,UAAhD,CAAmDW,CAAnD,CAAuDZ,UAAA,EAAvD,CAA4D,CAAA,IACtDa;AAAKf,CAAA,CAAKE,UAAL,CADiD,CAEtDc,GAAKD,EAAA,CAAG,CAAH,CAFiD,CAGtDE,GAAKF,EAAA,CAAG,CAAH,CAHiD,CAItDG,GAAKlB,CAAA,CAAKc,CAAL,CACLK,EAAAA,CAAKD,EAAA,CAAG,CAAH,CAJT,KAKIE,GAAKF,EAAA,CAAG,CAAH,CALT,CAcEhB,UAdF,CAMoBa,EAAAA,EAAIG,GAAAA,CAAAA,EAAIP,GAAAA,CAAAA,KASvB,IAAA,UAAA,EAAAU,EAIC,CAAE,CAAF,CAJD,CAAAC,CAIQ,CAAE,CAAF,CAJR,GAAAC,EAIiB,CAAE,CAAF,CAJjB,CAAAD,CAIwB,CAAE,CAAF,CAJxB,KAAAC,EAImC,CAAE,CAAF,CAJnC,CAAAD,CAI0C,CAAE,CAAF,CAJ1C,GAAAD,EAImD,CAAE,CAAF,CAJnD,CAAAC,CAI0D,CAAE,CAAF,CAJ1D,EAAsB,CAQ7B,CAR6B,CAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAQ7B,CAR6B,EAQ7B,CAR6B,EAAA,CAAA,UAAA,CAQ7B,CAR6B,EAQ7B,CAR6B,EAAA,CAAA,UAAA,CAQ7B,CAAA,UAAA,CAAOE,CAAP,EAAYC,EAAZ,EAAiBA,EAAjB,EAAsBC,EAAtB,EAA2BA,EAA3B,EAAgCD,EAAhC,EAAqCA,EAArC,EAA0CD,CAjBxC,IASK,UATL,CAAoC,CAAA,CAAA,CAAO,CAAP,OAAA,CAAA,CAChCP,EAAJ,CAASL,CAAT,GAAeQ,EAAf,CAAoBR,CAApB,EAAyBF,CAAzB,EAA8BS,CAA9B,CAAmCH,EAAnC,GAA0CJ,CAA1C,CAA8CK,EAA9C,GAAqDG,EAArD,CAA0DH,EAA1D,EAAgED,EAAhE,GAAoEH,QAApE,CAA+E,CAACA,QAAhF,CAR0D,CAW5D,CAAA,CAAOA,QAhB0B,CALjB,GAAQ,CAAR,CAAqC,CAAA,wBAAA,CAAOU,CAAP,OAAA,CAAA,CAArC,CAEhB,wBAAA,CAAO,CAPqB,CA/KtB,GAAmD,EAAnD,GAAI,wBAAJ,CAAuD,CACrDd,OAAA,CAAQH,IAAR,CAAaE,aAAb,CACA,MAFqD,CADC,CADtC,CAAtB,CAQA;MAAO,CACLmB,KAAM,cADD,CAELhC,MAAOA,KAFF,CAGLiC,YAAa/B,QAHR,CAfuB,CAwBhCE,QAASA,SAAQ,CAACP,MAAD,CAASG,KAAT,CAAgBkC,QAAhB,CAA0B,CAgDzCC,QAASA,OAAM,CAACC,IAAD,CAAO,CAAA,IAChBC,MAAQ,CAACD,IAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAD,CAAcrB,CAAd,CAAiBqB,IAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAjB,CAA8BnB,CAA9B,CACRqB,KAAAA,CAAM,CAACF,IAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAD,CAAcrB,CAAd,CAAiBqB,IAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAjB,CAA8BnB,CAA9B,CAFU,KAGhBsB,WAwDY,CAxDZA,CAAmBF,KAwDlB,CAAM,CAAN,CAxDDE,CAAmBF,KAwDH,CAAM,CAAN,CAxDhBE,EAwD4BC,EAxD5BD,CAwDiC,CAxDjCA,EAwDsC,CA3DtB,CAIhBE,SAuDY,CAvDZA,CAAiBH,IAuDhB,CAAM,CAAN,CAvDDG,CAAiBH,IAuDD,CAAM,CAAN,CAvDhBG,EAuD4BD,EAvD5BC,CAuDiC,CAvDjCA,EAuDsC,CA3DtB,CAKhBC,CALgB,CAMhBC,CAEJ,EAAID,CAAJ,CAAQE,aAAA,CAAcL,UAAd,CAAR,EACE,CAAII,CAAJ,CAAQE,eAAA,CAAgBJ,QAAhB,CAAR,GACE,OAAOG,aAAA,CAAcF,CAAd,CAAgBJ,GAAhB,CAGP,CAFA,OAAOO,eAAA,CAAgBF,CAAhB,CAAkBN,KAAlB,CAEP,CAAIK,CAAJ,GAAUC,CAAV,EACED,CAAA,CAAErC,IAAF,CAAOM,IAAP,CAAY2B,IAAZ,CACA,CAAAJ,QAAA,CAASQ,CAAT,CAAWrC,IAAX,CAFF,EAIEwC,eAAA,CAAgBH,CAAhB,CAAkBL,KAAlB,CAJF,CAI6BO,aAAA,CAAcD,CAAd,CAAgBL,GAAhB,CAJ7B,CAIoD,CAChDD,MAAOK,CAAPL,CAASA,KADuC;AAEhDC,IAAKK,CAALL,CAAOA,GAFyC,CAGhDjC,KAAMqC,CAAA,CAAErC,IAAF,CAAOyC,MAAP,CAAcH,CAAd,CAAgBtC,IAAhB,CAH0C,CARtD,GAeE,OAAOuC,aAAA,CAAcF,CAAd,CAAgBJ,GAAhB,CAEP,CADAI,CAAA,CAAErC,IAAF,CAAOM,IAAP,CAAY2B,IAAZ,CACA,CAAAM,aAAA,CAAcF,CAAd,CAAgBJ,GAAhB,CAAsBG,QAAtB,CAAA,CAAkCC,CAjBpC,CADF,CAoBO,CAAIA,CAAJ,CAAQG,eAAA,CAAgBJ,QAAhB,CAAR,EACL,CAAIE,CAAJ,CAAQC,aAAA,CAAcL,UAAd,CAAR,GACE,OAAOM,eAAA,CAAgBH,CAAhB,CAAkBL,KAAlB,CAGP,CAFA,OAAOO,aAAA,CAAcD,CAAd,CAAgBL,GAAhB,CAEP,CAAII,CAAJ,GAAUC,CAAV,EACED,CAAA,CAAErC,IAAF,CAAOM,IAAP,CAAY2B,IAAZ,CACA,CAAAJ,QAAA,CAASQ,CAAT,CAAWrC,IAAX,CAFF,EAIEwC,eAAA,CAAgBF,CAAhB,CAAkBN,KAAlB,CAJF,CAI6BO,aAAA,CAAcF,CAAd,CAAgBJ,GAAhB,CAJ7B,CAIoD,CAChDD,MAAOM,CAAPN,CAASA,KADuC,CAEhDC,IAAKI,CAALJ,CAAOA,GAFyC,CAGhDjC,KAAMsC,CAAA,CAAEtC,IAAF,CAAOyC,MAAP,CAAcJ,CAAd,CAAgBrC,IAAhB,CAH0C,CARtD,GAeE,OAAOwC,eAAA,CAAgBH,CAAhB,CAAkBL,KAAlB,CAEP,CADAK,CAAA,CAAErC,IAAF,CAAO0C,OAAP,CAAeV,KAAf,CACA,CAAAQ,eAAA,CAAgBH,CAAhB,CAAkBL,KAAlB,CAA0BE,UAA1B,CAAA,CAAwCG,CAjB1C,CADK,CAqBLG,eAAA,CAAgBN,UAAhB,CArBK;AAqByBK,aAAA,CAAcH,QAAd,CArBzB,CAqBmD,CACtDJ,MAAOE,UAD+C,CAEtDD,IAAKG,QAFiD,CAGtDpC,KAAM,CAACgC,KAAD,CAAQC,IAAR,CAHgD,CAjDtC,CAhDmB,IACrCO,gBAAkB,EADmB,CAErCD,cAAgB,EAFqB,CAIrC3B,CAMJ,KAAAF,EAAIE,CAAJF,CAAQ,EACR,KAAAiC,GAAKnD,MAAA,CAAO,CAAP,CAALmD,EAAkBhD,KAGlB,KAFAiD,KAAA,CAAMD,EAAN,EAAY,CAAZ,CAAA,CAAepC,OAAf,CAAuBuB,MAAvB,CAEA,CAAO,EAAEpB,CAAT,CAAayB,EAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnB,IAAAU,GAAKF,EAAIA,GAAT,CAAcnD,MAAA,CAAOkB,CAAP,CAAW,CAAX,CAAd,EAA+Bf,KAC/BiD,MAAA,CAAMC,EAAN,CAAWF,EAAX,EAAiB,CAAjB,CAAA,CAAoBpC,OAApB,CAA4BuB,MAA5B,CAFmB,CAOrB,IAFAc,KAAA,CAAMD,EAAN,EAAY,CAAZ,CAAA,CAAepC,OAAf,CAAuBuB,MAAvB,CAEA,CAAO,EAAElB,CAAT,CAAakC,EAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnBpC,CAAA,CAAI,EACJiC,GAAA,CAAKnD,MAAA,CAAOoB,CAAP,CAAWuB,EAAX,CAAgBA,EAAhB,CAAL,EAA4BxC,KAC5B,KAAAoD,GAAKvD,MAAA,CAAOoB,CAAP,CAAWuB,EAAX,CAALY,EAAuBpD,KAGvB,KAFAiD,KAAA,CAAMD,EAAN,EAAY,CAAZ,CAAgBI,EAAhB,EAAsB,CAAtB,CAAA,CAAyBxC,OAAzB,CAAiCuB,MAAjC,CAEA,CAAO,EAAEpB,CAAT,CAAayB,EAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnBU,EAAA,CAAKF,EAAIA,GAAT,CAAcnD,MAAA,CAAOoB,CAAP,CAAWuB,EAAX,CAAgBA,EAAhB,CAAqBzB,CAArB,CAAyB,CAAzB,CAAd,EAA6Cf,KAC7C,KAAAqD,GAAKD,EAAIA,GAAT,CAAcvD,MAAA,CAAOoB,CAAP,CAAWuB,EAAX,CAAgBzB,CAAhB,CAAoB,CAApB,CAAd,EAAwCf,KACxCiD,MAAA,CAAMC,EAAN,CAAWF,EAAX,EAAiB,CAAjB,CAAqBI,EAArB;AAA2B,CAA3B,CAA+BC,EAA/B,EAAqC,CAArC,CAAA,CAAwCzC,OAAxC,CAAgDuB,MAAhD,CAHmB,CAMrBc,KAAA,CAAMD,EAAN,CAAWI,EAAX,EAAiB,CAAjB,CAAA,CAAoBxC,OAApB,CAA4BuB,MAA5B,CAZmB,CAgBrBpB,CAAA,CAAI,EACJqC,GAAA,CAAKvD,MAAA,CAAOoB,CAAP,CAAWuB,EAAX,CAAL,EAAuBxC,KAGvB,KAFAiD,KAAA,CAAMG,EAAN,EAAY,CAAZ,CAAA,CAAexC,OAAf,CAAuBuB,MAAvB,CAEA,CAAO,EAAEpB,CAAT,CAAayB,EAAb,CAAkB,CAAlB,CAAA,CACEa,EACA,CADKD,EACL,CADSA,EACT,CADcvD,MAAA,CAAOoB,CAAP,CAAWuB,EAAX,CAAgBzB,CAAhB,CAAoB,CAApB,CACd,EADwCf,KACxC,CAAAiD,KAAA,CAAMG,EAAN,EAAY,CAAZ,CAAgBC,EAAhB,EAAsB,CAAtB,CAAA,CAAyBzC,OAAzB,CAAiCuB,MAAjC,CAGFc,MAAA,CAAMG,EAAN,EAAY,CAAZ,CAAA,CAAexC,OAAf,CAAuBuB,MAAvB,CA9CyC,CA8G3CmB,QAASA,aAAY,CAACjD,IAAD,CAAOR,MAAP,CAAeG,KAAf,CAAsB,CACzCK,IAAA,CAAKO,OAAL,CAAa,QAAA,CAAAI,KAAA,CAAS,CAAA,IAChBD,EAAIC,KAAA,CAAM,CAAN,CADY,CAEhBC,EAAID,KAAA,CAAM,CAAN,CAFY,CAGhBuC,GAAKxC,CAALwC,CAAS,CAHO,CAIhBC,GAAKvC,CAALuC,CAAS,CAJO,CAMhBC,GAAK5D,MAAA,CAAO2D,EAAP,CAAYhB,EAAZ,CAAiBe,EAAjB,CAET,IAAQ,CAAR,CAAIxC,CAAJ,EAAaA,CAAb,CAAiByB,EAAjB,EAAuBe,EAAvB,GAA8BxC,CAA9B,CAAiC,CAC/B,IAAA2C,GAAK7D,MAAA,CAAO2D,EAAP,CAAYhB,EAAZ,CAAiBe,EAAjB,CAAsB,CAAtB,CACLvC,MAAA,CAAM,CAAN,CAAA,CAAWD,CAAX,EAAgBf,KAAhB,CAAwB0D,EAAxB,GAA+BD,EAA/B,CAAoCC,EAApC,EAA0C,EAFX,CAKzB,CAAR,CAAIzC,CAAJ,EAAaA,CAAb,CAAiBkC,EAAjB,EAAuBK,EAAvB,GAA8BvC,CAA9B,GACEyC,EACA,CADK7D,MAAA,EAAQ2D,EAAR,CAAa,CAAb,EAAkBhB,EAAlB,CAAuBe,EAAvB,CACL,CAAAvC,KAAA,CAAM,CAAN,CAAA,CAAWC,CAAX,EAAgBjB,KAAhB,CAAwB0D,EAAxB;CAA+BD,EAA/B,CAAoCC,EAApC,EAA0C,EAF5C,CAboB,CAAtB,CADyC,CAjJxB,IACflB,GAAK,CADU,CAEfW,GAAK,CAFU,CAGf7C,OAASgD,YAmKb1D,SAAA,CAASK,OAAT,CAAmBA,OAEnBL,SAAA,CAAS+D,IAAT,CAAgBC,QAAS,CAACC,CAAD,CAAI,CAC3B,GAAI,CAACC,SAAD,CAAWrD,MAAf,CAAuB,MAAO,CAAC+B,EAAD,CAAKW,EAAL,CADH,KAGvBY,GAAKC,IAAA,CAAKC,KAAL,CAAWJ,CAAA,CAAE,CAAF,CAAX,CAHkB,CAIvBK,GAAKF,IAAA,CAAKC,KAAL,CAAWJ,CAAA,CAAE,CAAF,CAAX,CAEG,EAAZ,EAAME,EAAN,EAAuB,CAAvB,EAAiBG,EAAjB,EAA2B9E,QAAA,CAAS+E,KAAT,CAAe,cAAf,CAC3B,OAAO3B,GAAA,CAAKuB,EAAL,CAASZ,EAAT,CAAce,EAAd,CAAkBtE,QAPE,CAU7BA,SAAA,CAASU,MAAT,CAAkB8D,QAAS,CAACP,CAAD,CAAI,CAC7B,MAAOC,UAAA,CAAUrD,MAAV,EAAoBH,MAAA,CAASuD,CAAA,CAAIP,YAAJ,CAAmB3D,IAA5B,CAAkCC,QAAtD,EAAkEU,MAAlE,GAA6EgD,YADvD,CAI/B,OAAO1D,SAtLY,CA6OrByE,QAASA,SAAS,CAACC,CAAD,CAAIC,IAAJ,CAAUC,IAAV,CAAgB,CAChC,MAAO,SAAS,CAAC3E,MAAD,CAAS,CAAA,IACnB4E,GAAKrF,QAAA,CAASsF,MAAT,CAAgB7E,MAAhB,CACLwC,OAAAA,CAAQmC,IAAA,CAAOR,IAAA,CAAKW,GAAL,CAASF,EAAA,CAAG,CAAH,CAAT,CAAgB,CAAhB,CAAP,CAA4BA,EAAA,CAAG,CAAH,CACpCG;EAAAA,CAAOH,EAAA,CAAG,CAAH,CAHY,KAInBI,KAAOD,EAAPC,CAAcxC,MACdyC,KAAAA,CAAOP,IAAA,CAAOlF,OAAA,CAAQ0F,QAAR,CAAiB1C,MAAjB,CAAwBuC,EAAxB,CAA8BN,CAA9B,CAAP,CAA0CO,IAA1C,EAAkDP,CAAlD,CAAsD,CAAtD,CACX,OAAOjF,QAAA,CAAQ2F,KAAR,CAAc3C,MAAd,CAAsByC,IAAtB,CAA4BF,EAA5B,CAAkCE,IAAlC,CANgB,CADO,CAwClCG,QAASA,WAAU,CAACC,MAAD,CAAS,CAC1B/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CAD0B,CAoF5BG,QAASA,OAAM,CAACxF,MAAD,CAAS6C,CAAT,CAAYmB,CAAZ,CAAe,CAC5B,IAAM/B,EAAIuC,QAAA,CAASR,CAAT,CAAWwB,MAAX,EAAqB,EAArB,CAAyBxB,CAAzB,CAA2BU,IAA3B,CAA4C,CAAA,CAA5C,GAAiCV,CAAjC,CAAmCW,IAAnC,CACV,OAAqB,QAAd,GAAAX,CAAA,CAAEyB,OAAF,CAAyBxD,CAAzB,CAA6BA,CAAA,CAAEjC,MAAA,CAAOE,GAAP,CAAW,QAAA,CAAAwF,CAAA,CAAK,CAAA,MAAAlG,QAAA,CAAQmG,GAAR,CAAY9C,CAAA,CAAE6C,CAAF,CAAZ,CAAiB1F,MAAjB,CAAA,CAAhB,CAAF,CAFR,CAK9B4F,QAASA,eAAc,CAACC,KAAD,CAAQC,IAAR,CAAcC,KAAd,CAAqB/B,CAArB,CAAwB,CAAA,IACzCgC,EAAIhC,CAAJgC,CAAMC,KAAND,EAAeF,IAAfE,CAAoBC,KADqB,CAEzCP,EAAI1B,CAAJ0B,CAAMQ,SAANR,EAAmBI,IAAnBJ,CAAwBQ,SACxB3G,SAAA,CAAS4G,UAAT,CAAoBH,CAApB,CAAJ,GAA4BA,CAA5B,CAAgCA,CAAA,CAAED,KAAF,CAAS/B,CAAT,CAAhC,CACIzE,SAAA,CAAS4G,UAAT,CAAoBT,CAApB,CAAJ;CAA4BA,CAA5B,CAAgCA,CAAA,CAAEK,KAAF,CAAS/B,CAAT,CAAhC,CACA,IAAW,CAAX,GAAKgC,CAAL,EAAqB,IAArB,EAAgBA,CAAhB,EAA+BN,CAA/B,CACMU,KAIN,EAJY7G,QAAA,CAAS8G,QAAT,CAAkBL,CAAlB,CAAA,CAAuBA,CAAvB,CAA2BA,CAAA,CAAE,CAAF,CAIvC,GAJgD,CAIhD,CAHMM,CAGN,EAHY/G,QAAA,CAAS8G,QAAT,CAAkBL,CAAlB,CAAA,CAAuBA,CAAvB,CAA2BA,CAAA,CAAE,CAAF,CAGvC,GAHgD,CAGhD,CAAAH,KAAA,CAAM9E,OAAN,CAAcwF,SAAA,CAAUT,IAAV,CAAgBM,KAAhB,CAAoBE,CAApB,CAFHZ,CAEG,EAFEA,CAAA,CAAE,CAAF,CAEF,EAFU,CAEV,CADHA,CACG,EADEA,CAAA,CAAE,CAAF,CACF,EADU,CACV,CAAd,CAV6C,CAa/Ca,QAASA,UAAS,CAACT,IAAD,CAAOM,EAAP,CAAWE,EAAX,CAAeE,EAAf,CAAmBC,EAAnB,CAAuB,CAKvCC,QAASA,iBAAgB,CAACtE,WAAD,CAAc,CACrCA,WAAA,CAAYrB,OAAZ,CAAoB4F,aAApB,CADqC,CAIvCA,QAASA,cAAa,CAACvE,WAAD,CAAc,CAC9BwE,IAAJ,EAAUxE,WAAA,CAAYyE,OAAZ,EAEVzE,YAAA,CAAYrB,OAAZ,CAAoB+F,cAApB,CAHkC,CAMpCA,QAASA,eAAc,CAAC1E,WAAD,CAAc,CACnCA,WAAA,CAAY,CAAZ,CAAA,EAAkBA,WAAA,CAAY,CAAZ,CAAlB,CAAmC2E,EAAnC,EAAyCX,EAAzC,CAA8CI,EAC9CpE,YAAA,CAAY,CAAZ,CAAA,EAAkBA,WAAA,CAAY,CAAZ,CAAlB,CAAmC4E,EAAnC,EAAyCV,EAAzC,CAA8CG,EAFX;AAdrC,IAAMM,GAAKjB,IAALiB,CAAUA,EAAVA,EAAgB,CAAtB,CACMC,GAAKlB,IAALkB,CAAUA,EAAVA,EAAgB,CADtB,CAEMJ,KAAiB,CAAjBA,CAAOR,EAAPQ,CAAYN,EAiBlB,OAAO,SAAS,CAACW,QAAD,CAAW,CACzBA,QAAA,CAAS7E,WAAT,CAAqBrB,OAArB,CAA6B2F,gBAA7B,CACA,OAAOO,SAFkB,CApBY,CA0BzCC,QAASA,OAAM,CAACC,EAAD,CAAKC,IAAL,CAAWvE,CAAX,CAAc,CACrBwE,EAAAA,CAAU,CAAN,EAAAF,EAAA,CAAUA,EAAV,CAAe1H,cAAA,CAAe6H,YAAf,CAA4BF,IAA5B,CAAkCvE,CAAlC,CACzB,OAAOsB,KAAA,CAAKoD,KAAL,EAAYpD,IAAA,CAAKqD,IAAL,CAAU,CAAV,CAAcH,EAAd,CAAkBA,EAAlB,CAAsB,CAAtB,CAAZ,CAAuC,CAAvC,EAA4C,CAA5C,CAFoB,CAK7BI,QAASA,OAAM,CAACzD,CAAD,CAAI,CACjB,MAAOzE,SAAA,CAAS4G,UAAT,CAAoBnC,CAApB,CAAA,CAAyBA,CAAzB,CAA6BzE,QAAA,CAASmI,QAAT,CAAkB,CAAC1D,CAAnB,CADnB,CAKnB2D,QAASA,UAAU,EAAG,CAUpBC,QAASA,QAAO,CAACR,IAAD,CAAOS,MAAP,CAAe,CAC7B,IAAMC,GAAKZ,MAAA,CAAOa,SAAA,CAAU,CAAV,CAAP,CAAqBX,IAArB,CAA2BlG,CAA3B,CAAL4G,EAAsCrD,CAA5C,CAEAuD,GAAKd,MAAA,CAAOa,SAAA,CAAU,CAAV,CAAP,CAAqBX,IAArB,CAA2BhG,CAA3B,CAAL4G,EAAsCvD,CAFtC,CAIAwD,GAAKH,EAAA,CAAKA,EAAL,CAAU,CAAV,CAAc,CAJnB,CAMAI,GAAKF,EAAA,CAAKA,EAAL,CAAU,CAAV,CAAc,CANnB,CAQArH,EAAI,CAAJA,CAAQsH,EAARtH,EAAcgC,EAAdhC,EAAoB8D,CAApB9D,CARA,CAUAwH,EAAI,CAAJA,CAAQD,EAARC,EAAc7E,EAAd6E;AAAoB1D,CAApB0D,CAVA,CAYAC,QAAU,IAAIC,YAAJ,CAAiB1H,CAAjB,CAAqBwH,CAArB,CAZV,CAaMG,QAAU,IAAID,YAAJ,CAAiB1H,CAAjB,CAAqBwH,CAArB,CAbhB,CAcInI,OAASoI,OACbhB,KAAA,CAAKrG,OAAL,CAAa,QAAA,CAAAwH,CAAA,CAAK,CAChB,IAAM/G,GAAKyG,EAALzG,EAAW,CAACN,CAAA,CAAEqH,CAAF,CAAZ/G,EAAoBiD,CAApBjD,CAAN,CACMC,GAAKyG,EAALzG,EAAW,CAACL,CAAA,CAAEmH,CAAF,CAAZ9G,EAAoBgD,CAApBhD,CAEI,EAAV,EAAID,EAAJ,EAAeA,EAAf,CAAoBb,CAApB,EAA+B,CAA/B,EAAyBc,EAAzB,EAAoCA,EAApC,CAAyC0G,CAAzC,GACEC,OAAA,CAAQ5G,EAAR,CAAaC,EAAb,CAAkBd,CAAlB,CADF,EAC0B,CAAC6H,MAAA,CAAOD,CAAP,CAD3B,CAJgB,CAAlB,CASS,EAAT,CAAIT,EAAJ,EAAmB,CAAnB,CAAcE,EAAd,EACES,KAAA,CAAM9H,CAAN,CAASwH,CAAT,CAAYC,OAAZ,CAAqBE,OAArB,CAA8BR,EAA9B,CAKA,CAJAY,KAAA,CAAM/H,CAAN,CAASwH,CAAT,CAAYG,OAAZ,CAAqBF,OAArB,CAA8BJ,EAA9B,CAIA,CAHAS,KAAA,CAAM9H,CAAN,CAASwH,CAAT,CAAYC,OAAZ,CAAqBE,OAArB,CAA8BR,EAA9B,CAGA,CAFAY,KAAA,CAAM/H,CAAN,CAASwH,CAAT,CAAYG,OAAZ,CAAqBF,OAArB,CAA8BJ,EAA9B,CAEA,CADAS,KAAA,CAAM9H,CAAN,CAASwH,CAAT,CAAYC,OAAZ,CAAqBE,OAArB,CAA8BR,EAA9B,CACA,CAAAY,KAAA,CAAM/H,CAAN,CAASwH,CAAT,CAAYG,OAAZ,CAAqBF,OAArB,CAA8BJ,EAA9B,CANF,EAOgB,CAAT,CAAIF,EAAJ,EACLW,KAAA,CAAM9H,CAAN,CAASwH,CAAT,CAAYC,OAAZ,CAAqBE,OAArB,CAA8BR,EAA9B,CAGA,CAFAW,KAAA,CAAM9H,CAAN,CAASwH,CAAT,CAAYG,OAAZ,CAAqBF,OAArB,CAA8BN,EAA9B,CAEA,CADAW,KAAA,CAAM9H,CAAN,CAASwH,CAAT,CAAYC,OAAZ,CAAqBE,OAArB,CAA8BR,EAA9B,CACA,CAAA9H,MAAA,CAASsI,OAJJ;AAKS,CALT,CAKIN,EALJ,GAMLU,KAAA,CAAM/H,CAAN,CAASwH,CAAT,CAAYC,OAAZ,CAAqBE,OAArB,CAA8BN,EAA9B,CAGA,CAFAU,KAAA,CAAM/H,CAAN,CAASwH,CAAT,CAAYG,OAAZ,CAAqBF,OAArB,CAA8BJ,EAA9B,CAEA,CADAU,KAAA,CAAM/H,CAAN,CAASwH,CAAT,CAAYC,OAAZ,CAAqBE,OAArB,CAA8BN,EAA9B,CACA,CAAAhI,MAAA,CAASsI,OATJ,CAcDtC,KAAAA,CAAI6B,MAAA,CAAS1D,IAAA,CAAKwE,GAAL,CAAS,CAAT,CAAY,EAAZ,CAAiBlE,CAAjB,CAAT,CAA+B,CAA/B,CAAmCjF,OAAA,CAAQoJ,GAAR,CAAY5I,MAAZ,CAEpCU,OAAAA,CAAI,CAAb,KAAgBmI,EAAhB,CAAqBlI,CAArB,CAAyBwH,CAAzB,CAA4BzH,MAA5B,CAAgCmI,EAAhC,CAAoC,EAAEnI,MAAtC,CAAyCV,MAAA,CAAOU,MAAP,CAAA,EAAasF,IAEtD,OAAO,CACLhG,OAAQA,MADH,CAELiG,MAAO,CAAPA,EAAYxB,CAFP,CAGLqE,MAAOnI,CAHF,CAILoI,OAAQZ,CAJH,CAKLpB,GAAIkB,EALC,CAMLjB,GAAIkB,EANC,CAOLc,GAAIf,EAAJe,EAAUrG,EAAVqG,EAAgBvE,CAAhBuE,CAPK,CAQLC,GAAIf,EAAJe,EAAU3F,EAAV2F,EAAgBxE,CAAhBwE,CARK,CAlDsB,CAVX,IAChB/H,EAAIA,QAAA,CAAAqH,CAAA,CAAK,CAAA,MAAAA,EAAA,CAAE,CAAF,CAAA,CADO,CAEhBnH,EAAIA,QAAA,CAAAmH,CAAA,CAAK,CAAA,MAAAA,EAAA,CAAE,CAAF,CAAA,CAFO,CAGhBC,OAASjJ,QAATiJ,CAAkBU,GAHF,CAIhBnB,UAAY,CAAC,EAAD,CAAK,EAAL,CAJI,CAKhBpF,GAAK,GALW,CAMhBW,GAAK,GANW,CAOhBmB,EAAI,CAiERmD,QAAA,CAAQ1G,CAAR,CAAYiI,QAAS,CAACnF,CAAD,CAAI,CACvB,MAAOC,UAAA,CAAUrD,MAAV,EAAoBM,CAAA,CAAIuG,MAAA,CAAOzD,CAAP,CAAJ,CAAe4D,OAAnC,EAA8C1G,CAD9B,CAIzB0G,QAAA,CAAQxG,CAAR;AAAYgI,QAAS,CAACpF,CAAD,CAAI,CACvB,MAAOC,UAAA,CAAUrD,MAAV,EAAoBQ,CAAA,CAAIqG,MAAA,CAAOzD,CAAP,CAAJ,CAAe4D,OAAnC,EAA8CxG,CAD9B,CAIzBwG,QAAA,CAAQY,MAAR,CAAiBa,QAAS,CAACrF,CAAD,CAAI,CAC5B,MAAOC,UAAA,CAAUrD,MAAV,EAAoB4H,MAAA,CAASf,MAAA,CAAOzD,CAAP,CAAT,CAAoB4D,OAAxC,EAAmDY,MAD9B,CAI9BZ,QAAA,CAAQ9D,IAAR,CAAewF,QAAS,CAACtF,CAAD,CAAI,CAC1B,GAAI,CAACC,SAAD,CAAWrD,MAAf,CAAuB,MAAO,CAAC+B,EAAD,CAAKW,EAAL,CADJ,KAGtBY,GAAK,CAACF,CAAA,CAAE,CAAF,CAHgB,CAItBK,GAAK,CAACL,CAAA,CAAE,CAAF,CAEE,EAAZ,EAAME,EAAN,EAAuB,CAAvB,EAAiBG,EAAjB,EAA2B9E,QAAA,CAAS+E,KAAT,CAAe,cAAf,CAC3B,OAAO3B,GAAA,CAAKuB,EAAL,CAASZ,EAAT,CAAce,EAAd,CAAkBuD,OAPC,CAU5BA,QAAA,CAAQ2B,QAAR,CAAmBC,QAAS,CAACxF,CAAD,CAAI,CAC9B,GAAI,CAACC,SAAD,CAAWrD,MAAf,CAAuB,MAAO,EAAP,EAAY6D,CACjB,EAAlB,GAAOT,CAAP,CAAW,CAACA,CAAZ,GAAsBzE,QAAA,CAAS+E,KAAT,CAAe,mBAAf,CACtBG,EAAA,CAAIN,IAAA,CAAKC,KAAL,CAAWD,IAAA,CAAKsF,GAAL,CAASzF,CAAT,CAAX,CAAyBG,IAAzB,CAA8BuF,GAA9B,CACJ,OAAO9B,QAJuB,CAOhCA,QAAA,CAAQG,SAAR,CAAoB4B,QAAS,CAAC3F,CAAD,CAAI,CAC/B,GAAI,CAACC,SAAD,CAAWrD,MAAf,CAAuB,MAAOmH,UAC9B/D;CAAA,CAAIzE,QAAA,CAASqK,KAAT,CAAe5F,CAAf,CACa,EAAjB,GAAIA,CAAJ,CAAMpD,MAAN,GAAoBoD,CAApB,CAAwB,CAAC,CAACA,CAAA,CAAE,CAAF,CAAF,CAAQ,CAACA,CAAA,CAAE,CAAF,CAAT,CAAxB,CACiB,EAAjB,GAAIA,CAAJ,CAAMpD,MAAN,EAAoBrB,QAAA,CAAS+E,KAAT,CAAe,mBAAf,CACpB,OAAOyD,UAAA,CAAY/D,CAAZ,CAAe4D,OALS,CAQjC,OAAOA,QA7Ga,CAgHtBa,QAASA,MAAK,CAAC9H,CAAD,CAAIwH,CAAJ,CAAO0B,MAAP,CAAeC,MAAf,CAAuB5H,CAAvB,CAA0B,CAGtC,IAFA,IAAM6H,GAAK7H,CAAL6H,EAAU,CAAVA,EAAe,CAArB,CAESzI,EAAI,CAAb,CAAgBA,CAAhB,CAAoB6G,CAApB,CAAuB,EAAE7G,CAAzB,CACE,IAD0B,IACjBZ,EAAI,CADa,CACVsJ,GAAK,CAArB,CAAwBtJ,CAAxB,CAA4BC,CAA5B,CAAgCuB,CAAhC,CAAmC,EAAExB,CAArC,CACMA,CAIJ,CAJQC,CAIR,GAHEqJ,EAGF,EAHQH,MAAA,CAAOnJ,CAAP,CAAWY,CAAX,CAAeX,CAAf,CAGR,EAAID,CAAJ,EAASwB,CAAT,GACMxB,CAIJ,EAJSqJ,CAIT,GAHEC,EAGF,EAHQH,MAAA,CAAOnJ,CAAP,CAAWqJ,CAAX,CAAezI,CAAf,CAAmBX,CAAnB,CAGR,EAAAmJ,MAAA,CAAOpJ,CAAP,CAAWwB,CAAX,CAAeZ,CAAf,CAAmBX,CAAnB,CAAA,CAAwBqJ,EAAxB,CAA6B7F,IAAA,CAAKW,GAAL,CAASpE,CAAT,CAAa,CAAb,CAAgBC,CAAhB,CAAoB,CAApB,CAAwBoJ,CAAxB,CAA4BrJ,CAA5B,CAA+BqJ,CAA/B,CAL/B,CATkC,CAoBxCrB,QAASA,MAAK,CAAC/H,CAAD,CAAIwH,CAAJ,CAAO0B,MAAP,CAAeC,MAAf,CAAuB5H,CAAvB,CAA0B,CAGtC,IAFA,IAAM6H,GAAK7H,CAAL6H,EAAU,CAAVA,EAAe,CAArB,CAESrJ,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,CAApB,CAAuB,EAAED,CAAzB,CACE,IAD0B,IACjBY,EAAI,CADa,CACV0I,GAAK,CAArB,CAAwB1I,CAAxB,CAA4B6G,CAA5B,CAAgCjG,CAAhC,CAAmC,EAAEZ,CAArC,CACMA,CAIJ,CAJQ6G,CAIR,GAHE6B,EAGF,EAHQH,MAAA,CAAOnJ,CAAP,CAAWY,CAAX,CAAeX,CAAf,CAGR,EAAIW,CAAJ,EAASY,CAAT,GACMZ,CAIJ,EAJSyI,CAIT,GAHEC,EAGF,EAHQH,MAAA,CAAOnJ,CAAP,EAAYY,CAAZ,CAAgByI,CAAhB,EAAqBpJ,CAArB,CAGR,EAAAmJ,MAAA,CAAOpJ,CAAP;CAAYY,CAAZ,CAAgBY,CAAhB,EAAqBvB,CAArB,CAAA,CAA0BqJ,EAA1B,CAA+B7F,IAAA,CAAKW,GAAL,CAASxD,CAAT,CAAa,CAAb,CAAgB6G,CAAhB,CAAoB,CAApB,CAAwB4B,CAAxB,CAA4BzI,CAA5B,CAA+ByI,CAA/B,CALjC,CATkC,CAgDxCE,QAASA,MAAK,CAAC5E,MAAD,CAAS,CACrB/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CADqB,CAgDvBA,QAASA,gBAAM,CAAC6E,GAAD,CAAMlG,CAAN,CAAS,CACtBmG,MAAA,CAAOpJ,OAAP,CAAe,QAAA,CAAAqJ,KAAA,CAAS,CAAA,MAAY,KAAZ,EAAApG,CAAA,CAAEoG,KAAF,CAAA,CAAmBF,GAAA,CAAIE,KAAJ,CAAA,CAAWpG,CAAA,CAAEoG,KAAF,CAAX,CAAnB,CAA0C,CAA1C,CAAxB,CACA,OAAOF,IAFe,CA+BxBG,QAASA,UAAS,CAACjD,IAAD,CAAOkD,OAAP,CAAgB,CAAA,IAC5BC,OAAS,EADmB,CAE5BC,IAAMA,QAAA,CAAA3H,CAAA,CAAK,CAAA,MAAAA,EAAA,CAAE6C,CAAF,CAAA,CAFiB,CAK5B/E,CAMJ,IAAe,IAAf,EAAI2J,OAAJ,CACEC,MAAA,CAAOzJ,IAAP,CAAYsG,IAAZ,CADF,KAEO,CACA,IAAAlH,IAAM,EAAN,KAAUQ,EAAI,CAAnB,KAAsBC,CAAtB,CAA0ByG,IAA1B,CAA+BxG,MAA/B,CAAuCF,CAAvC,CAA2CC,CAA3C,CAA8C,EAAED,CAAhD,CAAmD,CACjD,IAAAgF,EAAI0B,IAAA,CAAK1G,CAAL,CACJ,KAAA+D,EAAI6F,OAAA,CAAQpK,GAAR,CAAYsK,GAAZ,CACJ,KAAA1H,EAAI5C,GAAA,CAAIuE,CAAJ,CAEC3B,EAAL,GACE5C,GAAA,CAAIuE,CAAJ,CAEA,CAFS3B,CAET,CAFa,EAEb,CADAA,CACA,CADE2H,IACF,CADShG,CACT,CAAA8F,MAAA,CAAOzJ,IAAP,CAAYgC,CAAZ,CAHF,CAMAA,EAAA,CAAEhC,IAAF,CAAO4E,CAAP,CAXiD,CAD9C,CAgBP,MAAO6E,OA7ByB;AA4DlCG,QAASA,QAAO,CAACrF,MAAD,CAAS,CACvB/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CADuB,CAmGzBsF,QAASA,QAAO,CAACtF,MAAD,CAAS,CACvB/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CADuB,CA4EzBuF,QAASA,QAAO,CAACvF,MAAD,CAAS,CACvB/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CADuB,CAgDzBwF,QAASA,SAAQ,CAACC,IAAD,CAAOC,WAAP,CAAoB,CACnC,IAAMC,KAAOF,IAAA,CAAKC,WAAL,EACbD,KAAA,CAAKG,OAAL,CAAa,IAAb,CAEmB,KAAnB,EAAIF,WAAJ,EACED,IAAA,CAAKC,WAAL,CAAiBA,WAAjB,CAGF,OAAOC,KAR4B,CAuBrCE,QAASA,SAAQ,CAAC7F,MAAD,CAAS,CACxB/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CADwB,CAyE1B8F,QAASA,SAAQ,CAAC9F,MAAD,CAAS,CACxB/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CADwB;AA8C1B+F,QAASA,eAAc,CAACN,IAAD,CAAOO,KAAP,CAAcN,WAAd,CAA2B,CAChD,IAAMO,MAAuB,IAAf,EAAAP,WAAA,CAAsB,QAAA,CAAA/G,CAAA,CAAK,CAAA,MAAA8G,KAAA,CAAKO,KAAA,CAAMrH,CAAN,CAAL,CAAA,CAA3B,CAA4C,QAAA,CAAAA,CAAA,CAAK,CAAA,IACzDgH,KAAOF,IAAA,CAAKC,WAAL,EACP5K,EAAAA,CAAQ2K,IAAA,CAAKC,WAAL,CAAiBA,WAAjB,CAAA,CAA8BM,KAAA,CAAMrH,CAAN,CAA9B,CACZ8G,KAAA,CAAKC,WAAL,CAAiBC,IAAjB,CACA,OAAO7K,EAJsD,CAO/DmL,MAAA,CAAML,OAAN,CAAgBM,QAAA,CAAAvH,CAAA,CAAK,CACnB8G,IAAA,CAAKG,OAAL,CAAajH,CAAb,CACA,OAAOsH,MAFY,CAKrB,OAAOA,MAbyC,CAqBlDE,QAASA,UAAS,CAACnG,MAAD,CAAS,CACzB/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,EAAlC,CAAsCF,MAAtC,CACA,KAAA,CAAKoG,SAAL,CAAiB9L,KAAA,CAAM+L,YAAN,EAFQ,CA+G3BC,QAASA,QAAO,CAACtG,MAAD,CAAS,CACvB/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CADuB,CA+DzBuG,QAASA,OAAM,CAACC,KAAD,CAAQ7H,CAAR,CAAW,CAGxB,GAAIzE,QAAA,CAAS4G,UAAT,CAAoB0F,KAApB,CAAJ,CAAgC,CAC9B,IAAAhJ;AAAIA,QAAA,CAAAqH,GAAA,CAAO,CAAA,MAAAtK,QAAA,CAAQkM,GAAR,CAAYD,KAAA,CAAM3B,GAAN,CAAWlG,CAAX,CAAZ,CAAA,CAEXnB,EAAA,CAAEkJ,GAAF,CAAQC,UAAA,CAAWH,KAAX,CAHsB,CAAhC,IAMEhJ,EAAA,CAAItD,QAAA,CAASmI,QAAT,CAAkB9H,OAAA,CAAQkM,GAAR,CAAYD,KAAZ,EAAqB,MAArB,CAAlB,CAGN,OAAOhJ,EAZiB,CAgB1BoJ,QAASA,SAAQ,CAACC,OAAD,CAAUlI,CAAV,CAAa,CAG5B,GAAIzE,QAAA,CAAS4G,UAAT,CAAoB+F,OAApB,CAAJ,CAAkC,CAChC,IAAArJ,EAAIA,QAAA,CAAAqH,GAAA,CAAO,CAAA,MAAAgC,QAAA,CAAQhC,GAAR,CAAalG,CAAb,CAAA,CAEXnB,EAAA,CAAEkJ,GAAF,CAAQC,UAAA,CAAWE,OAAX,CAHwB,CAAlC,IAIWA,QAAJ,CACLrJ,CADK,CACDtD,QAAA,CAASmI,QAAT,CAAkBwE,OAAlB,CADC,EAILrJ,CAEA,CAFIA,QAAA,CAAAqH,GAAA,CAAO,CAAA,MAAAA,IAAA,CAAIiC,MAAJ,CAAajC,GAAb,CAAiBkC,IAAjB,EAAyB,CAAzB,CAEX,CAAAvJ,CAAA,CAAEkJ,GAAF,CAAQ,CAAA,CANH,CASP,OAAOlJ,EAhBqB,CAoB9BmJ,QAASA,WAAU,CAACnJ,CAAD,CAAI,CACrB,GAAI,CAACtD,QAAA,CAAS4G,UAAT,CAAoBtD,CAApB,CAAL,CAA6B,MAAO,CAAA,CAC9BwJ,EAAAA,CAAM9M,QAAA,CAAS+M,KAAT,CAAe/M,QAAA,CAASgN,cAAT,CAAwB1J,CAAxB,CAAf,CACZ,OAAOwJ,EAAP,CAAWG,EAAX,EAAiBH,CAAjB,CAAqBI,EAArB,EAA2BJ,CAA3B,CAA+BF,MAA/B;AAAyCE,CAAzC,CAA6CD,IAHxB,CAOvBM,QAASA,SAAQ,CAAC5G,IAAD,CAAOoE,GAAP,CAAY2B,KAAZ,CAAmBK,OAAnB,CAA4B,CAC3C,IAAMvL,EAAImF,IAAJnF,CAASmI,KAAf,CACMX,EAAIrC,IAAJqC,CAASY,MADf,CAEMhC,GAAKjB,IAALiB,CAAUA,EAAVA,EAAgB,CAFtB,CAGMC,GAAKlB,IAALkB,CAAUA,EAAVA,EAAgB,CAHtB,CAIMgC,GAAKlD,IAALkD,CAAUA,EAAVA,EAAgBrI,CAChBsI,EAAAA,CAAKnD,IAALmD,CAAUA,EAAVA,EAAgBd,CALtB,KAMMwE,IAAM7G,IAAN6G,CAAW3M,MACXG,KAAAA,CAAQwM,GAAA,CAAM,QAAA,CAAAjM,CAAA,CAAK,CAAA,MAAAiM,IAAA,CAAIjM,CAAJ,CAAA,CAAX,CAAoBnB,QAApB,CAA6BoF,IAM3C,KAbA,IAQMiI,IAAM/M,UAAA,CAAWgN,MAAX,CAAkB7D,EAAlB,CAAuBjC,EAAvB,CAA2BkC,CAA3B,CAAgCjC,EAAhC,CARZ,CASM8F,IAAMF,GAAA,CAAIG,UAAJ,CAAe,IAAf,CATZ,CAUMC,IAAMF,GAAA,CAAIG,YAAJ,CAAiB,CAAjB,CAAoB,CAApB,CAAuBjE,EAAvB,CAA4BjC,EAA5B,CAAgCkC,CAAhC,CAAqCjC,EAArC,CAVZ,CAWMkG,IAAMF,GAANE,CAAU9F,IAXhB,CAaS9F,EAAI0F,EAbb,CAaiBvC,EAAI,CAArB,CAAwBnD,CAAxB,CAA4B2H,CAA5B,CAAgC,EAAE3H,CAAlC,CAAqC,CACnC4I,GAAA,CAAIuC,EAAJ,CAASnL,CAAT,CAAa0F,EAEb,KAHmC,IAG1BtG,WAAIqG,EAHsB,CAGlB7E,EAAIZ,CAAJY,CAAQvB,CAAzB,CAA4BD,UAA5B,CAAgCsI,EAAhC,CAAoC,EAAEtI,UAAF,CAAK+D,CAAL,EAAU,CAA9C,CAAiD,CAC/CyF,GAAA,CAAIsC,EAAJ,CAAS9L,UAAT,CAAaqG,EACbmD,IAAA,CAAIiC,MAAJ,CAAahM,IAAA,CAAMO,UAAN,CAAUwB,CAAV,CACb,KAAMmF,EAAIwE,KAAA,CAAM3B,GAAN,CACVgD,IAAA,CAAIzI,CAAJ,CAAQ,CAAR,CAAA,CAAa4C,CAAb,CAAenF,CACfgL,IAAA,CAAIzI,CAAJ,CAAQ,CAAR,CAAA;AAAa4C,CAAb,CAAevE,CACfoK,IAAA,CAAIzI,CAAJ,CAAQ,CAAR,CAAA,CAAa4C,CAAb,CAAexF,CACfqL,IAAA,CAAIzI,CAAJ,CAAQ,CAAR,CAAA,CAAa,CAAC,EAAE,GAAF,CAAQyH,OAAA,CAAQhC,GAAR,CAAR,CAPiC,CAHd,CAcrC4C,GAAA,CAAIK,YAAJ,CAAiBH,GAAjB,CAAsB,CAAtB,CAAyB,CAAzB,CACA,OAAOJ,IA7BoC,CAsC7CQ,QAASA,WAAU,CAAC/H,MAAD,CAAS,CAC1B/F,YAAA,CAAagG,SAAb,CAAuBC,IAAvB,CAA4B,IAA5B,CAAkC,IAAlC,CAAwCF,MAAxC,CACA,KAAA,CAAKgI,QAAL,CAAc,CAAA,CAAd,CAF0B,CA0B5BC,QAASA,IAAG,CAACC,IAAD,CAAOvJ,CAAP,CAAU,CACpB,IAAMoD,KAAOoG,cAAA,CAAexJ,CAAf,CAAiBsJ,GAAjB,CACbtJ,EAAA,CAAEa,MAAF,CAAW0I,IAAA,CAAKE,SAAL,CAAezJ,CAAf,CAAiBa,MAAjB,CAAyBuC,IAAzB,CAAX,CAA4CpD,CAAA,CAAEF,IAAF,CAASyJ,IAAA,CAAKG,OAAL,CAAa1J,CAAb,CAAeF,IAAf,CAAqBsD,IAArB,CAAT,CAAsC,CAF9D,CAKtBuG,QAASA,OAAM,CAACxL,IAAD,CAAO,CACpB,IAAMyL,YAAclO,cAAA,CAAemO,UAAf,CAA0B,CAAC1L,IAAD,EAAS,UAAT,EAAqB2L,WAArB,EAA1B,CACfF,YAAL,EAAkBrO,QAAA,CAAS+E,KAAT,CAAe,gCAAf,CAAkDnC,IAAlD,CAClB,OAAOyL,YAAA,EAHa,CAUtBJ,QAASA,eAAc,CAACpG,IAAD,CAAO,CAC5BA,IAAA;AAAO7H,QAAA,CAASqK,KAAT,CAAexC,IAAf,CACP,OAAuB,EAAhB,GAAAA,IAAA,CAAKxG,MAAL,CAAoBwG,IAAA,CAAK,CAAL,CAApB,CAA8B,CACnCjF,KA1lBsB4L,mBAylBa,CAEnCC,SAAU5G,IAAA,CAAK6G,MAAL,CAAY,QAAA,CAACnM,CAAD,CAAIe,CAAJ,CAAU,CAAA,MAAAf,EAAA,CAAEmB,MAAF,CAASiL,SAAA,CAAUrL,CAAV,CAAT,CAAA,CAAtB,CAA8C,EAA9C,CAFyB,CAFT,CAQ9BqL,QAASA,UAAS,CAACrL,CAAD,CAAI,CACpB,MAhmBwBkL,mBAgmBjB,GAAAlL,CAAA,CAAEV,IAAF,CAA+BU,CAA/B,CAAiCmL,QAAjC,CAA4CzO,QAAA,CAASqK,KAAT,CAAe/G,CAAf,CAAA,CAAkBsL,MAAlB,CAAyB,QAAA,CAAA5F,CAAA,CAAK,CAAA,MAAK,KAAL,EAAAA,CAAA,CAA9B,CAAA,CAAyCrI,GAAzC,CAA6C,QAAA,CAAAqI,CAAA,CAAK,CAAA,MAjmBvF6F,SAimBuF,GAAA7F,CAAA,CAAEpG,IAAF,CAAqBoG,CAArB,CAAyB,CAC5HpG,KAlmBYiM,SAimBgH,CAE5HnH,SAAUsB,CAFkH,CAAzB,CAAlD,CAD/B,CAl5CtB,IAAMnF,MAAQ,CAAC,EAAD,CAAK,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAAL,CAAiC,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAAjC,CAA6D,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAA7D,CAAyF,CAAC,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CAAzF,CAAqH,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAA2B,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAA3B,CAArH,CAA2K,CAAC,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAA3K,CAAuM,CAAC,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,EAAD;AAAM,CAAN,CAAb,CAAD,CAAvM,CAAmO,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAAnO,CAA+P,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAA/P,CAA2R,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAA2B,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAA3B,CAA3R,CAAiV,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAAjV,CAA6W,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CAA7W,CAAyY,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CAAzY,CAAqa,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAAra,CAAic,EAAjc,CA0RdgC,WAAA,CAAWiJ,UAAX,CAAwB,CACtB,KAAQ,YADc,CAEtB,SAAY,CACV,UAAa,CAAA,CADH,CAFU,CAKtB,OAAU,CAAC,CACT,KAAQ,OADC,CAET,KAAQ,OAFC,CAAD,CAGP,CACD,KAAQ,YADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAHO,CAOP,CACD,KAAQ,QADP,CAED,KAAQ,QAFP,CAPO,CAUP,CACD,KAAQ,MADP,CAED,KAAQ,SAFP,CAGD,UAAW,CAAA,CAHV,CAVO,CAcP,CACD,KAAQ,SADP,CAED,KAAQ,MAFP,CAGD,OAAU,CAAC,QAAD,CAAW,aAAX,CAHT,CAID,UAAW,aAJV,CAdO,CAmBP,CACD,KAAQ,MADP,CAED,KAAQ,SAFP,CAGD,UAAW,CAAA,CAHV,CAnBO;AAuBP,CACD,KAAQ,QADP,CAED,KAAQ,SAFP,CAGD,UAAW,CAAA,CAHV,CAvBO,CA2BP,CACD,KAAQ,OADP,CAED,KAAQ,QAFP,CAGD,KAAQ,CAAA,CAHP,CA3BO,CA+BP,CACD,KAAQ,WADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAID,KAAQ,CAAA,CAJP,CA/BO,CAoCP,CACD,KAAQ,IADP,CAED,KAAQ,QAFP,CAGD,OAAQ,CAAA,CAHP,CAID,UAAW,SAJV,CApCO,CALY,CAgDxB9O,SAAA,CAAS+O,QAAT,CAAkBlJ,UAAlB,CAA8B9F,YAA9B,CAA2CgG,SAA3C,CAAsD,CACpD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CAClB,GAAI,IAAJ,CAASpO,KAAT,EAAkB,CAACoO,KAAA,CAAMC,OAAN,EAAnB,EAAsC,CAACxK,CAAA,CAAEqJ,QAAF,EAAvC,CACE,MAAOkB,MAAP,CAAaE,eAFG,KAKdC,IAAMH,KAAA,CAAMI,IAAN,CAAWJ,KAAX,CAAiBK,SAAjB,CAA6BL,KAA7B,CAAmCM,SAAnC,CACNhF,MAAAA,CAAS0E,KAAA,CAAMO,WAAN,CAAkBP,KAAlB,CAAwBQ,MAAxB,CAATlF,CAAyCA,MAN3B,KAOdwB,MAAQrH,CAARqH,CAAUA,KAAVA,EAAmB9L,QAAnB8L,CAA4B2D,QAPd,CAQd5O,QAAUL,QAAA,EAAA,CAAWU,MAAX,CAA+B,CAAA,CAA/B;AAAkBuD,CAAlB,CAAoBvD,MAApB,CARI,CASdR,GAAK+D,CAAL/D,CAAOgP,UAAPhP,EAAqBuF,MAAA,CAAOqE,KAAP,CAAewB,KAAf,CAAsBrH,CAAtB,CATP,CAUdkL,GAAc,IAAT,GAAAlL,CAAA,CAAEkL,EAAF,CAAgB,IAAhB,CAAuBlL,CAAvB,CAAyBkL,EAAzB,EAA+B,SAVtB,CAWdlP,OAAS,EACb6J,MAAA,CAAO9I,OAAP,CAAe,QAAA,CAAA2E,CAAA,CAAK,CAClB,IAAMI,KAAOuF,KAAA,CAAM3F,CAAN,CAAb,CAEMG,MAAQzF,OAAA,CAAQ0D,IAAR,CAAa,CAACgC,IAAD,CAAMgD,KAAN,CAAahD,IAAb,CAAkBiD,MAAlB,CAAb,CAAA,CAAwCjD,IAAxC,CAA6C9F,MAA7C,CAAqDT,QAAA,CAAS4P,OAAT,CAAiBlP,EAAjB,CAAA,CAAuBA,EAAvB,CAA4BA,EAAA,CAAG6F,IAAH,CAAQ9F,MAAR,CAAjF,CAEd4F,eAAA,CAAeC,KAAf,CAAsBC,IAAtB,CAA4BJ,CAA5B,CAA+B1B,CAA/B,CAEA6B,MAAA,CAAM9E,OAAN,CAAc,QAAA,CAAAiB,CAAA,CAAK,CACjB,IAAA,oBAAsE,EAAtEhC,OAAA,CAAOc,IAAP,CAAYxB,YAAA,CAAa8P,QAAb,CAAsB1J,CAAtB,CAAyBpG,YAAA,CAAa+P,MAAb,CAA0B,IAAN,EAAAH,EAAA,EAAa,mBAAA,CACnEA,EADmE,CAAA,CAC9DlN,CAD8D,CAAA,mBAAb,EAErDA,CAFiC,CAAzB,CAAZ,CADiB,CAAnB,CAPkB,CAApB,CAaI,KAAJ,CAAS7B,KAAT,GAAgBuO,GAAhB,CAAoBY,GAApB,CAA0B,IAA1B,CAA+BnP,KAA/B,CACA,KAAA,CAAKA,KAAL,CAAauO,GAAb,CAAiB7E,MAAjB,CAA0B6E,GAA1B,CAA8Ba,GAA9B;AAAoCvP,MACpC,OAAO0O,IA3BW,CADgC,CAAtD,CA8QAzE,MAAA,CAAMoE,UAAN,CAAmB,CACjB,KAAQ,OADS,CAEjB,SAAY,CACV,UAAa,CAAA,CADH,CAFK,CAKjB,OAAU,CAAC,CACT,KAAQ,MADC,CAET,KAAQ,QAFC,CAGT,MAAS,CAAA,CAHA,CAIT,OAAU,CAJD,CAKT,SAAY,CAAA,CALH,CAAD,CAMP,CACD,KAAQ,GADP,CAED,KAAQ,OAFP,CAGD,SAAY,CAAA,CAHX,CANO,CAUP,CACD,KAAQ,GADP,CAED,KAAQ,OAFP,CAGD,SAAY,CAAA,CAHX,CAVO,CAcP,CACD,KAAQ,QADP,CAED,KAAQ,OAFP,CAdO,CAiBP,CACD,KAAQ,SADP,CAED,KAAQ,OAFP,CAGD,MAAS,CAAA,CAHR,CAjBO,CAqBP,CACD,KAAQ,UADP,CAED,KAAQ,QAFP,CArBO,CAwBP,CACD,KAAQ,WADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAJT,CAxBO,CA6BP,CACD,KAAQ,QADP,CAED,KAAQ,SAFP,CAGD,UAAW,CAAA,CAHV,CA7BO,CAiCP,CACD,KAAQ,IADP,CAED,KAAQ,QAFP,CAGD,UAAW,MAHV,CAjCO,CALO,CA4CnB,KAAMlE,OAAS,oCAAA,CAAA,KAAA,CAAA,GAAA,CAKf5K;QAAA,CAAS+O,QAAT,CAAkBrE,KAAlB,CAAyB3K,YAAzB,CAAsCgG,SAAtC,CAAiD,CAC/C,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CAUlBlC,QAASA,IAAG,CAAC3G,CAAD,CAAI8J,IAAJ,CAAU,CACpB,IAAK,IAAI9O,EAAI,CAAb,CAAgBA,CAAhB,CAAoB+O,KAApB,CAA0B7O,MAA1B,CAAkC,EAAEF,CAApC,CAAuCgF,CAAA,CAAE+J,KAAA,CAAM/O,CAAN,CAAF,CAAA,CAAc8O,IAAA,CAAK9O,CAAL,CAErD,OAAOgF,EAHa,CATtB,GAAI,IAAJ,CAASvF,KAAT,EAAkB,CAACoO,KAAA,CAAMC,OAAN,EAAnB,EAAsC,CAACxK,CAAA,CAAEqJ,QAAF,EAAvC,CAAqD,MAAOkB,MAAP,CAAaE,eADhD,KAEdC,IAAMH,KAAA,CAAMI,IAAN,CAAWJ,KAAX,CAAiBK,SAAjB,CAA6BL,KAA7B,CAAmCM,SAAnC,CACNhF,MAAAA,CAAS0E,KAAA,CAAMO,WAAN,CAAkBP,KAAlB,CAAwBQ,MAAxB,CAATlF,CAAyCA,MACzCU,MAAAA,CAASF,SAAA,CAAUR,KAAV,CAAkB7F,CAAlB,CAAoBsG,OAApB,CAJK,KAKdmF,MAAQ,CAACzL,CAAD,CAAGsG,OAAH,EAAc,EAAd,EAAkBpK,GAAlB,CAAsBX,QAAtB,CAA+BmQ,YAA/B,CALM,CAMdC,IAAMtK,eAAA,CAAOsC,SAAA,EAAP,CAAoB3D,CAApB,CANQ,CAOdkL,GAAKlL,CAALkL,CAAOA,EAAPA,EAAa,MAPC,CAQdlP,OAAS,EASbA,OAAA,CAASuK,KAAA,CAAOrK,GAAP,CAAW,QAAA,CAAA4C,CAAA,CAAK,CAAA,IAAA;AAAwB,EAAxB,OAAAxD,aAAA,CAAa+P,MAAb,CAAoBhD,GAAA,EAAI,mBAAA,CAC9C6C,EAD8C,CAAA,CACzCS,GAAA,CAAI7M,CAAJ,CAAOkB,CAAP,CAAS6D,MAAT,CADyC,CAAA,mBAAJ,EAE1C/E,CAF0C,CAExC2H,IAFwC,CAApB,CAAA,CAAhB,CAGL,KAAJ,CAAStK,KAAT,GAAgBuO,GAAhB,CAAoBY,GAApB,CAA0B,IAA1B,CAA+BnP,KAA/B,CACA,KAAA,CAAKA,KAAL,CAAauO,GAAb,CAAiB7E,MAAjB,CAA0B6E,GAA1B,CAA8Ba,GAA9B,CAAoCvP,MACpC,OAAO0O,IAtBW,CAD2B,CAAjD,CA0FAhE,QAAA,CAAQ2D,UAAR,CAAqB,CACnB,KAAQ,SADW,CAEnB,SAAY,CACV,UAAa,CAAA,CADH,CAFO,CAKnB,OAAU,CAAC,CACT,KAAQ,MADC,CAET,KAAQ,QAFC,CAGT,MAAS,CAAA,CAHA,CAIT,OAAU,CAJD,CAKT,SAAY,CAAA,CALH,CAAD,CAMP,CACD,KAAQ,QADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CANO,CAUP,CACD,KAAQ,GADP,CAED,KAAQ,OAFP,CAVO,CAaP,CACD,KAAQ,GADP,CAED,KAAQ,OAFP,CAbO,CAgBP,CACD,KAAQ,QADP,CAED,KAAQ,OAFP,CAhBO,CAmBP,CACD,KAAQ,UADP,CAED,KAAQ,QAFP,CAnBO,CAsBP,CACD,KAAQ,WADP,CAED,KAAQ,QAFP,CAtBO,CAyBP,CACD,KAAQ,OADP;AAED,KAAQ,QAFP,CAzBO,CA4BP,CACD,KAAQ,MADP,CAED,KAAQ,SAFP,CAGD,UAAW,CAAA,CAHV,CA5BO,CAgCP,CACD,KAAQ,YADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAhCO,CAoCP,CACD,KAAQ,QADP,CAED,KAAQ,SAFP,CAGD,UAAW,CAAA,CAHV,CApCO,CALS,CA+CrB9O,SAAA,CAAS+O,QAAT,CAAkB5D,OAAlB,CAA2BpL,YAA3B,CAAwCgG,SAAxC,CAAmD,CACjD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CAClB,GAAI,IAAJ,CAASpO,KAAT,EAAkB,CAACoO,KAAA,CAAMC,OAAN,EAAnB,EAAsC,CAACxK,CAAA,CAAEqJ,QAAF,EAAvC,CACE,MAAOkB,MAAP,CAAaE,eAFG,KAKdC,IAAMH,KAAA,CAAMI,IAAN,CAAWJ,KAAX,CAAiBK,SAAjB,CAA6BL,KAA7B,CAAmCM,SAAnC,CALQ,CAMdzO,QAAUL,QAAA,EAAA,CAAWU,MAAX,CAA+B,CAAA,CAA/B,GAAkBuD,CAAlB,CAAoBvD,MAApB,CANI,CAOdT,OAASgE,CAAThE,CAAWA,MAPG,CAQd4P,OAAS5L,CAAT4L,CAAWX,UAAXW,EAAyBpL,QAAA,CAASR,CAAT,CAAW6L,KAAX,EAAoB,EAApB,CAAwB7L,CAAxB,CAA0BU,IAA1B,CAAgC,CAAC,CAAC1E,MAAlC,CARX,CASd8D,KAAOE,CAAPF,CAASA,IAIb,IAAI,CAAC9D,MAAL,CAAa,CACXA,MAAA,CAASuO,KAAA,CAAMO,WAAN,CAAkBP,KAAlB,CAAwBQ,MAAxB,CAAT,CAAyClF,MACzC/D;CAAA,CAAOT,eAAA,CAAOsC,SAAA,EAAP,CAAoB3D,CAApB,CAAA,CAAuBhE,MAAvB,CAA+B,CAAA,CAA/B,CACP,KAAA8P,KAAOvJ,SAAA,CAAUT,CAAV,CAAgBA,CAAhB,CAAqBG,KAArB,EAA8B,CAA9B,CAAiCH,CAAjC,CAAsCG,KAAtC,EAA+C,CAA/C,CAAkD,CAAlD,CAAqD,CAArD,CACPnC,KAAA,CAAO,CAACgC,CAAD,CAAMgD,KAAN,CAAahD,CAAb,CAAkBiD,MAAlB,CACP/I,OAAA,CAAS8F,CAAT,CAAc9F,MALH,CAQb4P,MAAA,CAASrQ,QAAA,CAAS4P,OAAT,CAAiBS,MAAjB,CAAA,CAA2BA,MAA3B,CAAoCA,MAAA,CAAO5P,MAAP,CAC7CA,OAAA,CAASI,OAAA,CAAQ0D,IAAR,CAAaA,IAAb,CAAA,CAAmB9D,MAAnB,CAA2B4P,MAA3B,CACLE,KAAJ,EAAU9P,MAAA,CAAOe,OAAP,CAAe+O,IAAf,CACN,KAAJ,CAAS3P,KAAT,GAAgBuO,GAAhB,CAAoBY,GAApB,CAA0B,IAA1B,CAA+BnP,KAA/B,CACA,KAAA,CAAKA,KAAL,CAAauO,GAAb,CAAiB7E,MAAjB,CAA0B6E,GAA1B,CAA8Ba,GAA9B,CAAoC,CAACvP,MAAD,EAAW,EAAX,EAAeE,GAAf,CAAmBZ,YAAnB,CAAgC+P,MAAhC,CACpC,OAAOX,IA1BW,CAD6B,CAAnD,CAoDA/D,QAAA,CAAQ0D,UAAR,CAAqB,CACnB,KAAQ,SADW,CAEnB,SAAY,EAFO,CAGnB,OAAU,CAAC,CACT,KAAQ,QADC,CAET,KAAQ,OAFC,CAGT,MAAS,CAAA,CAHA,CAIT,OAAU,CAJD,CAAD,CAKP,CACD,KAAQ,SADP,CAED,KAAQ,OAFP,CALO,CAHS,CAarB9O;QAAA,CAAS+O,QAAT,CAAkB3D,OAAlB,CAA2BrL,YAA3B,CAAwCgG,SAAxC,CAAmD,CACjD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CAAA,IACdP,SAAW,IAAXA,CAAgB+B,SADF,CAEdC,OAAS,IAATA,CAAcC,OAFA,CAGdC,OAASlM,CAATkM,CAAWA,MAHG,CAIdC,IAAMD,MAANC,EAAgBD,MAAA,CAAO,CAAP,CAJF,CAKdE,IAAMF,MAANE,EAAgBF,MAAA,CAAO,CAAP,CALF,CAMdG,QAAUrM,CAAVqM,CAAYA,OAAZA,EAAuB,CAACH,MAAxBG,EAAkC9Q,QAAlC8Q,CAA2CrB,QAC3CsB,OAAAA,CAAO/B,KAAP+B,CAAaC,GAEjBC,EAAA,CAAMxM,CAAA,CAAEqJ,QAAF,EAAN,EAAsBkB,KAAA,CAAMC,OAAN,CAAcD,KAAd,CAAoBkC,GAApB,CAAtB,EAAkDlC,KAAA,CAAMlB,QAAN,CAAe9N,QAAA,CAASgN,cAAT,CAAwB8D,OAAxB,CAAf,CAAlD,EAAsGF,GAAtG,EAA6G5B,KAAA,CAAMlB,QAAN,CAAe9N,QAAA,CAASgN,cAAT,CAAwB4D,GAAxB,CAAf,CAA7G,EAA6JC,GAA7J,EAAoK7B,KAAA,CAAMlB,QAAN,CAAe9N,QAAA,CAASgN,cAAT,CAAwB6D,GAAxB,CAAf,CAEpK,IAAI,CAAC,IAAD,CAAMjQ,KAAV,EAAmBqQ,CAAnB,CACEF,MAEA,CAFO/B,KAEP,CAFaQ,MAEb,CADA,IACA,CADKgB,SACL,CADiB/B,QACjB;AAD4B,EAC5B,CAAA,IAAA,CAAKiC,OAAL,CAAeD,MAAf,CAAwB,EAGtBK,QAAJ,EACE9B,KAAA,CAAMmC,KAAN,CAAYJ,MAAZ,CAAkB,QAAA,CAAA5K,CAAA,CAAK,CAAA,MAAAsI,SAAA,CAASlN,IAAT,CAAcuP,OAAA,CAAQ3K,CAAR,CAAd,CAAA,CAAvB,CAGEyK,IAAJ,EAAWC,GAAX,GACE7B,KAAA,CAAMmC,KAAN,CAAYJ,MAAZ,CAAkB,QAAA,CAAA5K,CAAA,CAAK,CAAA,IACjBxE,EAAIiP,GAAA,CAAIzK,CAAJ,CACJtE,EAAAA,CAAIgP,GAAA,CAAI1K,CAAJ,CAEC,KAAT,EAAIxE,CAAJ,EAAsB,IAAtB,EAAiBE,CAAjB,GAA+BF,CAA/B,CAAmC,CAACA,CAApC,IAA2CA,CAA3C,GAAiDE,CAAjD,CAAqD,CAACA,CAAtD,IAA6DA,CAA7D,EACE4O,MAAA,CAAOlP,IAAP,CAAY,CAACI,CAAD,CAAIE,CAAJ,CAAZ,CALmB,CAAvB,CAQA,CAAA4M,QAAA,CAAWA,QAAA,CAAS/K,MAAT,CAAgB,CACzBd,KAjEQiM,SAgEiB,CAEzBnH,SAAU,CACR9E,KAjESwO,YAgED,CAERvO,YAAa4N,MAFL,CAFe,CAAhB,CATb,CAkBA,KAAA,CAAK7P,KAAL,CAAa,CACXgC,KAzEoB4L,mBAwET,CAEXC,SAAUA,QAFC,CAvCK,CAD6B,CAAnD,CA+DApD,QAAA,CAAQyD,UAAR,CAAqB,CACnB,KAAQ,SADW,CAEnB,SAAY,CACV,SAAY,CAAA,CADF,CAFO,CAKnB,OAAU,CAAC,CACT,KAAQ,YADC,CAET,KAAQ,YAFC,CAAD,CAGP,CACD,KAAQ,OADP,CAED,KAAQ,OAFP,CAHO;AAMP,CACD,KAAQ,aADP,CAED,KAAQ,QAFP,CAGD,KAAQ,CAAA,CAHP,CANO,CAUP,CACD,KAAQ,IADP,CAED,KAAQ,QAFP,CAGD,UAAW,MAHV,CAVO,CALS,CAqBrB9O,SAAA,CAAS+O,QAAT,CAAkB1D,OAAlB,CAA2BtL,YAA3B,CAAwCgG,SAAxC,CAAmD,CACjD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CAAA,IACdG,IAAMH,KAAA,CAAMI,IAAN,CAAWJ,KAAX,CAAiBqC,GAAjB,CADQ,CAEd9F,KAAO,IAAPA,CAAY3K,KAFE,CAGdkL,MAAQrH,CAARqH,CAAUA,KAAVA,EAAmB9L,QAAnB8L,CAA4B2D,QAHd,CAIdE,GAAKlL,CAALkL,CAAOA,EAAPA,EAAa,MAJC,CAKdoB,KAAO5B,GAAP4B,CAAWvB,MAEX,EAACjE,IAAL,EAAa9G,CAAA,CAAEqJ,QAAF,EAAb,EAEE,IACA,CADKlN,KACL,CADa2K,IACb,CADoBpL,cAAA,CAAemR,iBAAf,CAAiC7M,CAAjC,CAAmC6J,UAAnC,CACpB,CAAAa,GAAA,CAAII,WAAJ,EAAA,CAAkBgC,MAAlB,EAHF,EAKER,IALF,CAKSjF,KAAA,GAAU9L,QAAV,CAAmByP,QAAnB,EAA+BT,KAAA,CAAMlB,QAAN,CAAehC,KAAf,CAAqB6E,MAArB,CAA/B,CAA8DxB,GAA9D,CAAkEqC,OAAlE,CAA4ErC,GAA5E,CAAgF6B,GAGnFvF,EAAAA,CAAOH,QAAA,CAASC,IAAT,CAAe9G,CAAf,CAAiB+G,WAAjB,CACb2D;GAAA,CAAIgC,KAAJ,CAAUJ,IAAV,CAAgB,QAAA,CAAA5K,CAAA,CAAK,CAAA,MAAAA,EAAA,CAAEwJ,EAAF,CAAA,CAAQpE,IAAA,CAAKO,KAAA,CAAM3F,CAAN,CAAL,CAAR,CAArB,CACAoF,KAAA,CAAKC,WAAL,CAAiBC,CAAjB,CACA,OAAO0D,IAAA,CAAIsC,QAAJ,CAAa9B,EAAb,CAlBW,CAD6B,CAAnD,CAkDAhE,SAAA,CAASmD,UAAT,CAAsB,CACpB,KAAQ,UADY,CAEpB,SAAY,CACV,SAAY,CAAA,CADF,CAFQ,CAKpB,OAAU,CAAC,CACT,KAAQ,YADC,CAET,KAAQ,YAFC,CAGT,SAAY,CAAA,CAHH,CAAD,CAIP,CACD,KAAQ,QADP,CAED,KAAQ,OAFP,CAGD,MAAS,CAAA,CAHR,CAID,SAAY,CAAA,CAJX,CAKD,OAAU,CALT,CAJO,CAUP,CACD,KAAQ,IADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAJT,CAKD,UAAW,CAAC,GAAD,CAAM,GAAN,CALV,CAVO,CALU,CAuBtB9O,SAAA,CAAS+O,QAAT,CAAkBpD,QAAlB,CAA4B5L,YAA5B,CAAyCgG,SAAzC,CAAoD,CAClD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CASlBlC,QAASA,IAAG,CAAC3G,CAAD,CAAI,CACd,IAAMuL,GAAK1D,IAAA,CAAK,CAAC4C,GAAA,CAAIzK,CAAJ,CAAD,CAAS0K,GAAA,CAAI1K,CAAJ,CAAT,CAAL,CAEPuL,GAAJ,EACEvL,CAAA,CAAExE,CAAF,CACA,CADO+P,EAAA,CAAG,CAAH,CACP,CAAAvL,CAAA,CAAEtE,CAAF,CAAA,CAAO6P,EAAA,CAAG,CAAH,CAFT,GAIEvL,CAAA,CAAExE,CAAF,CACA;AADOgQ,IAAAA,EACP,CAAAxL,CAAA,CAAEtE,CAAF,CAAA,CAAO8P,IAAAA,EALT,CAHc,CATE,IACd3D,KAAOvJ,CAAPuJ,CAASM,UADK,CAEdsC,IAAMnM,CAAA,CAAEkM,MAAF,CAAS,CAAT,CAFQ,CAGdE,IAAMpM,CAAA,CAAEkM,MAAF,CAAS,CAAT,CAHQ,CAIdhB,GAAKlL,CAALkL,CAAOA,EAAPA,EAAa,CAAC,GAAD,CAAM,GAAN,CAJC,CAKdhO,EAAIgO,EAAA,CAAG,CAAH,CALU,CAMd9N,EAAI8N,EAAA,CAAG,CAAH,CAeJlL,EAAA,CAAEqJ,QAAF,EAAJ,CAEEkB,KAFF,CAEUA,KAAA,CAAMO,WAAN,EAAA,CAAoBgC,MAApB,CAA2B,CAAA,CAA3B,CAAA,CAAiCJ,KAAjC,CAAuCnC,KAAvC,CAA6CQ,MAA7C,CAAqD1C,GAArD,CAFV,EAIEmE,CACA,CADMjC,KAAA,CAAMlB,QAAN,CAAe8C,GAAf,CAAmBD,MAAnB,CACN,EADoC3B,KAAA,CAAMlB,QAAN,CAAe+C,GAAf,CAAmBF,MAAnB,CACpC,CAAA3B,KAAA,CAAMmC,KAAN,CAAYF,CAAA,CAAMjC,KAAN,CAAYwC,OAAZ,CAAsBxC,KAAtB,CAA4BgC,GAAxC,CAA6ClE,GAA7C,CALF,CAQA,OAAOkC,MAAA,CAAMyC,QAAN,CAAe9B,EAAf,CA7BW,CAD8B,CAApD,CAkDA/D,SAAA,CAASkD,UAAT,CAAsB,CACpB,KAAQ,UADY,CAEpB,SAAY,CACV,SAAY,CAAA,CADF,CAEV,MAAS,CAAA,CAFC,CAFQ,CAMpB,OAAU,CAAC,CACT,KAAQ,YADC,CAET,KAAQ,YAFC,CAAD,CAGP,CACD,KAAQ,OADP,CAED,KAAQ,OAFP,CAGD,UAAW,OAHV,CAHO,CAOP,CACD,KAAQ,aADP,CAED,KAAQ,QAFP;AAGD,KAAQ,CAAA,CAHP,CAPO,CAWP,CACD,KAAQ,IADP,CAED,KAAQ,QAFP,CAGD,UAAW,OAHV,CAXO,CANU,CAuBtB9O,SAAA,CAAS+O,QAAT,CAAkBnD,QAAlB,CAA4B7L,YAA5B,CAAyCgG,SAAzC,CAAoD,CAClD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CACdG,KAAAA,CAAMH,KAAA,CAAMI,IAAN,CAAWJ,KAAX,CAAiBqC,GAAjB,CADQ,KAEdtF,MAAQ,IAARA,CAAanL,KAFC,CAGd+O,GAAKlL,CAALkL,CAAOA,EAAPA,EAAa,OAHC,CAIdoB,KAAO5B,KAAP4B,CAAWC,GAEf,IAAI,CAACjF,KAAL,EAActH,CAAA,CAAEqJ,QAAF,EAAd,CAEE,IAEA,CAFKlN,KAEL,CAFamL,KAEb,CAFqBF,cAAA,CAAe1L,cAAA,CAAemR,iBAAf,CAAiC7M,CAAjC,CAAmC6J,UAAnC,CAAf,CAA+D7J,CAA/D,CAAiEqH,KAAjE,EAA0E9L,QAAA,CAAS8L,KAAT,CAAe,OAAf,CAA1E,CAAmGrH,CAAnG,CAAqG+G,WAArG,CAErB,CADA2D,KAAA,CAAII,WAAJ,EAAA,CAAkBgC,MAAlB,EACA,CAAAR,IAAA,CAAO5B,KAAP,CAAWK,MAGbL,MAAA,CAAIgC,KAAJ,CAAUJ,IAAV,CAAgB,QAAA,CAAA5K,CAAA,CAAK,CAAA,MAAAA,EAAA,CAAEwJ,EAAF,CAAA,CAAQ5D,KAAR,CAArB,CACA,OAAOoD,MAAA,CAAIsC,QAAJ,CAAa9B,EAAb,CAdW,CAD8B,CAApD,CA6CA1D,UAAA,CAAU6C,UAAV;AAAuB,CACrB,KAAQ,WADa,CAErB,SAAY,CACV,QAAW,CAAA,CADD,CAEV,UAAa,CAAA,CAFH,CAFS,CAMrB,OAAU,CAAC,CACT,KAAQ,QADC,CAET,KAAQ,OAFC,CAGT,MAAS,CAAA,CAHA,CAIT,OAAU,CAJD,CAKT,QAAW,CACT,KAAQ,QADC,CAET,MAAS,CAAA,CAFA,CAGT,OAAU,CAHD,CALF,CAAD,CAUP,CACD,KAAQ,aADP,CAED,KAAQ,OAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAJT,CAKD,QAAW,CACT,KAAQ,QADC,CAET,MAAS,CAAA,CAFA,CAGT,OAAU,CAHD,CALV,CAVO,CAoBP,CACD,KAAQ,aADP,CAED,KAAQ,OAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAJT,CAKD,QAAW,CACT,KAAQ,QADC,CAET,MAAS,CAAA,CAFA,CAGT,OAAU,CAHD,CALV,CApBO,CA8BP,CACD,KAAQ,MADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAJT,CA9BO,CAmCP,CACD,KAAQ,WADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAJT,CAKD,UAAW,CAAC,EAAD,CAAK,GAAL,CALV,CAnCO,CAyCP,CACD,KAAQ,WADP,CAED,KAAQ,QAFP,CAGD,MAAS,CAAA,CAHR,CAID,OAAU,CAJT;AAKD,UAAW,CAAC,EAAD,CAAK,EAAL,CALV,CAzCO,CA+CP,CACD,KAAQ,WADP,CAED,KAAQ,QAFP,CAGD,UAAW,GAHV,CA/CO,CANW,CA2DvB9O,SAAA,CAAS+O,QAAT,CAAkB9C,SAAlB,CAA6BlM,YAA7B,CAA0CgG,SAA1C,CAAqD,CACnD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CAAA,IACd4C,IAAM,IAANA,CAAWhR,KADG,CAEdiR,IAAM,IAANA,CAAW3F,SAGf,IAAI,CAAC0F,GAAD,CAAKvQ,MAAT,EAAmBoD,CAAA,CAAEqJ,QAAF,EAAnB,CACE,IAAKgE,IAAMA,IAAX,GAAmBrN,EAAnB,CACE,GAAIzE,QAAA,CAAS4G,UAAT,CAAoBiL,GAAA,CAAIC,IAAJ,CAApB,CAAJ,CACED,GAAA,CAAIC,IAAJ,CAAA,CAAUrN,CAAA,CAAEqN,IAAF,CAAV,CAKN3L,EAAA,CAAI0L,GAAA,EAEAD,IAAJ,CAAQvQ,MAAR,CACE2N,KAAA,CAAMiC,GAAN,CAAU1P,IAAV,CAAexB,YAAA,CAAagS,OAAb,CAAqBH,GAAA,CAAI,CAAJ,CAArB,CAA6BzL,CAA7B,CAAf,CADF,CAGE6I,KAAA,CAAMgB,GAAN,CAAUzO,IAAV,CAAexB,YAAA,CAAa+P,MAAb,CAAoB3J,CAApB,CAAf,CAGFyL,IAAA,CAAI,CAAJ,CAAA,CAASzL,CACT,OAAO6I,MAtBW,CAD+B,CAArD,CAmDA5C,QAAA,CAAQ0C,UAAR,CAAqB,CACnB,KAAQ,SADW,CAEnB,SAAY,CACV,SAAY,CAAA,CADF,CAFO,CAKnB,OAAU,CAAC,CACT,KAAQ,OADC,CAET,KAAQ,OAFC,CAAD;AAGP,CACD,KAAQ,OADP,CAED,KAAQ,QAFP,CAGD,KAAQ,CAAA,CAHP,CAHO,CAOP,CACD,KAAQ,SADP,CAED,KAAQ,QAFP,CAGD,KAAQ,CAAA,CAHP,CAPO,CAWP,CACD,KAAQ,SADP,CAED,KAAQ,MAFP,CAGD,OAAU,CAAC,QAAD,CAAW,aAAX,CAHT,CAID,UAAW,aAJV,CAXO,CAgBP,CACD,KAAQ,IADP,CAED,KAAQ,QAFP,CAGD,UAAW,OAHV,CAhBO,CALS,CA2BrB9O,SAAA,CAAS+O,QAAT,CAAkB3C,OAAlB,CAA2BrM,YAA3B,CAAwCgG,SAAxC,CAAmD,CACjD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CAClB,GAAI,CAACA,KAAA,CAAMC,OAAN,EAAL,EAAwB,CAACxK,CAAA,CAAEqJ,QAAF,EAAzB,CACE,MAAOkB,MAAP,CAAaE,eAFG,KAKd5E,OAAS0E,KAAA,CAAMO,WAAN,CAAkBP,KAAlB,CAAwBQ,MAAxB,CAATlF,CAAyCA,MAL3B,CAMd0H,OAAuB,QAAvBA,GAASvN,CAATuN,CAAW9L,OANG,CAOd4F,MAAQrH,CAARqH,CAAUA,KAAVA,EAAmB9L,QAAnB8L,CAA4B2D,QAPd,CAQd9C,QAAUD,QAAA,CAASjI,CAAT,CAAWkI,OAAX,CAAoBlI,CAApB,CARI,CASd6H,MAAQD,MAAA,CAAO5H,CAAP,CAAS6H,KAAT;AAAgB7H,CAAhB,CATM,CAUdkL,GAAKlL,CAALkL,CAAOA,EAAPA,EAAa,OAVC,CAWdhF,IAAM,CACRsC,GAAI,CADI,CAERC,GAAI,CAFI,CAGRN,OAAQ,CAHA,CAIRC,KAAMmF,MAAA,CAAS/R,OAAA,CAAQmG,GAAR,CAAYkE,MAAA,CAAO3J,GAAP,CAAW,QAAA,CAAAwF,CAAA,CAAK,CAAA,MAAAlG,QAAA,CAAQmG,GAAR,CAAY0F,KAAA,CAAM3F,CAAN,CAAZ,CAAqB1F,MAArB,CAAA,CAAhB,CAAZ,CAAT,CAAsE,CAJpE,CAMV6J,OAAA,CAAO9I,OAAP,CAAe,QAAA,CAAA2E,CAAA,CAAK,CAClB,IAAM2B,EAAIgE,KAAA,CAAM3F,CAAN,CAAV,CAEM8L,EAAIjS,QAAA,CAASkS,MAAT,CAAgB,EAAhB,CAAoB/L,CAApB,CAAuBwE,GAAvB,CAELqH,OAAL,GAAaC,CAAb,CAAepF,IAAf,CAAsB5M,OAAA,CAAQmG,GAAR,CAAY0B,CAAZ,CAAcrH,MAAd,EAAwB,EAAxB,CAAtB,CAGA0F,EAAA,CAAEwJ,EAAF,CAAA,CAAQxC,QAAA,CAASrF,CAAT,CAAYmK,CAAZ,CAAe3F,KAAA,CAAME,GAAN,CAAYF,KAAZ,CAAoBtM,QAAA,CAASmI,QAAT,CAAkBmE,KAAA,CAAM2F,CAAN,CAAlB,CAAnC,CAAgEtF,OAAA,CAAQH,GAAR,CAAcG,OAAd,CAAwB3M,QAAA,CAASmI,QAAT,CAAkBwE,OAAA,CAAQsF,CAAR,CAAlB,CAAxF,CARU,CAApB,CAUA,OAAOjD,MAAA,CAAMuC,MAAN,CAAa,CAAA,CAAb,CAAA,CAAmBE,QAAnB,CAA4B9B,EAA5B,CA3BW,CAD6B,CAAnD,CAsHA3P,SAAA,CAAS+O,QAAT,CAAkBlB,UAAlB,CAA8B9N,YAA9B,CAA2CgG,SAA3C,CAAsD,CACpD,UAAAiB,QAAS,CAACvC,CAAD,CAAIuK,KAAJ,CAAW,CAClB,IAAIhB;AAAO,IAAPA,CAAYpN,KAEZ,EAACoN,aAAL,EAAavJ,CAAA,CAAEqJ,QAAF,CAAW,MAAX,CAAb,EACE,IACA,CADKlN,KACL,CADaoN,aACb,CADoBI,MAAA,CAAO3J,CAAP,CAAS7B,IAAT,CACpB,CAAAzC,cAAA,CAAegS,oBAAf,CAAoC3Q,OAApC,CAA4C,QAAA,CAAAsQ,IAAA,CAAQ,CAClD,GAAe,IAAf,EAAIrN,CAAA,CAAEqN,IAAF,CAAJ,CAAqB,CAAI9D,IAAAA,KAAAA,aAAAA,CAAY,MAAAvJ,CAAA,CAAEqN,IAAF,CA2B3C,IAAI9R,QAAA,CAAS4G,UAAT,CAAoBoH,IAAA,CA3Ba8D,IA2Bb,CAApB,CAAJ,CAAoC9D,IAAA,CA3BC8D,IA2BD,CAAA,CAAUlR,KAAV,CA3BT,CAD6B,CAApD,CAFF,EAMET,cAAA,CAAegS,oBAAf,CAAoC3Q,OAApC,CAA4C,QAAA,CAAAsQ,IAAA,CAAQ,CAClD,GAAIrN,CAAA,CAAEqJ,QAAF,CAAWgE,IAAX,CAAJ,CAAsB,CAAI9D,IAAAA,KAAAA,aAAAA,CAAY,MAAAvJ,CAAA,CAAEqN,IAAF,CAuB5C,IAAI9R,QAAA,CAAS4G,UAAT,CAAoBoH,IAAA,CAvBc8D,IAuBd,CAApB,CAAJ,CAAoC9D,IAAA,CAvBE8D,IAuBF,CAAA,CAAUlR,KAAV,CAvBR,CAD4B,CAApD,CAKmB,KAArB,EAAI6D,CAAJ,CAAM+G,WAAN,EAA2BwC,aAAA,CAAKzC,IAAL,CAAUC,WAAV,CAAsB/G,CAAtB,CAAwB+G,WAAxB,CACvB/G,EAAJ,CAAMsJ,GAAN;AAAWA,GAAA,CAAIC,aAAJ,CAAUvJ,CAAV,CACX,OAAOuK,MAAA,CAAMI,IAAN,CAAWJ,KAAX,CAAiBK,SAAjB,CAA6BL,KAA7B,CAAmCM,SAAnC,CAhBW,CADgC,CAAtD,CAoDAhQ,QAAA,CAAQuB,OAAR,CAAkBsK,OAClB7L,QAAA,CAAQwR,OAAR,CAAkB1F,OAClB9L,QAAA,CAAQ8S,OAAR,CAAkB/G,OAClB/L,QAAA,CAAQ+S,QAAR,CAAmB1G,QACnBrM,QAAA,CAAQgT,QAAR,CAAmB1G,QACnBtM,QAAA,CAAQiT,SAAR,CAAoBtG,SACpB3M,QAAA,CAAQkT,OAAR,CAAkBpG,OAClB9M,QAAA,CAAQmT,UAAR,CAAqB5M,UACrBvG,QAAA,CAAQoT,KAAR,CAAgBhI,KAChBpL,QAAA,CAAQgP,UAAR,CAAqBT,UAErB8E,OAAA,CAAOC,cAAP,CAAsBtT,OAAtB,CAA+B,YAA/B,CAA6C,CAAEsB,MAAO,CAAA,CAAT,CAA7C,CAx6CuH,CAJxH,CADuG;",
"sources":["node_modules/vega-geo/build/vega-geo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_geo$build$vega_geo\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-util'), require('d3-array'), require('vega-statistics'), require('vega-projection'), require('d3-geo'), require('d3-color'), require('vega-canvas')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-util', 'd3-array', 'vega-statistics', 'vega-projection', 'd3-geo', 'd3-color', 'vega-canvas'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.d3, global.vega, global.vega, global.d3, global.d3, global.vega));\n}(this, (function (exports, vegaDataflow, vegaUtil, d3Array, vegaStatistics, vegaProjection, d3Geo, d3Color, vegaCanvas) { 'use strict';\n\n  function noop() {}\n\n  const cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []]; // Implementation adapted from d3/d3-contour. Thanks!\n\n  function contours () {\n    var dx = 1,\n        dy = 1,\n        smooth = smoothLinear;\n\n    function contours(values, tz) {\n      return tz.map(value => contour(values, value));\n    } // Accumulate, smooth contour rings, assign holes to exterior rings.\n    // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n\n\n    function contour(values, value) {\n      var polygons = [],\n          holes = [];\n      isorings(values, value, ring => {\n        smooth(ring, values, value);\n        if (area(ring) > 0) polygons.push([ring]);else holes.push(ring);\n      });\n      holes.forEach(hole => {\n        for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n          if (contains((polygon = polygons[i])[0], hole) !== -1) {\n            polygon.push(hole);\n            return;\n          }\n        }\n      });\n      return {\n        type: 'MultiPolygon',\n        value: value,\n        coordinates: polygons\n      };\n    } // Marching squares with isolines stitched into rings.\n    // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n\n\n    function isorings(values, value, callback) {\n      var fragmentByStart = new Array(),\n          fragmentByEnd = new Array(),\n          x,\n          y,\n          t0,\n          t1,\n          t2,\n          t3; // Special case for the first row (y = -1, t2 = t3 = 0).\n\n      x = y = -1;\n      t1 = values[0] >= value;\n      cases[t1 << 1].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[x + 1] >= value;\n        cases[t0 | t1 << 1].forEach(stitch);\n      }\n\n      cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.\n\n      while (++y < dy - 1) {\n        x = -1;\n        t1 = values[y * dx + dx] >= value;\n        t2 = values[y * dx] >= value;\n        cases[t1 << 1 | t2 << 2].forEach(stitch);\n\n        while (++x < dx - 1) {\n          t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n          t3 = t2, t2 = values[y * dx + x + 1] >= value;\n          cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n        }\n\n        cases[t1 | t2 << 3].forEach(stitch);\n      } // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n\n\n      x = -1;\n      t2 = values[y * dx] >= value;\n      cases[t2 << 2].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t2 << 2 | t3 << 3].forEach(stitch);\n      }\n\n      cases[t2 << 3].forEach(stitch);\n\n      function stitch(line) {\n        var start = [line[0][0] + x, line[0][1] + y],\n            end = [line[1][0] + x, line[1][1] + y],\n            startIndex = index(start),\n            endIndex = index(end),\n            f,\n            g;\n\n        if (f = fragmentByEnd[startIndex]) {\n          if (g = fragmentByStart[endIndex]) {\n            delete fragmentByEnd[f.end];\n            delete fragmentByStart[g.start];\n\n            if (f === g) {\n              f.ring.push(end);\n              callback(f.ring);\n            } else {\n              fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n                start: f.start,\n                end: g.end,\n                ring: f.ring.concat(g.ring)\n              };\n            }\n          } else {\n            delete fragmentByEnd[f.end];\n            f.ring.push(end);\n            fragmentByEnd[f.end = endIndex] = f;\n          }\n        } else if (f = fragmentByStart[endIndex]) {\n          if (g = fragmentByEnd[startIndex]) {\n            delete fragmentByStart[f.start];\n            delete fragmentByEnd[g.end];\n\n            if (f === g) {\n              f.ring.push(end);\n              callback(f.ring);\n            } else {\n              fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n                start: g.start,\n                end: f.end,\n                ring: g.ring.concat(f.ring)\n              };\n            }\n          } else {\n            delete fragmentByStart[f.start];\n            f.ring.unshift(start);\n            fragmentByStart[f.start = startIndex] = f;\n          }\n        } else {\n          fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n            start: startIndex,\n            end: endIndex,\n            ring: [start, end]\n          };\n        }\n      }\n    }\n\n    function index(point) {\n      return point[0] * 2 + point[1] * (dx + 1) * 4;\n    }\n\n    function smoothLinear(ring, values, value) {\n      ring.forEach(point => {\n        var x = point[0],\n            y = point[1],\n            xt = x | 0,\n            yt = y | 0,\n            v0,\n            v1 = values[yt * dx + xt];\n\n        if (x > 0 && x < dx && xt === x) {\n          v0 = values[yt * dx + xt - 1];\n          point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n        }\n\n        if (y > 0 && y < dy && yt === y) {\n          v0 = values[(yt - 1) * dx + xt];\n          point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n        }\n      });\n    }\n\n    contours.contour = contour;\n\n    contours.size = function (_) {\n      if (!arguments.length) return [dx, dy];\n\n      var _0 = Math.floor(_[0]),\n          _1 = Math.floor(_[1]);\n\n      if (!(_0 >= 0 && _1 >= 0)) vegaUtil.error('invalid size');\n      return dx = _0, dy = _1, contours;\n    };\n\n    contours.smooth = function (_) {\n      return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n    };\n\n    return contours;\n  }\n\n  function area(ring) {\n    var i = 0,\n        n = ring.length,\n        area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n    while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n\n    return area;\n  }\n\n  function contains(ring, hole) {\n    var i = -1,\n        n = hole.length,\n        c;\n\n    while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n\n    return 0;\n  }\n\n  function ringContains(ring, point) {\n    var x = point[0],\n        y = point[1],\n        contains = -1;\n\n    for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n      var pi = ring[i],\n          xi = pi[0],\n          yi = pi[1],\n          pj = ring[j],\n          xj = pj[0],\n          yj = pj[1];\n      if (segmentContains(pi, pj, point)) return 0;\n      if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n    }\n\n    return contains;\n  }\n\n  function segmentContains(a, b, c) {\n    var i;\n    return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n  }\n\n  function collinear(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n  }\n\n  function within(p, q, r) {\n    return p <= q && q <= r || r <= q && q <= p;\n  }\n\n  function quantize (k, nice, zero) {\n    return function (values) {\n      var ex = vegaUtil.extent(values),\n          start = zero ? Math.min(ex[0], 0) : ex[0],\n          stop = ex[1],\n          span = stop - start,\n          step = nice ? d3Array.tickStep(start, stop, k) : span / (k + 1);\n      return d3Array.range(start + step, stop, step);\n    };\n  }\n\n  /**\n   * Generate isocontours (level sets) based on input raster grid data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} [params.field] - The field with raster grid\n   *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n   * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n   *   specified, the levels, nice, resolve, and zero parameters are ignored.\n   * @param {number} [params.levels] - The desired number of contour levels.\n   * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n   *   threshold values should be automatically aligned to \"nice\"\n   *   human-friendly values. Setting this flag may cause the number of\n   *   thresholds to deviate from the specified levels.\n   * @param {string} [params.resolve] - The method for resolving thresholds\n   *   across multiple input grids. If 'independent' (the default), threshold\n   *   calculation will be performed separately for each grid. If 'shared', a\n   *   single set of threshold values will be used for all input grids.\n   * @param {boolean} [params.zero] - Boolean flag indicating if the contour\n   *   threshold values should include zero.\n   * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n   *   polygons should be smoothed using linear interpolation. The default is\n   *   true. The parameter is ignored when using density estimation.\n   * @param {boolean} [params.scale] - Optional numerical value by which to\n   *   scale the output isocontour coordinates. This parameter can be useful\n   *   to scale the contours to match a desired output resolution.\n   * @param {string} [params.as='contour'] - The output field in which to store\n   *   the generated isocontour data (default 'contour').\n   */\n\n  function Isocontour(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Isocontour.Definition = {\n    'type': 'Isocontour',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'thresholds',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'levels',\n      'type': 'number'\n    }, {\n      'name': 'nice',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'resolve',\n      'type': 'enum',\n      'values': ['shared', 'independent'],\n      'default': 'independent'\n    }, {\n      'name': 'zero',\n      'type': 'boolean',\n      'default': true\n    }, {\n      'name': 'smooth',\n      'type': 'boolean',\n      'default': true\n    }, {\n      'name': 'scale',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'translate',\n      'type': 'number',\n      'array': true,\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'null': true,\n      'default': 'contour'\n    }]\n  };\n  vegaUtil.inherits(Isocontour, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          source = pulse.materialize(pulse.SOURCE).source,\n          field = _.field || vegaUtil.identity,\n          contour = contours().smooth(_.smooth !== false),\n          tz = _.thresholds || levels(source, field, _),\n          as = _.as === null ? null : _.as || 'contour',\n          values = [];\n      source.forEach(t => {\n        const grid = field(t); // generate contour paths in GeoJSON format\n\n        const paths = contour.size([grid.width, grid.height])(grid.values, vegaUtil.isArray(tz) ? tz : tz(grid.values)); // adjust contour path coordinates as needed\n\n        transformPaths(paths, grid, t, _); // ingest; copy source data properties to output\n\n        paths.forEach(p => {\n          values.push(vegaDataflow.rederive(t, vegaDataflow.ingest(as != null ? {\n            [as]: p\n          } : p)));\n        });\n      });\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = values;\n      return out;\n    }\n\n  });\n\n  function levels(values, f, _) {\n    const q = quantize(_.levels || 10, _.nice, _.zero !== false);\n    return _.resolve !== 'shared' ? q : q(values.map(t => d3Array.max(f(t).values)));\n  }\n\n  function transformPaths(paths, grid, datum, _) {\n    let s = _.scale || grid.scale,\n        t = _.translate || grid.translate;\n    if (vegaUtil.isFunction(s)) s = s(datum, _);\n    if (vegaUtil.isFunction(t)) t = t(datum, _);\n    if ((s === 1 || s == null) && !t) return;\n    const sx = (vegaUtil.isNumber(s) ? s : s[0]) || 1,\n          sy = (vegaUtil.isNumber(s) ? s : s[1]) || 1,\n          tx = t && t[0] || 0,\n          ty = t && t[1] || 0;\n    paths.forEach(transform(grid, sx, sy, tx, ty));\n  }\n\n  function transform(grid, sx, sy, tx, ty) {\n    const x1 = grid.x1 || 0,\n          y1 = grid.y1 || 0,\n          flip = sx * sy < 0;\n\n    function transformPolygon(coordinates) {\n      coordinates.forEach(transformRing);\n    }\n\n    function transformRing(coordinates) {\n      if (flip) coordinates.reverse(); // maintain winding order\n\n      coordinates.forEach(transformPoint);\n    }\n\n    function transformPoint(coordinates) {\n      coordinates[0] = (coordinates[0] - x1) * sx + tx;\n      coordinates[1] = (coordinates[1] - y1) * sy + ty;\n    }\n\n    return function (geometry) {\n      geometry.coordinates.forEach(transformPolygon);\n      return geometry;\n    };\n  }\n\n  function radius(bw, data, f) {\n    const v = bw >= 0 ? bw : vegaStatistics.bandwidthNRD(data, f);\n    return Math.round((Math.sqrt(4 * v * v + 1) - 1) / 2);\n  }\n\n  function number(_) {\n    return vegaUtil.isFunction(_) ? _ : vegaUtil.constant(+_);\n  } // Implementation adapted from d3/d3-contour. Thanks!\n\n\n  function density2D () {\n    var x = d => d[0],\n        y = d => d[1],\n        weight = vegaUtil.one,\n        bandwidth = [-1, -1],\n        dx = 960,\n        dy = 500,\n        k = 2; // log2(cellSize)\n\n\n    function density(data, counts) {\n      const rx = radius(bandwidth[0], data, x) >> k,\n            // blur x-radius\n      ry = radius(bandwidth[1], data, y) >> k,\n            // blur y-radius\n      ox = rx ? rx + 2 : 0,\n            // x-offset padding for blur\n      oy = ry ? ry + 2 : 0,\n            // y-offset padding for blur\n      n = 2 * ox + (dx >> k),\n            // grid width\n      m = 2 * oy + (dy >> k),\n            // grid height\n      values0 = new Float32Array(n * m),\n            values1 = new Float32Array(n * m);\n      let values = values0;\n      data.forEach(d => {\n        const xi = ox + (+x(d) >> k),\n              yi = oy + (+y(d) >> k);\n\n        if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n          values0[xi + yi * n] += +weight(d);\n        }\n      });\n\n      if (rx > 0 && ry > 0) {\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n        blurX(n, m, values0, values1, rx);\n        blurY(n, m, values1, values0, ry);\n      } else if (rx > 0) {\n        blurX(n, m, values0, values1, rx);\n        blurX(n, m, values1, values0, rx);\n        blurX(n, m, values0, values1, rx);\n        values = values1;\n      } else if (ry > 0) {\n        blurY(n, m, values0, values1, ry);\n        blurY(n, m, values1, values0, ry);\n        blurY(n, m, values0, values1, ry);\n        values = values1;\n      } // scale density estimates\n      // density in points per square pixel or probability density\n\n\n      const s = counts ? Math.pow(2, -2 * k) : 1 / d3Array.sum(values);\n\n      for (let i = 0, sz = n * m; i < sz; ++i) values[i] *= s;\n\n      return {\n        values: values,\n        scale: 1 << k,\n        width: n,\n        height: m,\n        x1: ox,\n        y1: oy,\n        x2: ox + (dx >> k),\n        y2: oy + (dy >> k)\n      };\n    }\n\n    density.x = function (_) {\n      return arguments.length ? (x = number(_), density) : x;\n    };\n\n    density.y = function (_) {\n      return arguments.length ? (y = number(_), density) : y;\n    };\n\n    density.weight = function (_) {\n      return arguments.length ? (weight = number(_), density) : weight;\n    };\n\n    density.size = function (_) {\n      if (!arguments.length) return [dx, dy];\n\n      var _0 = +_[0],\n          _1 = +_[1];\n\n      if (!(_0 >= 0 && _1 >= 0)) vegaUtil.error('invalid size');\n      return dx = _0, dy = _1, density;\n    };\n\n    density.cellSize = function (_) {\n      if (!arguments.length) return 1 << k;\n      if (!((_ = +_) >= 1)) vegaUtil.error('invalid cell size');\n      k = Math.floor(Math.log(_) / Math.LN2);\n      return density;\n    };\n\n    density.bandwidth = function (_) {\n      if (!arguments.length) return bandwidth;\n      _ = vegaUtil.array(_);\n      if (_.length === 1) _ = [+_[0], +_[0]];\n      if (_.length !== 2) vegaUtil.error('invalid bandwidth');\n      return bandwidth = _, density;\n    };\n\n    return density;\n  }\n\n  function blurX(n, m, source, target, r) {\n    const w = (r << 1) + 1;\n\n    for (let j = 0; j < m; ++j) {\n      for (let i = 0, sr = 0; i < n + r; ++i) {\n        if (i < n) {\n          sr += source[i + j * n];\n        }\n\n        if (i >= r) {\n          if (i >= w) {\n            sr -= source[i - w + j * n];\n          }\n\n          target[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n        }\n      }\n    }\n  }\n\n  function blurY(n, m, source, target, r) {\n    const w = (r << 1) + 1;\n\n    for (let i = 0; i < n; ++i) {\n      for (let j = 0, sr = 0; j < m + r; ++j) {\n        if (j < m) {\n          sr += source[i + j * n];\n        }\n\n        if (j >= r) {\n          if (j >= w) {\n            sr -= source[i + (j - w) * n];\n          }\n\n          target[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n        }\n      }\n    }\n  }\n\n  /**\n   * Perform 2D kernel-density estimation of point data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<number>} params.size - The [width, height] extent (in\n   *   units of input pixels) over which to perform density estimation.\n   * @param {function(object): number} params.x - The x-coordinate accessor.\n   * @param {function(object): number} params.y - The y-coordinate accessor.\n   * @param {function(object): number} [params.weight] - The weight accessor.\n   * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n   *   to groupby.\n   * @param {number} [params.cellSize] - Contour density calculation cell size.\n   *   This parameter determines the level of spatial approximation. For example,\n   *   the default value of 4 maps to 2x reductions in both x- and y- dimensions.\n   *   A value of 1 will result in an output raster grid whose dimensions exactly\n   *   matches the size parameter.\n   * @param {Array<number>} [params.bandwidth] - The KDE kernel bandwidths,\n   *   in pixels. The input can be a two-element array specifying separate\n   *   x and y bandwidths, or a single-element array specifying both. If the\n   *   bandwidth is unspecified or less than zero, the bandwidth will be\n   *   automatically determined.\n   * @param {boolean} [params.counts=false] - A boolean flag indicating if the\n   *   output values should be probability estimates (false, default) or\n   *   smoothed counts (true).\n   * @param {string} [params.as='grid'] - The output field in which to store\n   *   the generated raster grid (default 'grid').\n   */\n\n  function KDE2D(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  KDE2D.Definition = {\n    'type': 'KDE2D',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'size',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'required': true\n    }, {\n      'name': 'x',\n      'type': 'field',\n      'required': true\n    }, {\n      'name': 'y',\n      'type': 'field',\n      'required': true\n    }, {\n      'name': 'weight',\n      'type': 'field'\n    }, {\n      'name': 'groupby',\n      'type': 'field',\n      'array': true\n    }, {\n      'name': 'cellSize',\n      'type': 'number'\n    }, {\n      'name': 'bandwidth',\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'counts',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'grid'\n    }]\n  };\n  const PARAMS = ['x', 'y', 'weight', 'size', 'cellSize', 'bandwidth'];\n  function params(obj, _) {\n    PARAMS.forEach(param => _[param] != null ? obj[param](_[param]) : 0);\n    return obj;\n  }\n  vegaUtil.inherits(KDE2D, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) return pulse.StopPropagation;\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          source = pulse.materialize(pulse.SOURCE).source,\n          groups = partition(source, _.groupby),\n          names = (_.groupby || []).map(vegaUtil.accessorName),\n          kde = params(density2D(), _),\n          as = _.as || 'grid',\n          values = [];\n\n      function set(t, vals) {\n        for (let i = 0; i < names.length; ++i) t[names[i]] = vals[i];\n\n        return t;\n      } // generate density raster grids\n\n\n      values = groups.map(g => vegaDataflow.ingest(set({\n        [as]: kde(g, _.counts)\n      }, g.dims)));\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = values;\n      return out;\n    }\n\n  });\n  function partition(data, groupby) {\n    var groups = [],\n        get = f => f(t),\n        map,\n        i,\n        n,\n        t,\n        k,\n        g; // partition data points into groups\n\n\n    if (groupby == null) {\n      groups.push(data);\n    } else {\n      for (map = {}, i = 0, n = data.length; i < n; ++i) {\n        t = data[i];\n        k = groupby.map(get);\n        g = map[k];\n\n        if (!g) {\n          map[k] = g = [];\n          g.dims = k;\n          groups.push(g);\n        }\n\n        g.push(t);\n      }\n    }\n\n    return groups;\n  }\n\n  /**\n   * Generate contours based on kernel-density estimation of point data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.\n   *  If the values parameter is provided, this must be the dimensions of the input data.\n   *  If density estimation is performed, this is the output view dimensions in pixels.\n   * @param {Array<number>} [params.values] - An array of numeric values representing an\n   *  width x height grid of values over which to compute contours. If unspecified, this\n   *  transform will instead attempt to compute contours for the kernel density estimate\n   *  using values drawn from data tuples in the input pulse.\n   * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.\n   * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.\n   * @param {function(object): number} [params.weight] - The data point weight accessor for density estimation.\n   * @param {number} [params.cellSize] - Contour density calculation cell size.\n   * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.\n   * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n   *   this parameter is set, the count and nice parameters will be ignored.\n   * @param {number} [params.count] - The desired number of contours.\n   * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n   *   threshold values should be automatically aligned to \"nice\"\n   *   human-friendly values. Setting this flag may cause the number of\n   *   thresholds to deviate from the specified count.\n   * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n   *   polygons should be smoothed using linear interpolation. The default is\n   *   true. The parameter is ignored when using density estimation.\n   */\n\n  function Contour(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Contour.Definition = {\n    'type': 'Contour',\n    'metadata': {\n      'generates': true\n    },\n    'params': [{\n      'name': 'size',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'required': true\n    }, {\n      'name': 'values',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'x',\n      'type': 'field'\n    }, {\n      'name': 'y',\n      'type': 'field'\n    }, {\n      'name': 'weight',\n      'type': 'field'\n    }, {\n      'name': 'cellSize',\n      'type': 'number'\n    }, {\n      'name': 'bandwidth',\n      'type': 'number'\n    }, {\n      'name': 'count',\n      'type': 'number'\n    }, {\n      'name': 'nice',\n      'type': 'boolean',\n      'default': false\n    }, {\n      'name': 'thresholds',\n      'type': 'number',\n      'array': true\n    }, {\n      'name': 'smooth',\n      'type': 'boolean',\n      'default': true\n    }]\n  };\n  vegaUtil.inherits(Contour, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (this.value && !pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n\n      var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          contour = contours().smooth(_.smooth !== false),\n          values = _.values,\n          thresh = _.thresholds || quantize(_.count || 10, _.nice, !!values),\n          size = _.size,\n          grid,\n          post;\n\n      if (!values) {\n        values = pulse.materialize(pulse.SOURCE).source;\n        grid = params(density2D(), _)(values, true);\n        post = transform(grid, grid.scale || 1, grid.scale || 1, 0, 0);\n        size = [grid.width, grid.height];\n        values = grid.values;\n      }\n\n      thresh = vegaUtil.isArray(thresh) ? thresh : thresh(values);\n      values = contour.size(size)(values, thresh);\n      if (post) values.forEach(post);\n      if (this.value) out.rem = this.value;\n      this.value = out.source = out.add = (values || []).map(vegaDataflow.ingest);\n      return out;\n    }\n\n  });\n\n  const Feature = 'Feature';\n  const FeatureCollection = 'FeatureCollection';\n  const MultiPoint = 'MultiPoint';\n\n  /**\n   * Consolidate an array of [longitude, latitude] points or GeoJSON features\n   * into a combined GeoJSON object. This transform is particularly useful for\n   * combining geo data for a Projection's fit argument. The resulting GeoJSON\n   * data is available as this transform's value. Input pulses are unchanged.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {Array<function(object): *>} [params.fields] - A two-element array\n   *   of field accessors for the longitude and latitude values.\n   * @param {function(object): *} params.geojson - A field accessor for\n   *   retrieving GeoJSON feature data.\n   */\n\n  function GeoJSON(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoJSON.Definition = {\n    'type': 'GeoJSON',\n    'metadata': {},\n    'params': [{\n      'name': 'fields',\n      'type': 'field',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'geojson',\n      'type': 'field'\n    }]\n  };\n  vegaUtil.inherits(GeoJSON, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var features = this._features,\n          points = this._points,\n          fields = _.fields,\n          lon = fields && fields[0],\n          lat = fields && fields[1],\n          geojson = _.geojson || !fields && vegaUtil.identity,\n          flag = pulse.ADD,\n          mod;\n      mod = _.modified() || pulse.changed(pulse.REM) || pulse.modified(vegaUtil.accessorFields(geojson)) || lon && pulse.modified(vegaUtil.accessorFields(lon)) || lat && pulse.modified(vegaUtil.accessorFields(lat));\n\n      if (!this.value || mod) {\n        flag = pulse.SOURCE;\n        this._features = features = [];\n        this._points = points = [];\n      }\n\n      if (geojson) {\n        pulse.visit(flag, t => features.push(geojson(t)));\n      }\n\n      if (lon && lat) {\n        pulse.visit(flag, t => {\n          var x = lon(t),\n              y = lat(t);\n\n          if (x != null && y != null && (x = +x) === x && (y = +y) === y) {\n            points.push([x, y]);\n          }\n        });\n        features = features.concat({\n          type: Feature,\n          geometry: {\n            type: MultiPoint,\n            coordinates: points\n          }\n        });\n      }\n\n      this.value = {\n        type: FeatureCollection,\n        features: features\n      };\n    }\n\n  });\n\n  /**\n   * Map GeoJSON data to an SVG path string.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {function(object): *} [params.field] - The field with GeoJSON data,\n   *   or null if the tuple itself is a GeoJSON feature.\n   * @param {string} [params.as='path'] - The output field in which to store\n   *   the generated path data (default 'path').\n   */\n\n  function GeoPath(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoPath.Definition = {\n    'type': 'GeoPath',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection'\n    }, {\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'pointRadius',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'path'\n    }]\n  };\n  vegaUtil.inherits(GeoPath, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var out = pulse.fork(pulse.ALL),\n          path = this.value,\n          field = _.field || vegaUtil.identity,\n          as = _.as || 'path',\n          flag = out.SOURCE;\n\n      if (!path || _.modified()) {\n        // parameters updated, reset and reflow\n        this.value = path = vegaProjection.getProjectionPath(_.projection);\n        out.materialize().reflow();\n      } else {\n        flag = field === vegaUtil.identity || pulse.modified(field.fields) ? out.ADD_MOD : out.ADD;\n      }\n\n      const prev = initPath(path, _.pointRadius);\n      out.visit(flag, t => t[as] = path(field(t)));\n      path.pointRadius(prev);\n      return out.modifies(as);\n    }\n\n  });\n\n  function initPath(path, pointRadius) {\n    const prev = path.pointRadius();\n    path.context(null);\n\n    if (pointRadius != null) {\n      path.pointRadius(pointRadius);\n    }\n\n    return prev;\n  }\n\n  /**\n   * Geo-code a longitude/latitude point to an x/y coordinate.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {Array<function(object): *>} params.fields - A two-element array of\n   *   field accessors for the longitude and latitude values.\n   * @param {Array<string>} [params.as] - A two-element array of field names\n   *   under which to store the result. Defaults to ['x','y'].\n   */\n\n  function GeoPoint(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoPoint.Definition = {\n    'type': 'GeoPoint',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection',\n      'required': true\n    }, {\n      'name': 'fields',\n      'type': 'field',\n      'array': true,\n      'required': true,\n      'length': 2\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'array': true,\n      'length': 2,\n      'default': ['x', 'y']\n    }]\n  };\n  vegaUtil.inherits(GeoPoint, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var proj = _.projection,\n          lon = _.fields[0],\n          lat = _.fields[1],\n          as = _.as || ['x', 'y'],\n          x = as[0],\n          y = as[1],\n          mod;\n\n      function set(t) {\n        const xy = proj([lon(t), lat(t)]);\n\n        if (xy) {\n          t[x] = xy[0];\n          t[y] = xy[1];\n        } else {\n          t[x] = undefined;\n          t[y] = undefined;\n        }\n      }\n\n      if (_.modified()) {\n        // parameters updated, reflow\n        pulse = pulse.materialize().reflow(true).visit(pulse.SOURCE, set);\n      } else {\n        mod = pulse.modified(lon.fields) || pulse.modified(lat.fields);\n        pulse.visit(mod ? pulse.ADD_MOD : pulse.ADD, set);\n      }\n\n      return pulse.modifies(as);\n    }\n\n  });\n\n  /**\n   * Annotate items with a geopath shape generator.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(number, number): *} params.projection - The cartographic\n   *   projection to apply.\n   * @param {function(object): *} [params.field] - The field with GeoJSON data,\n   *   or null if the tuple itself is a GeoJSON feature.\n   * @param {string} [params.as='shape'] - The output field in which to store\n   *   the generated path data (default 'shape').\n   */\n\n  function GeoShape(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  GeoShape.Definition = {\n    'type': 'GeoShape',\n    'metadata': {\n      'modifies': true,\n      'nomod': true\n    },\n    'params': [{\n      'name': 'projection',\n      'type': 'projection'\n    }, {\n      'name': 'field',\n      'type': 'field',\n      'default': 'datum'\n    }, {\n      'name': 'pointRadius',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'shape'\n    }]\n  };\n  vegaUtil.inherits(GeoShape, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var out = pulse.fork(pulse.ALL),\n          shape = this.value,\n          as = _.as || 'shape',\n          flag = out.ADD;\n\n      if (!shape || _.modified()) {\n        // parameters updated, reset and reflow\n        this.value = shape = shapeGenerator(vegaProjection.getProjectionPath(_.projection), _.field || vegaUtil.field('datum'), _.pointRadius);\n        out.materialize().reflow();\n        flag = out.SOURCE;\n      }\n\n      out.visit(flag, t => t[as] = shape);\n      return out.modifies(as);\n    }\n\n  });\n\n  function shapeGenerator(path, field, pointRadius) {\n    const shape = pointRadius == null ? _ => path(field(_)) : _ => {\n      var prev = path.pointRadius(),\n          value = path.pointRadius(pointRadius)(field(_));\n      path.pointRadius(prev);\n      return value;\n    };\n\n    shape.context = _ => {\n      path.context(_);\n      return shape;\n    };\n\n    return shape;\n  }\n\n  /**\n   * GeoJSON feature generator for creating graticules.\n   * @constructor\n   */\n\n  function Graticule(params) {\n    vegaDataflow.Transform.call(this, [], params);\n    this.generator = d3Geo.geoGraticule();\n  }\n  Graticule.Definition = {\n    'type': 'Graticule',\n    'metadata': {\n      'changes': true,\n      'generates': true\n    },\n    'params': [{\n      'name': 'extent',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'extentMajor',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'extentMinor',\n      'type': 'array',\n      'array': true,\n      'length': 2,\n      'content': {\n        'type': 'number',\n        'array': true,\n        'length': 2\n      }\n    }, {\n      'name': 'step',\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }, {\n      'name': 'stepMajor',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'default': [90, 360]\n    }, {\n      'name': 'stepMinor',\n      'type': 'number',\n      'array': true,\n      'length': 2,\n      'default': [10, 10]\n    }, {\n      'name': 'precision',\n      'type': 'number',\n      'default': 2.5\n    }]\n  };\n  vegaUtil.inherits(Graticule, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      var src = this.value,\n          gen = this.generator,\n          t;\n\n      if (!src.length || _.modified()) {\n        for (const prop in _) {\n          if (vegaUtil.isFunction(gen[prop])) {\n            gen[prop](_[prop]);\n          }\n        }\n      }\n\n      t = gen();\n\n      if (src.length) {\n        pulse.mod.push(vegaDataflow.replace(src[0], t));\n      } else {\n        pulse.add.push(vegaDataflow.ingest(t));\n      }\n\n      src[0] = t;\n      return pulse;\n    }\n\n  });\n\n  /**\n   * Render a heatmap image for input raster grid data.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {function(object): *} [params.field] - The field with raster grid\n   *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n   * @param {string} [params.color] - A constant color value or function for\n   *   individual pixel color. If a function, it will be invoked with an input\n   *   object that includes $x, $y, $value, and $max fields for the grid.\n   * @param {number} [params.opacity] - A constant opacity value or function for\n   *   individual pixel opacity. If a function, it will be invoked with an input\n   *   object that includes $x, $y, $value, and $max fields for the grid.\n   * @param {string} [params.resolve] - The method for resolving maximum values\n   *   across multiple input grids. If 'independent' (the default), maximum\n   *   calculation will be performed separately for each grid. If 'shared',\n   *   a single global maximum will be used for all input grids.\n   * @param {string} [params.as='image'] - The output field in which to store\n   *   the generated bitmap canvas images (default 'image').\n   */\n\n  function Heatmap(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  Heatmap.Definition = {\n    'type': 'heatmap',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'field',\n      'type': 'field'\n    }, {\n      'name': 'color',\n      'type': 'string',\n      'expr': true\n    }, {\n      'name': 'opacity',\n      'type': 'number',\n      'expr': true\n    }, {\n      'name': 'resolve',\n      'type': 'enum',\n      'values': ['shared', 'independent'],\n      'default': 'independent'\n    }, {\n      'name': 'as',\n      'type': 'string',\n      'default': 'image'\n    }]\n  };\n  vegaUtil.inherits(Heatmap, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      if (!pulse.changed() && !_.modified()) {\n        return pulse.StopPropagation;\n      }\n\n      var source = pulse.materialize(pulse.SOURCE).source,\n          shared = _.resolve === 'shared',\n          field = _.field || vegaUtil.identity,\n          opacity = opacity_(_.opacity, _),\n          color = color_(_.color, _),\n          as = _.as || 'image',\n          obj = {\n        $x: 0,\n        $y: 0,\n        $value: 0,\n        $max: shared ? d3Array.max(source.map(t => d3Array.max(field(t).values))) : 0\n      };\n      source.forEach(t => {\n        const v = field(t); // build proxy data object\n\n        const o = vegaUtil.extend({}, t, obj); // set maximum value if not globally shared\n\n        if (!shared) o.$max = d3Array.max(v.values || []); // generate canvas image\n        // optimize color/opacity if not pixel-dependent\n\n        t[as] = toCanvas(v, o, color.dep ? color : vegaUtil.constant(color(o)), opacity.dep ? opacity : vegaUtil.constant(opacity(o)));\n      });\n      return pulse.reflow(true).modifies(as);\n    }\n\n  }); // get image color function\n\n  function color_(color, _) {\n    let f;\n\n    if (vegaUtil.isFunction(color)) {\n      f = obj => d3Color.rgb(color(obj, _));\n\n      f.dep = dependency(color);\n    } else {\n      // default to mid-grey\n      f = vegaUtil.constant(d3Color.rgb(color || '#888'));\n    }\n\n    return f;\n  } // get image opacity function\n\n\n  function opacity_(opacity, _) {\n    let f;\n\n    if (vegaUtil.isFunction(opacity)) {\n      f = obj => opacity(obj, _);\n\n      f.dep = dependency(opacity);\n    } else if (opacity) {\n      f = vegaUtil.constant(opacity);\n    } else {\n      // default to [0, max] opacity gradient\n      f = obj => obj.$value / obj.$max || 0;\n\n      f.dep = true;\n    }\n\n    return f;\n  } // check if function depends on individual pixel data\n\n\n  function dependency(f) {\n    if (!vegaUtil.isFunction(f)) return false;\n    const set = vegaUtil.toSet(vegaUtil.accessorFields(f));\n    return set.$x || set.$y || set.$value || set.$max;\n  } // render raster grid to canvas\n\n\n  function toCanvas(grid, obj, color, opacity) {\n    const n = grid.width,\n          m = grid.height,\n          x1 = grid.x1 || 0,\n          y1 = grid.y1 || 0,\n          x2 = grid.x2 || n,\n          y2 = grid.y2 || m,\n          val = grid.values,\n          value = val ? i => val[i] : vegaUtil.zero,\n          can = vegaCanvas.canvas(x2 - x1, y2 - y1),\n          ctx = can.getContext('2d'),\n          img = ctx.getImageData(0, 0, x2 - x1, y2 - y1),\n          pix = img.data;\n\n    for (let j = y1, k = 0; j < y2; ++j) {\n      obj.$y = j - y1;\n\n      for (let i = x1, r = j * n; i < x2; ++i, k += 4) {\n        obj.$x = i - x1;\n        obj.$value = value(i + r);\n        const v = color(obj);\n        pix[k + 0] = v.r;\n        pix[k + 1] = v.g;\n        pix[k + 2] = v.b;\n        pix[k + 3] = ~~(255 * opacity(obj));\n      }\n    }\n\n    ctx.putImageData(img, 0, 0);\n    return can;\n  }\n\n  /**\n   * Maintains a cartographic projection.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   */\n\n  function Projection(params) {\n    vegaDataflow.Transform.call(this, null, params);\n    this.modified(true); // always treat as modified\n  }\n  vegaUtil.inherits(Projection, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      let proj = this.value;\n\n      if (!proj || _.modified('type')) {\n        this.value = proj = create(_.type);\n        vegaProjection.projectionProperties.forEach(prop => {\n          if (_[prop] != null) set(proj, prop, _[prop]);\n        });\n      } else {\n        vegaProjection.projectionProperties.forEach(prop => {\n          if (_.modified(prop)) set(proj, prop, _[prop]);\n        });\n      }\n\n      if (_.pointRadius != null) proj.path.pointRadius(_.pointRadius);\n      if (_.fit) fit(proj, _);\n      return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n    }\n\n  });\n\n  function fit(proj, _) {\n    const data = collectGeoJSON(_.fit);\n    _.extent ? proj.fitExtent(_.extent, data) : _.size ? proj.fitSize(_.size, data) : 0;\n  }\n\n  function create(type) {\n    const constructor = vegaProjection.projection((type || 'mercator').toLowerCase());\n    if (!constructor) vegaUtil.error('Unrecognized projection type: ' + type);\n    return constructor();\n  }\n\n  function set(proj, key, value) {\n    if (vegaUtil.isFunction(proj[key])) proj[key](value);\n  }\n\n  function collectGeoJSON(data) {\n    data = vegaUtil.array(data);\n    return data.length === 1 ? data[0] : {\n      type: FeatureCollection,\n      features: data.reduce((a, f) => a.concat(featurize(f)), [])\n    };\n  }\n\n  function featurize(f) {\n    return f.type === FeatureCollection ? f.features : vegaUtil.array(f).filter(d => d != null).map(d => d.type === Feature ? d : {\n      type: Feature,\n      geometry: d\n    });\n  }\n\n  exports.contour = Contour;\n  exports.geojson = GeoJSON;\n  exports.geopath = GeoPath;\n  exports.geopoint = GeoPoint;\n  exports.geoshape = GeoShape;\n  exports.graticule = Graticule;\n  exports.heatmap = Heatmap;\n  exports.isocontour = Isocontour;\n  exports.kde2d = KDE2D;\n  exports.projection = Projection;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","d3","vegaDataflow","vegaUtil","d3Array","vegaStatistics","vegaProjection","d3Geo","d3Color","vegaCanvas","noop","contours","values","tz","map","value","contour","polygons","holes","isorings","ring","smooth","i","n","length","area","push","forEach","hole","polygon","x","point","y","contains","j","pi","xi","yi","pj","xj","yj","b","a","c","p","q","r","type","coordinates","callback","stitch","line","start","end","startIndex","dx","endIndex","f","g","fragmentByEnd","fragmentByStart","concat","unshift","t1","cases","t0","dy","t2","t3","smoothLinear","xt","yt","v1","v0","size","contours.size","_","arguments","_0","Math","floor","_1","error","contours.smooth","quantize","k","nice","zero","ex","extent","min","stop","span","step","tickStep","range","Isocontour","params","Transform","call","levels","resolve","t","max","transformPaths","paths","grid","datum","s","scale","translate","isFunction","sx","isNumber","sy","transform","tx","ty","transformPolygon","transformRing","flip","reverse","transformPoint","x1","y1","geometry","radius","bw","data","v","bandwidthNRD","round","sqrt","number","constant","density2D","density","counts","rx","bandwidth","ry","ox","oy","m","values0","Float32Array","values1","d","weight","blurX","blurY","pow","sum","sz","width","height","x2","y2","one","density.x","density.y","density.weight","density.size","cellSize","density.cellSize","log","LN2","density.bandwidth","array","source","target","w","sr","KDE2D","obj","PARAMS","param","partition","groupby","groups","get","dims","Contour","GeoJSON","GeoPath","initPath","path","pointRadius","prev","context","GeoPoint","GeoShape","shapeGenerator","field","shape","shape.context","Graticule","generator","geoGraticule","Heatmap","color_","color","rgb","dep","dependency","opacity_","opacity","$value","$max","set","toSet","accessorFields","$x","$y","toCanvas","val","can","canvas","ctx","getContext","img","getImageData","pix","putImageData","Projection","modified","fit","proj","collectGeoJSON","fitExtent","fitSize","create","constructor","projection","toLowerCase","FeatureCollection","features","reduce","featurize","filter","Feature","Definition","inherits","pulse","changed","StopPropagation","out","fork","NO_SOURCE","NO_FIELDS","materialize","SOURCE","identity","thresholds","as","isArray","rederive","ingest","rem","add","vals","names","accessorName","kde","thresh","count","post","_features","points","_points","fields","lon","lat","geojson","flag","ADD","mod","REM","visit","MultiPoint","ALL","getProjectionPath","reflow","ADD_MOD","modifies","xy","undefined","src","gen","prop","replace","shared","o","extend","projectionProperties","geopath","geopoint","geoshape","graticule","heatmap","isocontour","kde2d","Object","defineProperty"]
}
