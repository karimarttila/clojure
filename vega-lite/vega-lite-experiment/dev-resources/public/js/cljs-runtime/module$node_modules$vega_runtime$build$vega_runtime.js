shadow$provide.module$node_modules$vega_runtime$build$vega_runtime=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$vega_util$build$vega_util"),require("module$node_modules$vega_dataflow$build$vega_dataflow")):"function"===typeof define&&define.amd?define(["exports","vega-util","vega-dataflow"],factory):(global="undefined"!==typeof globalThis?globalThis:
global||self,factory(global.vega={},global.vega,global.vega))})(this,function(exports,vegaUtil,vegaDataflow){function expression(ctx,args,code){";"!==code[code.length-1]&&(code="return("+code+");");args=Function.apply(null,$jscomp.arrayFromIterable(args.concat(code)));return ctx&&ctx.functions?args.bind(ctx.functions):args}function parseParameter(spec,ctx,params){if(!spec||!vegaUtil.isObject(spec))return spec;for(var i=0,n=PARSERS.length,p;i<n;++i)if(p=PARSERS[i],vegaUtil.hasOwnProperty(spec,p.key))return p.parse(spec,
ctx,params);return spec}function Context(df,transforms,functions,expr){this.dataflow=df;this.transforms=transforms;this.events=df.events.bind(df);this.expr=expr||expressionCodegen;this.signals={};this.scales={};this.nodes={};this.data={};this.fn={};functions&&(this.functions=Object.create(functions),this.functions.context=this)}function Subcontext(ctx){this.dataflow=ctx.dataflow;this.transforms=ctx.transforms;this.events=ctx.events;this.expr=ctx.expr;this.signals=Object.create(ctx.signals);this.scales=
Object.create(ctx.scales);this.nodes=Object.create(ctx.nodes);this.data=Object.create(ctx.data);this.fn=Object.create(ctx.fn);ctx.functions&&(this.functions=Object.create(ctx.functions),this.functions.context=this)}var Skip=vegaUtil.toSet(["rule"]),Swap=vegaUtil.toSet(["group","image","rect"]),expressionCodegen={operator:function(ctx,expr){return expression(ctx,["_"],expr.code)},parameter:function(ctx,expr){return expression(ctx,["datum","_"],expr.code)},event:function(ctx,expr){return expression(ctx,
["event"],expr.code)},handler:function(ctx,expr){return expression(ctx,["_","event"],"var datum\x3devent.item\x26\x26event.item.datum;return "+expr.code+";")},encode:function(ctx,encode){var marktype=encode.marktype;encode=encode.channels;var code="var o\x3ditem,datum\x3do.datum,m\x3d0,$;";for(name in encode){var o="o["+vegaUtil.stringValue(name)+"]";code+="$\x3d"+encode[name].code+";if("+o+"!\x3d\x3d$)"+o+"\x3d$,m\x3d1;"}var name="";Skip[marktype]||(encode.x2&&(encode.x?(Swap[marktype]&&(name+="if(o.x\x3eo.x2)$\x3do.x,o.x\x3do.x2,o.x2\x3d$;"),
name+="o.width\x3do.x2-o.x;"):name+="o.x\x3do.x2-(o.width||0);"),encode.xc&&(name+="o.x\x3do.xc-(o.width||0)/2;"),encode.y2&&(encode.y?(Swap[marktype]&&(name+="if(o.y\x3eo.y2)$\x3do.y,o.y\x3do.y2,o.y2\x3d$;"),name+="o.height\x3do.y2-o.y;"):name+="o.y\x3do.y2-(o.height||0);"),encode.yc&&(name+="o.y\x3do.yc-(o.height||0)/2;"));code+=name;return expression(ctx,["item","_"],code+"return m;")},codegen:{get:function(path){path="["+path.map(vegaUtil.stringValue).join("][")+"]";var get=Function("_","return _"+
path+";");get.path=path;return get},comparator:function(fields,orders){var t;fields=Function("a","b","var u, v; return "+fields.map(function(f,i){var o=orders[i];if(f.path){var u="a"+f.path;f="b"+f.path}else(t=t||{})["f"+i]=f,u="this.f"+i+"(a)",f="this.f"+i+"(b)";i=-o;return"((u \x3d "+u+") \x3c (v \x3d "+f+") || u \x3d\x3d null) \x26\x26 v !\x3d null ? "+i+"\n  : (u \x3e v || v \x3d\x3d null) \x26\x26 u !\x3d null ? "+o+"\n  : ((v \x3d v instanceof Date ? +v : v), (u \x3d u instanceof Date ? +u : u)) !\x3d\x3d u \x26\x26 v \x3d\x3d\x3d v ? "+
i+"\n  : v !\x3d\x3d v \x26\x26 u \x3d\x3d\x3d u ? "+o+" : "}).join("")+"0;");return t?fields.bind(t):fields}}},PARSERS=[{key:"$ref",parse:function(_,ctx){return ctx.get(_.$ref)||vegaUtil.error("Operator not defined: "+_.$ref)}},{key:"$key",parse:function(_,ctx){var k="k:"+_.$key+"_"+!!_.$flat;return ctx.fn[k]||(ctx.fn[k]=vegaUtil.key(_.$key,_.$flat,ctx.expr.codegen))}},{key:"$expr",parse:function(_,ctx,params){_.$params&&ctx.parseParameters(_.$params,params);params="e:"+_.$expr.code+"_"+_.$name;
return ctx.fn[params]||(ctx.fn[params]=vegaUtil.accessor(ctx.parameterExpression(_.$expr),_.$fields,_.$name))}},{key:"$field",parse:function(_,ctx){if(!_.$field)return null;var k="f:"+_.$field+"_"+_.$name;return ctx.fn[k]||(ctx.fn[k]=vegaUtil.field(_.$field,_.$name,ctx.expr.codegen))}},{key:"$encode",parse:function(_,ctx){_=_.$encode;var encode={},name;for(name in _){var enc=_[name];encode[name]=vegaUtil.accessor(ctx.encodeExpression(enc.$expr),enc.$fields);encode[name].output=enc.$output}return encode}},
{key:"$compare",parse:function(_$jscomp$0,ctx){var k="c:"+_$jscomp$0.$compare+"_"+_$jscomp$0.$order,c=vegaUtil.array(_$jscomp$0.$compare).map(function(_){return _&&_.$tupleid?vegaDataflow.tupleid:_});return ctx.fn[k]||(ctx.fn[k]=vegaUtil.compare(c,_$jscomp$0.$order,ctx.expr.codegen))}},{key:"$context",parse:function(_,ctx){return ctx}},{key:"$subflow",parse:function(_,ctx){var spec=_.$subflow;return function(dataflow,key,parent){var subctx=ctx.fork().parse(spec);dataflow=subctx.get(spec.operators[0].id);
(key=subctx.signals.parent)&&key.set(parent);dataflow.detachSubflow=function(){return ctx.detach(subctx)};return dataflow}}},{key:"$tupleid",parse:function(){return vegaDataflow.tupleid}}],SKIP={skip:!0};Context.prototype=Subcontext.prototype={fork:function(){var ctx=new Subcontext(this);(this.subcontext||(this.subcontext=[])).push(ctx);return ctx},detach:function(ctx){this.subcontext=this.subcontext.filter(function(c){return c!==ctx});for(var keys=Object.keys(ctx.nodes),$jscomp$iter$319=$jscomp.makeIterator(keys),
$jscomp$key$key=$jscomp$iter$319.next();!$jscomp$key$key.done;$jscomp$key$key=$jscomp$iter$319.next())ctx.nodes[$jscomp$key$key.value]._targets=null;keys=$jscomp.makeIterator(keys);for($jscomp$key$key=keys.next();!$jscomp$key$key.done;$jscomp$key$key=keys.next())ctx.nodes[$jscomp$key$key.value].detach();ctx.nodes=null},get:function(id){return this.nodes[id]},set:function(id,node){return this.nodes[id]=node},add:function(spec,op){var ctx=this,df=ctx.dataflow,data=spec.value;ctx.set(spec.id,op);"collect"===
(spec.type+"").toLowerCase()&&data&&(data.$ingest?df.ingest(op,data.$ingest,data.$format):data.$request?df.preload(op,data.$request,data.$format):df.pulse(op,df.changeset().insert(data)));spec.root&&(ctx.root=op);if(spec.parent){var p=ctx.get(spec.parent.$ref);p?(df.connect(p,[op]),op.targets().add(p)):(ctx.unresolved=ctx.unresolved||[]).push(function(){p=ctx.get(spec.parent.$ref);df.connect(p,[op]);op.targets().add(p)})}spec.signal&&(ctx.signals[spec.signal]=op);spec.scale&&(ctx.scales[spec.scale]=
op);if(spec.data){data={};for(var name in spec.data)data.$jscomp$loop$prop$data$743$1654=ctx.data[name]||(ctx.data[name]={}),spec.data[name].forEach(function($jscomp$loop$1653){return function(role){return $jscomp$loop$1653.$jscomp$loop$prop$data$743$1654[role]=op}}(data)),data={$jscomp$loop$prop$data$743$1654:data.$jscomp$loop$prop$data$743$1654}}},resolve:function(){(this.unresolved||[]).forEach(function(fn){return fn()});delete this.unresolved;return this},operator:function(spec,update){this.add(spec,
this.dataflow.add(spec.value,update))},transform:function(spec,type){this.add(spec,this.dataflow.add(this.transforms[(type+"").toLowerCase()]))},stream:function(spec,stream){this.set(spec.id,stream)},update:function(spec,stream,target,update,params){this.dataflow.on(stream,target,update,params,spec.options)},operatorExpression:function(expr){return this.expr.operator(this,expr)},parameterExpression:function(expr){return this.expr.parameter(this,expr)},eventExpression:function(expr){return this.expr.event(this,
expr)},handlerExpression:function(expr){return this.expr.handler(this,expr)},encodeExpression:function(encode){return this.expr.encode(this,encode)},parse:function(spec){var ctx=this,operators=spec.operators||[];spec.background&&(ctx.background=spec.background);spec.eventConfig&&(ctx.eventConfig=spec.eventConfig);spec.locale&&(ctx.locale=spec.locale);operators.forEach(function(entry){return ctx.parseOperator(entry)});operators.forEach(function(entry){return ctx.parseOperatorParameters(entry)});(spec.streams||
[]).forEach(function(entry){return ctx.parseStream(entry)});(spec.updates||[]).forEach(function(entry){return ctx.parseUpdate(entry)});return ctx.resolve()},parseOperator:function(spec){"operator"!==(spec.type+"").toLowerCase()&&spec.type?this.transform(spec,spec.type):this.operator(spec,spec.update?this.operatorExpression(spec.update):null)},parseOperatorParameters:function(spec){if(spec.params){var op=this.get(spec.id);op||vegaUtil.error("Invalid operator id: "+spec.id);this.dataflow.connect(op,
op.parameters(this.parseParameters(spec.params),spec.react,spec.initonly))}},parseParameters:function(spec,params){params=params||{};var ctx=this,key;for(key in spec){var value=spec[key];params[key]=vegaUtil.isArray(value)?value.map(function(v){return parseParameter(v,ctx,params)}):parseParameter(value,ctx,params)}return params},parseStream:function(spec){var ctx=this,filter=null!=spec.filter?ctx.eventExpression(spec.filter):void 0,stream=null!=spec.stream?ctx.get(spec.stream):void 0;if(spec.source)stream=
ctx.events(spec.source,spec.type,filter);else if(spec.merge){var args=spec.merge.map(function(_){return ctx.get(_)});stream=args[0].merge.apply(args[0],args.slice(1))}spec.between&&(args=spec.between.map(function(_){return ctx.get(_)}),stream=stream.between(args[0],args[1]));spec.filter&&(stream=stream.filter(filter));null!=spec.throttle&&(stream=stream.throttle(+spec.throttle));null!=spec.debounce&&(stream=stream.debounce(+spec.debounce));null==stream&&vegaUtil.error("Invalid stream definition: "+
JSON.stringify(spec));spec.consume&&stream.consume(!0);ctx.stream(spec,stream)},parseUpdate:function(spec){var srcid=vegaUtil.isObject(srcid=spec.source)?srcid.$ref:srcid;srcid=this.get(srcid);var update=spec.update,params=void 0;srcid||vegaUtil.error("Source not defined: "+spec.source);var target=spec.target&&spec.target.$expr?this.eventExpression(spec.target.$expr):this.get(spec.target);update&&update.$expr&&(update.$params&&(params=this.parseParameters(update.$params)),update=this.handlerExpression(update.$expr));
this.update(spec,srcid,target,update,params)},getState:function(options){var ctx$jscomp$0=this,state={};if(options.signals){var signals=state.signals={};Object.keys(ctx$jscomp$0.signals).forEach(function(key){var op=ctx$jscomp$0.signals[key];options.signals(key,op)&&(signals[key]=op.value)})}if(options.data){var data=state.data={};Object.keys(ctx$jscomp$0.data).forEach(function(key){var dataset=ctx$jscomp$0.data[key];options.data(key,dataset)&&(data[key]=dataset.input.value)})}ctx$jscomp$0.subcontext&&
!1!==options.recurse&&(state.subcontext=ctx$jscomp$0.subcontext.map(function(ctx){return ctx.getState(options)}));return state},setState:function(state){var ctx=this,df=ctx.dataflow,data=state.data,signals=state.signals;Object.keys(signals||{}).forEach(function(key){df.update(ctx.signals[key],signals[key],SKIP)});Object.keys(data||{}).forEach(function(key){df.pulse(ctx.data[key].input,df.changeset().remove(vegaUtil.truthy).insert(data[key]))});(state.subcontext||[]).forEach(function(substate,i){(i=
ctx.subcontext[i])&&i.setState(substate)})}};exports.context=function(df,transforms,functions,expr){return new Context(df,transforms,functions,expr)};Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$vega_runtime$build$vega_runtime.js.map
