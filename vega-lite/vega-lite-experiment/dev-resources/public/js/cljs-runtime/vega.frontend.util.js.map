{"version":3,"sources":["vega/frontend/util.cljs"],"mappings":";AAOA,AAAA;;;AAAA,AAAAA,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAEFE;AAFJ,AAES,AAAA,AAACC,AAAKD;;;AAFf,AAAA,AAAA,AAAMF,AAGFE,AAAIE;AAHR,AAIG,AAAMC,AAAI,AAAID,AACF,AAAA,AAAKF,AAASE,AACdF;AAFZ,AAGE,AAACI,AAAeD;;;AAPrB,AAAA,AAAA,AAAML;;AAAN,AASA,AAAA,AAAKO;AAGL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAMC;AAAN,AAEE,AAAMC,AAAK,AAAA,AAAOF;AACZG,AAAK,AAAA,AAAOH;AACZI,AAAI,AAAA,AAAA,AAAeF,AAASC;AAFlC,AAGEC;;AAEJ;;;AAAA,AAAMC,AAEHT;AAFH,AAGE,AAAIG;AAAJ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAI4B,AAAAO,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAC;AAAAC,AAAAC;AAAAC,AAAA;AAAAC,AAAA,AAAAC;AAAA,AAAA,AAAAR,AAAAQ;;AAAA,AAAA,AAAAL,AAAAG;;AAAA,AAAAD,AAAAE;;AAAA,AAAA,AAAc,AAACE,AAAmBnB;AAAlC,AAAA,AAAAe,AAAAD;;AAAA,AAAAD,AAAAD;;AAAA,AAAAF;;;AAJ5B","names":["var_args","G__80746","vega.frontend.util/clog","js/Error","msg","vega.frontend.util.clog","data","buf","js/console.log","vega.frontend.util/debug","vega.frontend.util/backend-host-config","vega.frontend.util/get-base-url","host","port","url","vega.frontend.util/debug-panel","sb__4667__auto__","goog.string/StringBuffer","*print-newline*-orig-val__80768","cljs.core/*print-newline*","*print-fn*-orig-val__80769","cljs.core/*print-fn*","*print-newline*-temp-val__80770","*print-fn*-temp-val__80771","x__4668__auto__","cljs.pprint.pprint"],"sourcesContent":["(ns vega.frontend.util\n  (:require [re-frame.core :as re-frame]\n            [cljs.pprint]\n            [reagent.core :as r]\n    ;[hashp.core :include-macros true]\n            ))\n\n(defn clog\n  \"Javascript console logger helper.\"\n  ([msg] (clog msg nil))\n  ([msg data]\n   (let [buf (if data\n               (str msg \": \" data)\n               msg)]\n     (js/console.log buf))))\n\n(def debug true)\n\n;; Application wide properties.\n(def backend-host-config {:host \"localhost\" :port 7501})\n\n\n(defn get-base-url\n  []\n  (let [host (:host backend-host-config)\n        port (:port backend-host-config)\n        url (str \"http://\" host \":\" port)]\n    url))\n\n(defn debug-panel\n  \"Debug panel - you can use this panel in any view to show some page specific debug data.\"\n  [data]\n  (if debug\n    [:div.e-debug-panel\n     [:hr.e-debug-panel.hr]\n     [:h3.e-debug-panel.header \"DEBUG-PANEL\"]\n     [:pre.e-debug-panel.body (with-out-str (cljs.pprint/pprint data))]]))\n\n\n"]}