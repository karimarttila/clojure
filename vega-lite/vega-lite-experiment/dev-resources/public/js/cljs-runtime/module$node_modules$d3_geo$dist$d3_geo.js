shadow$provide.module$node_modules$d3_geo$dist$d3_geo=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$d3_array$dist$d3_array")):"function"===typeof define&&define.amd?define(["exports","d3-array"],factory):(global=global||self,factory(global.d3=global.d3||{},global.d3))})(this,function(exports,d3Array){function acos(x){return 1<x?0:-1>x?pi:Math.acos(x)}
function asin(x){return 1<x?halfPi:-1>x?-halfPi:Math.asin(x)}function haversin(x){return(x=sin(x/2))*x}function noop(){}function streamGeometry(geometry,stream){if(geometry&&streamGeometryType.hasOwnProperty(geometry.type))streamGeometryType[geometry.type](geometry,stream)}function streamLine(coordinates,stream,closed){var i=-1;closed=coordinates.length-closed;for(stream.lineStart();++i<closed;){var coordinate=coordinates[i];stream.point(coordinate[0],coordinate[1],coordinate[2])}stream.lineEnd()}
function streamPolygon(coordinates,stream){var i=-1,n=coordinates.length;for(stream.polygonStart();++i<n;)streamLine(coordinates[i],stream,1);stream.polygonEnd()}function geoStream(object,stream){if(object&&streamObjectType.hasOwnProperty(object.type))streamObjectType[object.type](object,stream);else streamGeometry(object,stream)}function areaRingStart(){areaStream.point=areaPointFirst}function areaRingEnd(){areaPoint(lambda00,phi00)}function areaPointFirst(lambda,phi){areaStream.point=areaPoint;
lambda00=lambda;phi00=phi;lambda*=radians;phi*=radians;lambda0=lambda;cosPhi0=cos(phi=phi/2+quarterPi);sinPhi0=sin(phi)}function areaPoint(lambda,phi){lambda*=radians;phi*=radians;phi=phi/2+quarterPi;var dLambda=lambda-lambda0,sdLambda=0<=dLambda?1:-1,adLambda=sdLambda*dLambda;dLambda=cos(phi);phi=sin(phi);var k=sinPhi0*phi,u=cosPhi0*dLambda+k*cos(adLambda);sdLambda=k*sdLambda*sin(adLambda);areaRingSum.add(atan2(sdLambda,u));lambda0=lambda;cosPhi0=dLambda;sinPhi0=phi}function spherical(cartesian){return[atan2(cartesian[1],
cartesian[0]),asin(cartesian[2])]}function cartesian(spherical){var lambda=spherical[0];spherical=spherical[1];var cosPhi=cos(spherical);return[cosPhi*cos(lambda),cosPhi*sin(lambda),sin(spherical)]}function cartesianDot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function cartesianCross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]}function cartesianAddInPlace(a,b){a[0]+=b[0];a[1]+=b[1];a[2]+=b[2]}function cartesianScale(vector,k){return[vector[0]*k,vector[1]*k,vector[2]*
k]}function cartesianNormalizeInPlace(d){var l=sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);d[0]/=l;d[1]/=l;d[2]/=l}function boundsPoint(lambda,phi){ranges.push(range$jscomp$0=[lambda0$1=lambda,lambda1=lambda]);phi<phi0&&(phi0=phi);phi>phi1&&(phi1=phi)}function linePoint(lambda,phi){var p=cartesian([lambda*radians,phi*radians]);if(p0$jscomp$0){var normal=cartesianCross(p0$jscomp$0,p);normal=cartesianCross([normal[1],-normal[0],0],normal);cartesianNormalizeInPlace(normal);normal=spherical(normal);var delta=
lambda-lambda2,sign=0<delta?1:-1,lambdai=normal[0]*degrees*sign;delta=180<abs(delta);delta^(sign*lambda2<lambdai&&lambdai<sign*lambda)?(normal=normal[1]*degrees,normal>phi1&&(phi1=normal)):(lambdai=(lambdai+360)%360-180,delta^(sign*lambda2<lambdai&&lambdai<sign*lambda))?(normal=-normal[1]*degrees,normal<phi0&&(phi0=normal)):(phi<phi0&&(phi0=phi),phi>phi1&&(phi1=phi));delta?lambda<lambda2?angle$jscomp$0(lambda0$1,lambda)>angle$jscomp$0(lambda0$1,lambda1)&&(lambda1=lambda):angle$jscomp$0(lambda,lambda1)>
angle$jscomp$0(lambda0$1,lambda1)&&(lambda0$1=lambda):lambda1>=lambda0$1?(lambda<lambda0$1&&(lambda0$1=lambda),lambda>lambda1&&(lambda1=lambda)):lambda>lambda2?angle$jscomp$0(lambda0$1,lambda)>angle$jscomp$0(lambda0$1,lambda1)&&(lambda1=lambda):angle$jscomp$0(lambda,lambda1)>angle$jscomp$0(lambda0$1,lambda1)&&(lambda0$1=lambda)}else ranges.push(range$jscomp$0=[lambda0$1=lambda,lambda1=lambda]);phi<phi0&&(phi0=phi);phi>phi1&&(phi1=phi);p0$jscomp$0=p;lambda2=lambda}function boundsLineStart(){boundsStream.point=
linePoint}function boundsLineEnd(){range$jscomp$0[0]=lambda0$1;range$jscomp$0[1]=lambda1;boundsStream.point=boundsPoint;p0$jscomp$0=null}function boundsRingPoint(lambda,phi){if(p0$jscomp$0){var delta=lambda-lambda2;deltaSum.add(180<abs(delta)?delta+(0<delta?360:-360):delta)}else lambda00$1=lambda,phi00$1=phi;areaStream.point(lambda,phi);linePoint(lambda,phi)}function boundsRingStart(){areaStream.lineStart()}function boundsRingEnd(){boundsRingPoint(lambda00$1,phi00$1);areaStream.lineEnd();1E-6<abs(deltaSum)&&
(lambda0$1=-(lambda1=180));range$jscomp$0[0]=lambda0$1;range$jscomp$0[1]=lambda1;p0$jscomp$0=null}function angle$jscomp$0(lambda0,lambda1){return 0>(lambda1-=lambda0)?lambda1+360:lambda1}function rangeCompare(a,b){return a[0]-b[0]}function rangeContains(range,x){return range[0]<=range[1]?range[0]<=x&&x<=range[1]:x<range[0]||range[1]<x}function centroidPoint(lambda,phi){lambda*=radians;phi*=radians;var cosPhi=cos(phi);centroidPointCartesian(cosPhi*cos(lambda),cosPhi*sin(lambda),sin(phi))}function centroidPointCartesian(x,
y,z){++W0;X0+=(x-X0)/W0;Y0+=(y-Y0)/W0;Z0+=(z-Z0)/W0}function centroidLineStart(){centroidStream.point=centroidLinePointFirst}function centroidLinePointFirst(lambda,phi){lambda*=radians;phi*=radians;var cosPhi=cos(phi);x0$jscomp$0=cosPhi*cos(lambda);y0$jscomp$0=cosPhi*sin(lambda);z0=sin(phi);centroidStream.point=centroidLinePoint;centroidPointCartesian(x0$jscomp$0,y0$jscomp$0,z0)}function centroidLinePoint(lambda,phi){lambda*=radians;phi*=radians;var cosPhi=cos(phi),x=cosPhi*cos(lambda);lambda=cosPhi*
sin(lambda);phi=sin(phi);var w=atan2(sqrt((w=y0$jscomp$0*phi-z0*lambda)*w+(w=z0*x-x0$jscomp$0*phi)*w+(w=x0$jscomp$0*lambda-y0$jscomp$0*x)*w),x0$jscomp$0*x+y0$jscomp$0*lambda+z0*phi);W1+=w;X1+=w*(x0$jscomp$0+(x0$jscomp$0=x));Y1+=w*(y0$jscomp$0+(y0$jscomp$0=lambda));Z1+=w*(z0+(z0=phi));centroidPointCartesian(x0$jscomp$0,y0$jscomp$0,z0)}function centroidLineEnd(){centroidStream.point=centroidPoint}function centroidRingStart(){centroidStream.point=centroidRingPointFirst}function centroidRingEnd(){centroidRingPoint(lambda00$2,
phi00$2);centroidStream.point=centroidPoint}function centroidRingPointFirst(lambda,phi){lambda00$2=lambda;phi00$2=phi;lambda*=radians;phi*=radians;centroidStream.point=centroidRingPoint;var cosPhi=cos(phi);x0$jscomp$0=cosPhi*cos(lambda);y0$jscomp$0=cosPhi*sin(lambda);z0=sin(phi);centroidPointCartesian(x0$jscomp$0,y0$jscomp$0,z0)}function centroidRingPoint(lambda,phi){lambda*=radians;phi*=radians;var cosPhi=cos(phi),x=cosPhi*cos(lambda);lambda=cosPhi*sin(lambda);phi=sin(phi);cosPhi=y0$jscomp$0*phi-
z0*lambda;var cy=z0*x-x0$jscomp$0*phi,cz=x0$jscomp$0*lambda-y0$jscomp$0*x,m=hypot(cosPhi,cy,cz),w=asin(m);m=m&&-w/m;X2.add(m*cosPhi);Y2.add(m*cy);Z2.add(m*cz);W1+=w;X1+=w*(x0$jscomp$0+(x0$jscomp$0=x));Y1+=w*(y0$jscomp$0+(y0$jscomp$0=lambda));Z1+=w*(z0+(z0=phi));centroidPointCartesian(x0$jscomp$0,y0$jscomp$0,z0)}function constant(x){return function(){return x}}function compose(a,b){function compose(x,y){return x=a(x,y),b(x[0],x[1])}a.invert&&b.invert&&(compose.invert=function(x,y){return x=b.invert(x,
y),x&&a.invert(x[0],x[1])});return compose}function rotationIdentity(lambda,phi){return[abs(lambda)>pi?lambda+Math.round(-lambda/tau)*tau:lambda,phi]}function rotateRadians(deltaLambda,deltaPhi,deltaGamma){return(deltaLambda%=tau)?deltaPhi||deltaGamma?compose(rotationLambda(deltaLambda),rotationPhiGamma(deltaPhi,deltaGamma)):rotationLambda(deltaLambda):deltaPhi||deltaGamma?rotationPhiGamma(deltaPhi,deltaGamma):rotationIdentity}function forwardRotationLambda(deltaLambda){return function(lambda,phi){return lambda+=
deltaLambda,[lambda>pi?lambda-tau:lambda<-pi?lambda+tau:lambda,phi]}}function rotationLambda(deltaLambda){var rotation=forwardRotationLambda(deltaLambda);rotation.invert=forwardRotationLambda(-deltaLambda);return rotation}function rotationPhiGamma(deltaPhi,deltaGamma){function rotation(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi;lambda=sin(lambda)*cosPhi;phi=sin(phi);cosPhi=phi*cosDeltaPhi+x*sinDeltaPhi;return[atan2(lambda*cosDeltaGamma-cosPhi*sinDeltaGamma,x*cosDeltaPhi-phi*sinDeltaPhi),
asin(cosPhi*cosDeltaGamma+lambda*sinDeltaGamma)]}var cosDeltaPhi=cos(deltaPhi),sinDeltaPhi=sin(deltaPhi),cosDeltaGamma=cos(deltaGamma),sinDeltaGamma=sin(deltaGamma);rotation.invert=function(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi;lambda=sin(lambda)*cosPhi;phi=sin(phi);cosPhi=phi*cosDeltaGamma-lambda*sinDeltaGamma;return[atan2(lambda*cosDeltaGamma+phi*sinDeltaGamma,x*cosDeltaPhi+cosPhi*sinDeltaPhi),asin(cosPhi*cosDeltaPhi-x*sinDeltaPhi)]};return rotation}function rotation$jscomp$0(rotate){function forward(coordinates){coordinates=
rotate(coordinates[0]*radians,coordinates[1]*radians);return coordinates[0]*=degrees,coordinates[1]*=degrees,coordinates}rotate=rotateRadians(rotate[0]*radians,rotate[1]*radians,2<rotate.length?rotate[2]*radians:0);forward.invert=function(coordinates){coordinates=rotate.invert(coordinates[0]*radians,coordinates[1]*radians);return coordinates[0]*=degrees,coordinates[1]*=degrees,coordinates};return forward}function circleStream(stream,radius,delta,direction,t0,t1){if(delta){var cosRadius=cos(radius),
sinRadius=sin(radius);delta*=direction;if(null==t0)t0=radius+direction*tau,t1=radius-delta/2;else if(t0=circleRadius(cosRadius,t0),t1=circleRadius(cosRadius,t1),0<direction?t0<t1:t0>t1)t0+=direction*tau;for(;0<direction?t0>t1:t0<t1;t0-=delta)radius=spherical([cosRadius,-sinRadius*cos(t0),-sinRadius*sin(t0)]),stream.point(radius[0],radius[1])}}function circleRadius(cosRadius,point){point=cartesian(point);point[0]-=cosRadius;cartesianNormalizeInPlace(point);cosRadius=acos(-point[1]);return((0>-point[2]?
-cosRadius:cosRadius)+tau-1E-6)%tau}function clipBuffer(){var lines=[],line;return{point:function(x,y,m){line.push([x,y,m])},lineStart:function(){lines.push(line=[])},lineEnd:noop,rejoin:function(){1<lines.length&&lines.push(lines.pop().concat(lines.shift()))},result:function(){var result=lines;lines=[];line=null;return result}}}function pointEqual(a,b){return 1E-6>abs(a[0]-b[0])&&1E-6>abs(a[1]-b[1])}function Intersection(point,points,other,entry){this.x=point;this.z=points;this.o=other;this.e=entry;
this.v=!1;this.n=this.p=null}function clipRejoin(segments,compareIntersection,startInside,interpolate,stream){var subject=[],clip=[];segments.forEach(function(segment){if(!(0>=(n=segment.length-1))){var n,p0=segment[0],p1=segment[n];if(pointEqual(p0,p1)){if(!p0[2]&&!p1[2]){stream.lineStart();for(i=0;i<n;++i)stream.point((p0=segment[i])[0],p0[1]);stream.lineEnd();return}p1[0]+=2E-6}subject.push(n=new Intersection(p0,segment,null,!0));clip.push(n.o=new Intersection(p0,null,n,!1));subject.push(n=new Intersection(p1,
segment,null,!1));clip.push(n.o=new Intersection(p1,null,n,!0))}});if(subject.length){clip.sort(compareIntersection);link(subject);link(clip);var i=0;for(segments=clip.length;i<segments;++i)clip[i].e=startInside=!startInside;startInside=subject[0];for(var point;;){for(var current=startInside,isSubject=!0;current.v;)if((current=current.n)===startInside)return;compareIntersection=current.z;stream.lineStart();do{current.v=current.o.v=!0;if(current.e){if(isSubject)for(i=0,segments=compareIntersection.length;i<
segments;++i)stream.point((point=compareIntersection[i])[0],point[1]);else interpolate(current.x,current.n.x,1,stream);current=current.n}else{if(isSubject)for(compareIntersection=current.p.z,i=compareIntersection.length-1;0<=i;--i)stream.point((point=compareIntersection[i])[0],point[1]);else interpolate(current.x,current.p.x,-1,stream);current=current.p}current=current.o;compareIntersection=current.z;isSubject=!isSubject}while(!current.v);stream.lineEnd()}}}function link(array){if(n=array.length){for(var n,
i=0,a=array[0],b;++i<n;)a.n=b=array[i],b.p=a,a=b;a.n=b=array[0];b.p=a}}function longitude(point){return abs(point[0])<=pi?point[0]:sign$jscomp$0(point[0])*((abs(point[0])+pi)%tau-pi)}function polygonContains(polygon,point){var lambda=longitude(point);point=point[1];var sinPhi=sin(point),normal=[sin(lambda),-cos(lambda),0],angle=0,winding=0,sum=new d3Array.Adder;1===sinPhi?point=halfPi+1E-6:-1===sinPhi&&(point=-halfPi-1E-6);sinPhi=0;for(var n=polygon.length;sinPhi<n;++sinPhi)if(m=(ring=polygon[sinPhi]).length){var ring,
m,point0=ring[m-1],lambda0=longitude(point0),phi0=point0[1]/2+quarterPi,sinPhi0=sin(phi0),cosPhi0=cos(phi0);for(phi0=0;phi0<m;++phi0,lambda0=lambda1,sinPhi0=sinPhi1,cosPhi0=cosPhi1,point0=point1){var point1=ring[phi0],lambda1=longitude(point1);cosPhi1=point1[1]/2+quarterPi;var sinPhi1=sin(cosPhi1),cosPhi1=cos(cosPhi1),delta=lambda1-lambda0,sign=0<=delta?1:-1,absDelta=sign*delta,antimeridian=absDelta>pi;sinPhi0*=sinPhi1;sum.add(atan2(sinPhi0*sign*sin(absDelta),cosPhi0*cosPhi1+sinPhi0*cos(absDelta)));
angle+=antimeridian?delta+sign*tau:delta;antimeridian^lambda0>=lambda^lambda1>=lambda&&(point0=cartesianCross(cartesian(point0),cartesian(point1)),cartesianNormalizeInPlace(point0),lambda0=cartesianCross(normal,point0),cartesianNormalizeInPlace(lambda0),lambda0=(antimeridian^0<=delta?-1:1)*asin(lambda0[2]),point>lambda0||point===lambda0&&(point0[0]||point0[1]))&&(winding+=antimeridian^0<=delta?1:-1)}}return(-1E-6>angle||1E-6>angle&&-1E-12>sum)^winding&1}function clip$jscomp$0(pointVisible,clipLine,
interpolate,start){return function(sink){function point$jscomp$0(lambda,phi){pointVisible(lambda,phi)&&sink.point(lambda,phi)}function pointLine(lambda,phi){line.point(lambda,phi)}function lineStart(){clip.point=pointLine;line.lineStart()}function lineEnd(){clip.point=point$jscomp$0;line.lineEnd()}function pointRing(lambda,phi){ring.push([lambda,phi]);ringSink.point(lambda,phi)}function ringStart(){ringSink.lineStart();ring=[]}function ringEnd(){pointRing(ring[0][0],ring[0][1]);ringSink.lineEnd();
var clean=ringSink.clean(),ringSegments=ringBuffer.result(),n=ringSegments.length,point;ring.pop();polygon.push(ring);ring=null;if(n)if(clean&1){if(n=ringSegments[0],0<(ringSegments=n.length-1)){polygonStarted||(sink.polygonStart(),polygonStarted=!0);sink.lineStart();for(clean=0;clean<ringSegments;++clean)sink.point((point=n[clean])[0],point[1]);sink.lineEnd()}}else 1<n&&clean&2&&ringSegments.push(ringSegments.pop().concat(ringSegments.shift())),segments.push(ringSegments.filter(validSegment))}var line=
clipLine(sink),ringBuffer=clipBuffer(),ringSink=clipLine(ringBuffer),polygonStarted=!1,polygon,segments,ring,clip={point:point$jscomp$0,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function(){clip.point=pointRing;clip.lineStart=ringStart;clip.lineEnd=ringEnd;segments=[];polygon=[]},polygonEnd:function(){clip.point=point$jscomp$0;clip.lineStart=lineStart;clip.lineEnd=lineEnd;segments=d3Array.merge(segments);var startInside=polygonContains(polygon,start);segments.length?(polygonStarted||(sink.polygonStart(),
polygonStarted=!0),clipRejoin(segments,compareIntersection,startInside,interpolate,sink)):startInside&&(polygonStarted||(sink.polygonStart(),polygonStarted=!0),sink.lineStart(),interpolate(null,null,1,sink),sink.lineEnd());polygonStarted&&(sink.polygonEnd(),polygonStarted=!1);segments=polygon=null},sphere:function(){sink.polygonStart();sink.lineStart();interpolate(null,null,1,sink);sink.lineEnd();sink.polygonEnd()}};return clip}}function validSegment(segment){return 1<segment.length}function compareIntersection(a,
b){return(0>(a=a.x)[0]?a[1]-halfPi-1E-6:halfPi-a[1])-(0>(b=b.x)[0]?b[1]-halfPi-1E-6:halfPi-b[1])}function clipCircle(radius){function visible(lambda,phi){return cos(lambda)*cos(phi)>cr}function intersect(a,b,two){var pa=cartesian(a),pb=cartesian(b),n1=[1,0,0];pb=cartesianCross(pa,pb);var n2n2=cartesianDot(pb,pb);pa=pb[0];var determinant=n2n2-pa*pa;if(!determinant)return!two&&a;n2n2=cr*n2n2/determinant;determinant=-cr*pa/determinant;pa=cartesianCross(n1,pb);n1=cartesianScale(n1,n2n2);pb=cartesianScale(pb,
determinant);cartesianAddInPlace(n1,pb);pb=cartesianDot(n1,pa);n2n2=cartesianDot(pa,pa);determinant=pb*pb-n2n2*(cartesianDot(n1,n1)-1);if(!(0>determinant)){var t=sqrt(determinant);determinant=cartesianScale(pa,(-pb-t)/n2n2);cartesianAddInPlace(determinant,n1);determinant=spherical(determinant);if(!two)return determinant;two=a[0];var lambda1=b[0];a=a[1];b=b[1];if(lambda1<two){var z=two;two=lambda1;lambda1=z}var delta=lambda1-two,polar=1E-6>abs(delta-pi);!polar&&b<a&&(z=a,a=b,b=z);if(polar||1E-6>delta?
polar?0<a+b^determinant[1]<(1E-6>abs(determinant[0]-two)?a:b):a<=determinant[1]&&determinant[1]<=b:delta>pi^(two<=determinant[0]&&determinant[0]<=lambda1))return b=cartesianScale(pa,(-pb+t)/n2n2),cartesianAddInPlace(b,n1),[determinant,spherical(b)]}}function code$jscomp$0(lambda,phi){var r=smallRadius?radius:pi-radius,code=0;lambda<-r?code|=1:lambda>r&&(code|=2);phi<-r?code|=4:phi>r&&(code|=8);return code}var cr=cos(radius),delta$jscomp$0=6*radians,smallRadius=0<cr,notHemisphere=1E-6<abs(cr);return clip$jscomp$0(visible,
function(stream){var point0,c0,v0,v00,clean;return{lineStart:function(){v00=v0=!1;clean=1},point:function(lambda,phi){var point1=[lambda,phi],v=visible(lambda,phi);phi=smallRadius?v?0:code$jscomp$0(lambda,phi):v?code$jscomp$0(lambda+(0>lambda?pi:-pi),phi):0;!point0&&(v00=v0=v)&&stream.lineStart();v!==v0&&(lambda=intersect(point0,point1),!lambda||pointEqual(point0,lambda)||pointEqual(point1,lambda))&&(point1[2]=1);if(v!==v0)clean=0,v?(stream.lineStart(),lambda=intersect(point1,point0),stream.point(lambda[0],
lambda[1])):(lambda=intersect(point0,point1),stream.point(lambda[0],lambda[1],2),stream.lineEnd()),point0=lambda;else if(notHemisphere&&point0&&smallRadius^v){var t;phi&c0||!(t=intersect(point1,point0,!0))||(clean=0,smallRadius?(stream.lineStart(),stream.point(t[0][0],t[0][1]),stream.point(t[1][0],t[1][1]),stream.lineEnd()):(stream.point(t[1][0],t[1][1]),stream.lineEnd(),stream.lineStart(),stream.point(t[0][0],t[0][1],3)))}!v||point0&&pointEqual(point0,point1)||stream.point(point1[0],point1[1]);point0=
point1;v0=v;c0=phi},lineEnd:function(){v0&&stream.lineEnd();point0=null},clean:function(){return clean|(v00&&v0)<<1}}},function(from,to,direction,stream){circleStream(stream,radius,delta$jscomp$0,direction,from,to)},smallRadius?[0,-radius]:[-pi,radius-pi])}function clipLine(a,b,x0,y0,x1,y1){var ax=a[0],ay=a[1],t0=0,t1=1,dx=b[0]-ax,dy=b[1]-ay;x0-=ax;if(dx||!(0<x0)){x0/=dx;if(0>dx){if(x0<t0)return;x0<t1&&(t1=x0)}else if(0<dx){if(x0>t1)return;x0>t0&&(t0=x0)}x0=x1-ax;if(dx||!(0>x0)){x0/=dx;if(0>dx){if(x0>
t1)return;x0>t0&&(t0=x0)}else if(0<dx){if(x0<t0)return;x0<t1&&(t1=x0)}x0=y0-ay;if(dy||!(0<x0)){x0/=dy;if(0>dy){if(x0<t0)return;x0<t1&&(t1=x0)}else if(0<dy){if(x0>t1)return;x0>t0&&(t0=x0)}x0=y1-ay;if(dy||!(0>x0)){x0/=dy;if(0>dy){if(x0>t1)return;x0>t0&&(t0=x0)}else if(0<dy){if(x0<t0)return;x0<t1&&(t1=x0)}0<t0&&(a[0]=ax+t0*dx,a[1]=ay+t0*dy);1>t1&&(b[0]=ax+t1*dx,b[1]=ay+t1*dy);return!0}}}}}function clipRectangle(x0,y0,x1,y1){function interpolate(from,to,direction,stream){var a=0,a1=0;if(null==from||(a=
corner(from,direction))!==(a1=corner(to,direction))||0>comparePoint(from,to)^0<direction){do stream.point(0===a||3===a?x0:x1,1<a?y1:y0);while((a=(a+direction+4)%4)!==a1)}else stream.point(to[0],to[1])}function corner(p,direction){return 1E-6>abs(p[0]-x0)?0<direction?0:3:1E-6>abs(p[0]-x1)?0<direction?2:1:1E-6>abs(p[1]-y0)?0<direction?1:0:0<direction?3:2}function compareIntersection(a,b){return comparePoint(a.x,b.x)}function comparePoint(a,b){var ca=corner(a,1),cb=corner(b,1);return ca!==cb?ca-cb:0===
ca?b[1]-a[1]:1===ca?a[0]-b[0]:2===ca?a[1]-b[1]:b[0]-a[0]}return function(stream){function point$jscomp$0(x,y){x0<=x&&x<=x1&&y0<=y&&y<=y1&&activeStream.point(x,y)}function linePoint(x,y){var v=x0<=x&&x<=x1&&y0<=y&&y<=y1;polygon&&ring$jscomp$0.push([x,y]);if(first)x__=x,y__=y,v__=v,first=!1,v&&(activeStream.lineStart(),activeStream.point(x,y));else if(v&&v_)activeStream.point(x,y);else{var a=[x_=Math.max(-1E9,Math.min(1E9,x_)),y_=Math.max(-1E9,Math.min(1E9,y_))],b=[x=Math.max(-1E9,Math.min(1E9,x)),
y=Math.max(-1E9,Math.min(1E9,y))];clipLine(a,b,x0,y0,x1,y1)?(v_||(activeStream.lineStart(),activeStream.point(a[0],a[1])),activeStream.point(b[0],b[1]),v||activeStream.lineEnd(),clean=!1):v&&(activeStream.lineStart(),activeStream.point(x,y),clean=!1)}x_=x;y_=y;v_=v}var activeStream=stream,bufferStream=clipBuffer(),segments,polygon,ring$jscomp$0,x__,y__,v__,x_,y_,v_,first,clean,clipStream={point:point$jscomp$0,lineStart:function(){clipStream.point=linePoint;polygon&&polygon.push(ring$jscomp$0=[]);
first=!0;v_=!1;x_=y_=NaN},lineEnd:function(){segments&&(linePoint(x__,y__),v__&&v_&&bufferStream.rejoin(),segments.push(bufferStream.result()));clipStream.point=point$jscomp$0;v_&&activeStream.lineEnd()},polygonStart:function(){activeStream=bufferStream;segments=[];polygon=[];clean=!0},polygonEnd:function(){for(var startInside,i=startInside=0,n=polygon.length;i<n;++i){var ring=polygon[i],j=1,m=ring.length,point=ring[0],b0=point[0];for(point=point[1];j<m;++j){var a0=b0;var a1=point;point=ring[j];b0=
point[0];point=point[1];a1<=y1?point>y1&&(b0-a0)*(y1-a1)>(point-a1)*(x0-a0)&&++startInside:point<=y1&&(b0-a0)*(y1-a1)<(point-a1)*(x0-a0)&&--startInside}}i=clean&&startInside;n=(segments=d3Array.merge(segments)).length;if(i||n)stream.polygonStart(),i&&(stream.lineStart(),interpolate(null,null,1,stream),stream.lineEnd()),n&&clipRejoin(segments,compareIntersection,startInside,interpolate,stream),stream.polygonEnd();activeStream=stream;segments=polygon=ring$jscomp$0=null}};return clipStream}}function lengthLineEnd(){lengthStream.point=
lengthStream.lineEnd=noop}function lengthPointFirst(lambda,phi){lambda*=radians;phi*=radians;lambda0$2=lambda;sinPhi0$1=sin(phi);cosPhi0$1=cos(phi);lengthStream.point=lengthPoint}function lengthPoint(lambda,phi){lambda*=radians;phi*=radians;var sinPhi=sin(phi);phi=cos(phi);var delta=abs(lambda-lambda0$2),cosDelta=cos(delta);delta=sin(delta);delta*=phi;var y=cosPhi0$1*sinPhi-sinPhi0$1*phi*cosDelta;cosDelta=sinPhi0$1*sinPhi+cosPhi0$1*phi*cosDelta;lengthSum.add(atan2(sqrt(delta*delta+y*y),cosDelta));
lambda0$2=lambda;sinPhi0$1=sinPhi;cosPhi0$1=phi}function length$jscomp$0(object){lengthSum=new d3Array.Adder;geoStream(object,lengthStream);return+lengthSum}function distance(a,b){coordinates$jscomp$0[0]=a;coordinates$jscomp$0[1]=b;return length$jscomp$0(object$jscomp$0)}function containsGeometry(geometry,point){return geometry&&containsGeometryType.hasOwnProperty(geometry.type)?containsGeometryType[geometry.type](geometry,point):!1}function containsLine(coordinates,point){for(var ao,bo,ab,i=0,n=
coordinates.length;i<n;i++){bo=distance(coordinates[i],point);if(0===bo||0<i&&(ab=distance(coordinates[i],coordinates[i-1]),0<ab&&ao<=ab&&bo<=ab&&(ao+bo-ab)*(1-Math.pow((ao-bo)/ab,2))<1E-12*ab))return!0;ao=bo}return!1}function containsPolygon(coordinates,point){return!!polygonContains(coordinates.map(ringRadians),pointRadians(point))}function ringRadians(ring){return ring=ring.map(pointRadians),ring.pop(),ring}function pointRadians(point){return[point[0]*radians,point[1]*radians]}function graticuleX(y0,
y1,dy){var y$jscomp$0=d3Array.range(y0,y1-1E-6,dy).concat(y1);return function(x){return y$jscomp$0.map(function(y){return[x,y]})}}function graticuleY(x0,x1,dx){var x$jscomp$0=d3Array.range(x0,x1-1E-6,dx).concat(x1);return function(y){return x$jscomp$0.map(function(x){return[x,y]})}}function graticule(){function graticule(){return{type:"MultiLineString",coordinates:lines()}}function lines(){return d3Array.range(ceil(X0/DX)*DX,X1,DX).map(X).concat(d3Array.range(ceil(Y0/DY)*DY,Y1,DY).map(Y)).concat(d3Array.range(ceil(x0/
dx)*dx,x1,dx).filter(function(x){return 1E-6<abs(x%DX)}).map(x$jscomp$0)).concat(d3Array.range(ceil(y0/dy)*dy,y1,dy).filter(function(y){return 1E-6<abs(y%DY)}).map(y$jscomp$0))}var x1,x0,X1,X0,y1,y0,Y1,Y0,dx=10,dy=dx,DX=90,DY=360,x$jscomp$0,y$jscomp$0,X,Y,precision=2.5;graticule.lines=function(){return lines().map(function(coordinates){return{type:"LineString",coordinates:coordinates}})};graticule.outline=function(){return{type:"Polygon",coordinates:[X(X0).concat(Y(Y1).slice(1),X(X1).reverse().slice(1),
Y(Y0).reverse().slice(1))]}};graticule.extent=function(_){return arguments.length?graticule.extentMajor(_).extentMinor(_):graticule.extentMinor()};graticule.extentMajor=function(_){if(!arguments.length)return[[X0,Y0],[X1,Y1]];X0=+_[0][0];X1=+_[1][0];Y0=+_[0][1];Y1=+_[1][1];X0>X1&&(_=X0,X0=X1,X1=_);Y0>Y1&&(_=Y0,Y0=Y1,Y1=_);return graticule.precision(precision)};graticule.extentMinor=function(_){if(!arguments.length)return[[x0,y0],[x1,y1]];x0=+_[0][0];x1=+_[1][0];y0=+_[0][1];y1=+_[1][1];x0>x1&&(_=x0,
x0=x1,x1=_);y0>y1&&(_=y0,y0=y1,y1=_);return graticule.precision(precision)};graticule.step=function(_){return arguments.length?graticule.stepMajor(_).stepMinor(_):graticule.stepMinor()};graticule.stepMajor=function(_){if(!arguments.length)return[DX,DY];DX=+_[0];DY=+_[1];return graticule};graticule.stepMinor=function(_){if(!arguments.length)return[dx,dy];dx=+_[0];dy=+_[1];return graticule};graticule.precision=function(_){if(!arguments.length)return precision;precision=+_;x$jscomp$0=graticuleX(y0,y1,
90);y$jscomp$0=graticuleY(x0,x1,precision);X=graticuleX(Y0,Y1,90);Y=graticuleY(X0,X1,precision);return graticule};return graticule.extentMajor([[-180,-89.999999],[180,89.999999]]).extentMinor([[-180,-80.000001],[180,80.000001]])}function areaRingStart$1(){areaStream$1.point=areaPointFirst$1}function areaPointFirst$1(x,y){areaStream$1.point=areaPoint$1;x00$jscomp$0=x0$1=x;y00$jscomp$0=y0$1=y}function areaPoint$1(x,y){areaRingSum$1.add(y0$1*x-x0$1*y);x0$1=x;y0$1=y}function areaRingEnd$1(){areaPoint$1(x00$jscomp$0,
y00$jscomp$0)}function centroidPoint$1(x,y){X0$1+=x;Y0$1+=y;++Z0$1}function centroidLineStart$1(){centroidStream$1.point=centroidPointFirstLine}function centroidPointFirstLine(x,y){centroidStream$1.point=centroidPointLine;centroidPoint$1(x0$3=x,y0$3=y)}function centroidPointLine(x,y){var dx=x-x0$3,dy=y-y0$3;dx=sqrt(dx*dx+dy*dy);X1$1+=dx*(x0$3+x)/2;Y1$1+=dx*(y0$3+y)/2;Z1$1+=dx;centroidPoint$1(x0$3=x,y0$3=y)}function centroidLineEnd$1(){centroidStream$1.point=centroidPoint$1}function centroidRingStart$1(){centroidStream$1.point=
centroidPointFirstRing}function centroidRingEnd$1(){centroidPointRing(x00$1,y00$1)}function centroidPointFirstRing(x,y){centroidStream$1.point=centroidPointRing;centroidPoint$1(x00$1=x0$3=x,y00$1=y0$3=y)}function centroidPointRing(x,y){var dx=x-x0$3,dy=y-y0$3;dx=sqrt(dx*dx+dy*dy);X1$1+=dx*(x0$3+x)/2;Y1$1+=dx*(y0$3+y)/2;Z1$1+=dx;dx=y0$3*x-x0$3*y;X2$1+=dx*(x0$3+x);Y2$1+=dx*(y0$3+y);Z2$1+=3*dx;centroidPoint$1(x0$3=x,y0$3=y)}function PathContext(context){this._context=context}function lengthPointFirst$1(x,
y){lengthStream$1.point=lengthPoint$1;x00$2=x0$4=x;y00$2=y0$4=y}function lengthPoint$1(x,y){x0$4-=x;y0$4-=y;lengthSum$1.add(sqrt(x0$4*x0$4+y0$4*y0$4));x0$4=x;y0$4=y}function PathString(){this._string=[]}function circle$1(radius){return"m0,"+radius+"a"+radius+","+radius+" 0 1,1 0,"+-2*radius+"a"+radius+","+radius+" 0 1,1 0,"+2*radius+"z"}function transformer(methods){return function(stream){var s=new TransformStream,key;for(key in methods)s[key]=methods[key];s.stream=stream;return s}}function TransformStream(){}
function fit(projection,fitBounds,object){var clip=projection.clipExtent&&projection.clipExtent();projection.scale(150).translate([0,0]);null!=clip&&projection.clipExtent(null);geoStream(object,projection.stream(boundsStream$1));fitBounds(boundsStream$1.result());null!=clip&&projection.clipExtent(clip);return projection}function fitExtent(projection,extent,object){return fit(projection,function(b){var w=extent[1][0]-extent[0][0],h=extent[1][1]-extent[0][1],k=Math.min(w/(b[1][0]-b[0][0]),h/(b[1][1]-
b[0][1]));w=+extent[0][0]+(w-k*(b[1][0]+b[0][0]))/2;b=+extent[0][1]+(h-k*(b[1][1]+b[0][1]))/2;projection.scale(150*k).translate([w,b])},object)}function fitWidth(projection,width,object){return fit(projection,function(b){var w=+width,k=w/(b[1][0]-b[0][0]);w=(w-k*(b[1][0]+b[0][0]))/2;b=-k*b[0][1];projection.scale(150*k).translate([w,b])},object)}function fitHeight(projection,height,object){return fit(projection,function(b){var h=+height,k=h/(b[1][1]-b[0][1]),x=-k*b[0][0];b=(h-k*(b[1][1]+b[0][1]))/
2;projection.scale(150*k).translate([x,b])},object)}function resampleNone(project){return transformer({point:function(x,y){x=project(x,y);this.stream.point(x[0],x[1])}})}function resample$1(project,delta2){function resampleLineTo(x0,y0,lambda0,a0,b0,c0,x1,y1,lambda1,a1,b1,c1,depth,stream){var dx=x1-x0,dy=y1-y0,d2=dx*dx+dy*dy;if(d2>4*delta2&&depth--){var a=a0+a1,b=b0+b1,c=c0+c1,m=sqrt(a*a+b*b+c*c),phi2=asin(c/=m),lambda2=1E-6>abs(abs(c)-1)||1E-6>abs(lambda0-lambda1)?(lambda0+lambda1)/2:atan2(b,a),
p=project(lambda2,phi2);phi2=p[0];p=p[1];var dx2=phi2-x0,dy2=p-y0,dz=dy*dx2-dx*dy2;if(dz*dz/d2>delta2||.3<abs((dx*dx2+dy*dy2)/d2-.5)||a0*a1+b0*b1+c0*c1<cosMinDistance)resampleLineTo(x0,y0,lambda0,a0,b0,c0,phi2,p,lambda2,a/=m,b/=m,c,depth,stream),stream.point(phi2,p),resampleLineTo(phi2,p,lambda2,a,b,c,x1,y1,lambda1,a1,b1,c1,depth,stream)}}return function(stream){function point(x,y){x=project(x,y);stream.point(x[0],x[1])}function lineStart(){x0=NaN;resampleStream.point=linePoint;stream.lineStart()}
function linePoint(lambda,phi){var c=cartesian([lambda,phi]);phi=project(lambda,phi);resampleLineTo(x0,y0,lambda0,a0,b0,c0,x0=phi[0],y0=phi[1],lambda0=lambda,a0=c[0],b0=c[1],c0=c[2],16,stream);stream.point(x0,y0)}function lineEnd(){resampleStream.point=point;stream.lineEnd()}function ringStart(){lineStart();resampleStream.point=ringPoint;resampleStream.lineEnd=ringEnd}function ringPoint(lambda,phi){linePoint(lambda00=lambda,phi);x00=x0;y00=y0;a00=a0;b00=b0;c00=c0;resampleStream.point=linePoint}function ringEnd(){resampleLineTo(x0,
y0,lambda0,a0,b0,c0,x00,y00,lambda00,a00,b00,c00,16,stream);resampleStream.lineEnd=lineEnd;lineEnd()}var lambda00,x00,y00,a00,b00,c00,lambda0,x0,y0,a0,b0,c0,resampleStream={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function(){stream.polygonStart();resampleStream.lineStart=ringStart},polygonEnd:function(){stream.polygonEnd();resampleStream.lineStart=lineStart}};return resampleStream}}function transformRotate(rotate){return transformer({point:function(x,y){x=rotate(x,y);return this.stream.point(x[0],
x[1])}})}function scaleTranslate(k,dx,dy,sx,sy){function transform(x,y){x*=sx;y*=sy;return[dx+k*x,dy-k*y]}transform.invert=function(x,y){return[(x-dx)/k*sx,(dy-y)/k*sy]};return transform}function scaleTranslateRotate(k,dx,dy,sx,sy,alpha){function transform(x,y){x*=sx;y*=sy;return[a*x-b*y+dx,dy-b*x-a*y]}if(!alpha)return scaleTranslate(k,dx,dy,sx,sy);var cosAlpha=cos(alpha);alpha=sin(alpha);var a=cosAlpha*k,b=alpha*k,ai=cosAlpha/k,bi=alpha/k,ci=(alpha*dy-cosAlpha*dx)/k,fi=(alpha*dx+cosAlpha*dy)/k;transform.invert=
function(x,y){return[sx*(ai*x-bi*y+ci),sy*(fi-bi*x-ai*y)]};return transform}function projection(project){return projectionMutator(function(){return project})()}function projectionMutator(projectAt){function projection(point){return projectRotateTransform(point[0]*radians,point[1]*radians)}function invert(point){return(point=projectRotateTransform.invert(point[0],point[1]))&&[point[0]*degrees,point[1]*degrees]}function recenter(){var center=scaleTranslateRotate(k,0,0,sx,sy,alpha).apply(null,project(lambda,
phi));center=scaleTranslateRotate(k,x-center[0],y-center[1],sx,sy,alpha);rotate=rotateRadians(deltaLambda,deltaPhi,deltaGamma);projectTransform=compose(project,center);projectRotateTransform=compose(rotate,projectTransform);center=projectTransform;projectResample=+delta2$jscomp$0?resample$1(center,delta2$jscomp$0):resampleNone(center);return reset()}function reset(){cache=cacheStream=null;return projection}var project,k=150,x=480,y=250,lambda=0,phi=0,deltaLambda=0,deltaPhi=0,deltaGamma=0,rotate,alpha=
0,sx=1,sy=1,theta=null,preclip=clipAntimeridian,x0=null,y0,x1,y1,postclip=identity,delta2$jscomp$0=.5,projectResample,projectTransform,projectRotateTransform,cache,cacheStream;projection.stream=function(stream){return cache&&cacheStream===stream?cache:cache=transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream=stream)))))};projection.preclip=function(_){return arguments.length?(preclip=_,theta=void 0,reset()):preclip};projection.postclip=function(_){return arguments.length?
(postclip=_,x0=y0=x1=y1=null,reset()):postclip};projection.clipAngle=function(_){return arguments.length?(preclip=+_?clipCircle(theta=_*radians):(theta=null,clipAntimeridian),reset()):theta*degrees};projection.clipExtent=function(_){return arguments.length?(postclip=null==_?(x0=y0=x1=y1=null,identity):clipRectangle(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reset()):null==x0?null:[[x0,y0],[x1,y1]]};projection.scale=function(_){return arguments.length?(k=+_,recenter()):k};projection.translate=
function(_){return arguments.length?(x=+_[0],y=+_[1],recenter()):[x,y]};projection.center=function(_){return arguments.length?(lambda=_[0]%360*radians,phi=_[1]%360*radians,recenter()):[lambda*degrees,phi*degrees]};projection.rotate=function(_){return arguments.length?(deltaLambda=_[0]%360*radians,deltaPhi=_[1]%360*radians,deltaGamma=2<_.length?_[2]%360*radians:0,recenter()):[deltaLambda*degrees,deltaPhi*degrees,deltaGamma*degrees]};projection.angle=function(_){return arguments.length?(alpha=_%360*
radians,recenter()):alpha*degrees};projection.reflectX=function(_){return arguments.length?(sx=_?-1:1,recenter()):0>sx};projection.reflectY=function(_){return arguments.length?(sy=_?-1:1,recenter()):0>sy};projection.precision=function(_){if(arguments.length){var JSCompiler_temp=projectTransform;var delta2=delta2$jscomp$0=_*_;JSCompiler_temp=(projectResample=+delta2?resample$1(JSCompiler_temp,delta2):resampleNone(JSCompiler_temp),reset())}else JSCompiler_temp=sqrt(delta2$jscomp$0);return JSCompiler_temp};
projection.fitExtent=function(extent,object){return fitExtent(projection,extent,object)};projection.fitSize=function(size,object){return fitExtent(projection,[[0,0],size],object)};projection.fitWidth=function(width,object){return fitWidth(projection,width,object)};projection.fitHeight=function(height,object){return fitHeight(projection,height,object)};return function(){project=projectAt.apply(this,arguments);projection.invert=project.invert&&invert;return recenter()}}function conicProjection(projectAt){var phi0=
0,phi1=pi/3,m=projectionMutator(projectAt);projectAt=m(phi0,phi1);projectAt.parallels=function(_){return arguments.length?m(phi0=_[0]*radians,phi1=_[1]*radians):[phi0*degrees,phi1*degrees]};return projectAt}function cylindricalEqualAreaRaw(phi0){function forward(lambda,phi){return[lambda*cosPhi0,sin(phi)/cosPhi0]}var cosPhi0=cos(phi0);forward.invert=function(x,y){return[x/cosPhi0,asin(y*cosPhi0)]};return forward}function conicEqualAreaRaw(y0,y1){function project(x,y){y=sqrt(c-2*n*sin(y))/n;return[y*
sin(x*=n),r0-y*cos(x)]}var sy0=sin(y0),n=(sy0+sin(y1))/2;if(1E-6>abs(n))return cylindricalEqualAreaRaw(y0);var c=1+sy0*(2*n-sy0),r0=sqrt(c)/n;project.invert=function(x,y){y=r0-y;var l=atan2(x,abs(y))*sign$jscomp$0(y);0>y*n&&(l-=pi*sign$jscomp$0(x)*sign$jscomp$0(y));return[l/n,asin((c-(x*x+y*y)*n*n)/(2*n))]};return project}function conicEqualArea(){return conicProjection(conicEqualAreaRaw).scale(155.424).center([0,33.6442])}function albers(){return conicEqualArea().parallels([29.5,45.5]).scale(1070).translate([480,
250]).rotate([96,0]).center([-.6,38.7])}function multiplex(streams){var n=streams.length;return{point:function(x,y){for(var i=-1;++i<n;)streams[i].point(x,y)},sphere:function(){for(var i=-1;++i<n;)streams[i].sphere()},lineStart:function(){for(var i=-1;++i<n;)streams[i].lineStart()},lineEnd:function(){for(var i=-1;++i<n;)streams[i].lineEnd()},polygonStart:function(){for(var i=-1;++i<n;)streams[i].polygonStart()},polygonEnd:function(){for(var i=-1;++i<n;)streams[i].polygonEnd()}}}function azimuthalRaw(scale){return function(x,
y){var cx=cos(x),cy=cos(y);cx=scale(cx*cy);return Infinity===cx?[2,0]:[cx*cy*sin(x),cx*sin(y)]}}function azimuthalInvert(angle){return function(x,y){var z=sqrt(x*x+y*y),c=angle(z),sc=sin(c);c=cos(c);return[atan2(x*sc,z*c),asin(z&&y*sc/z)]}}function mercatorRaw(lambda,phi){return[lambda,log(tan((halfPi+phi)/2))]}function mercatorProjection(project){function reclip(){var k=pi*scale(),t=m(rotation$jscomp$0(m.rotate()).invert([0,0]));return clipExtent(null==x0?[[t[0]-k,t[1]-k],[t[0]+k,t[1]+k]]:project===
mercatorRaw?[[Math.max(t[0]-k,x0),y0],[Math.min(t[0]+k,x1),y1]]:[[x0,Math.max(t[1]-k,y0)],[x1,Math.min(t[1]+k,y1)]])}var m=projection(project),center=m.center,scale=m.scale,translate=m.translate,clipExtent=m.clipExtent,x0=null,y0,x1,y1;m.scale=function(_){return arguments.length?(scale(_),reclip()):scale()};m.translate=function(_){return arguments.length?(translate(_),reclip()):translate()};m.center=function(_){return arguments.length?(center(_),reclip()):center()};m.clipExtent=function(_){return arguments.length?
(null==_?x0=y0=x1=y1=null:(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reclip()):null==x0?null:[[x0,y0],[x1,y1]]};return reclip()}function conicConformalRaw(y0,y1){function project(x,y){0<f?y<-halfPi+1E-6&&(y=-halfPi+1E-6):y>halfPi-1E-6&&(y=halfPi-1E-6);y=f/pow(tan((halfPi+y)/2),n);return[y*sin(n*x),f-y*cos(n*x)]}var cy0=cos(y0),n=y0===y1?sin(y0):log(cy0/cos(y1))/log(tan((halfPi+y1)/2)/tan((halfPi+y0)/2)),f=cy0*pow(tan((halfPi+y0)/2),n)/n;if(!n)return mercatorRaw;project.invert=function(x,y){y=
f-y;var r=sign$jscomp$0(n)*sqrt(x*x+y*y),l=atan2(x,abs(y))*sign$jscomp$0(y);0>y*n&&(l-=pi*sign$jscomp$0(x)*sign$jscomp$0(y));return[l/n,2*atan(pow(f/r,1/n))-halfPi]};return project}function equirectangularRaw(lambda,phi){return[lambda,phi]}function conicEquidistantRaw(y0,y1){function project(x,y){y=g-y;x*=n;return[y*sin(x),g-y*cos(x)]}var cy0=cos(y0),n=y0===y1?sin(y0):(cy0-cos(y1))/(y1-y0),g=cy0/n+y0;if(1E-6>abs(n))return equirectangularRaw;project.invert=function(x,y){y=g-y;var l=atan2(x,abs(y))*
sign$jscomp$0(y);0>y*n&&(l-=pi*sign$jscomp$0(x)*sign$jscomp$0(y));return[l/n,g-sign$jscomp$0(n)*sqrt(x*x+y*y)]};return project}function equalEarthRaw(lambda,phi){phi=asin(M*sin(phi));var l2=phi*phi,l6=l2*l2*l2;return[lambda*cos(phi)/(M*(1.340264+3*-.081106*l2+l6*(7*8.93E-4+.034164*l2))),phi*(1.340264+-.081106*l2+l6*(8.93E-4+.003796*l2))]}function gnomonicRaw(x,y){var cy=cos(y),k=cos(x)*cy;return[cy*sin(x)/k,sin(y)/k]}function naturalEarth1Raw(lambda,phi){var phi2=phi*phi,phi4=phi2*phi2;return[lambda*
(.8707-.131979*phi2+phi4*(-.013791+phi4*(.003971*phi2-.001529*phi4))),phi*(1.007226+phi2*(.015085+phi4*(-.044475+.028874*phi2-.005916*phi4)))]}function orthographicRaw(x,y){return[cos(y)*sin(x),sin(y)]}function stereographicRaw(x,y){var cy=cos(y),k=1+cos(x)*cy;return[cy*sin(x)/k,sin(y)/k]}function transverseMercatorRaw(lambda,phi){return[log(tan((halfPi+phi)/2)),-lambda]}var pi=Math.PI,halfPi=pi/2,quarterPi=pi/4,tau=2*pi,degrees=180/pi,radians=pi/180,abs=Math.abs,atan=Math.atan,atan2=Math.atan2,cos=
Math.cos,ceil=Math.ceil,exp=Math.exp,hypot=Math.hypot,log=Math.log,pow=Math.pow,sin=Math.sin,sign$jscomp$0=Math.sign||function(x){return 0<x?1:0>x?-1:0},sqrt=Math.sqrt,tan=Math.tan,streamObjectType={Feature:function(object,stream){streamGeometry(object.geometry,stream)},FeatureCollection:function(object,stream){object=object.features;for(var i=-1,n=object.length;++i<n;)streamGeometry(object[i].geometry,stream)}},streamGeometryType={Sphere:function(object,stream){stream.sphere()},Point:function(object,
stream){object=object.coordinates;stream.point(object[0],object[1],object[2])},MultiPoint:function(object,stream){for(var coordinates=object.coordinates,i=-1,n=coordinates.length;++i<n;)object=coordinates[i],stream.point(object[0],object[1],object[2])},LineString:function(object,stream){streamLine(object.coordinates,stream,0)},MultiLineString:function(object,stream){object=object.coordinates;for(var i=-1,n=object.length;++i<n;)streamLine(object[i],stream,0)},Polygon:function(object,stream){streamPolygon(object.coordinates,
stream)},MultiPolygon:function(object,stream){object=object.coordinates;for(var i=-1,n=object.length;++i<n;)streamPolygon(object[i],stream)},GeometryCollection:function(object,stream){object=object.geometries;for(var i=-1,n=object.length;++i<n;)streamGeometry(object[i],stream)}},areaRingSum=new d3Array.Adder,areaSum=new d3Array.Adder,lambda00,phi00,lambda0,cosPhi0,sinPhi0,areaStream={point:noop,lineStart:noop,lineEnd:noop,polygonStart:function(){areaRingSum=new d3Array.Adder;areaStream.lineStart=
areaRingStart;areaStream.lineEnd=areaRingEnd},polygonEnd:function(){var areaRing=+areaRingSum;areaSum.add(0>areaRing?tau+areaRing:areaRing);this.lineStart=this.lineEnd=this.point=noop},sphere:function(){areaSum.add(tau)}},lambda0$1,phi0,lambda1,phi1,lambda2,lambda00$1,phi00$1,p0$jscomp$0,deltaSum,ranges,range$jscomp$0,boundsStream={point:boundsPoint,lineStart:boundsLineStart,lineEnd:boundsLineEnd,polygonStart:function(){boundsStream.point=boundsRingPoint;boundsStream.lineStart=boundsRingStart;boundsStream.lineEnd=
boundsRingEnd;deltaSum=new d3Array.Adder;areaStream.polygonStart()},polygonEnd:function(){areaStream.polygonEnd();boundsStream.point=boundsPoint;boundsStream.lineStart=boundsLineStart;boundsStream.lineEnd=boundsLineEnd;0>areaRingSum?(lambda0$1=-(lambda1=180),phi0=-(phi1=90)):1E-6<deltaSum?phi1=90:-1E-6>deltaSum&&(phi0=-90);range$jscomp$0[0]=lambda0$1;range$jscomp$0[1]=lambda1},sphere:function(){lambda0$1=-(lambda1=180);phi0=-(phi1=90)}},W0,W1,X0,Y0,Z0,X1,Y1,Z1,X2,Y2,Z2,lambda00$2,phi00$2,x0$jscomp$0,
y0$jscomp$0,z0,centroidStream={sphere:noop,point:centroidPoint,lineStart:centroidLineStart,lineEnd:centroidLineEnd,polygonStart:function(){centroidStream.lineStart=centroidRingStart;centroidStream.lineEnd=centroidRingEnd},polygonEnd:function(){centroidStream.lineStart=centroidLineStart;centroidStream.lineEnd=centroidLineEnd}};rotationIdentity.invert=rotationIdentity;var clipAntimeridian=clip$jscomp$0(function(){return!0},function(stream){var lambda0=NaN,phi0$jscomp$0=NaN,sign0=NaN,clean;return{lineStart:function(){stream.lineStart();
clean=1},point:function(lambda1$jscomp$0,phi1){var sign1=0<lambda1$jscomp$0?pi:-pi,delta=abs(lambda1$jscomp$0-lambda0);if(1E-6>abs(delta-pi))stream.point(lambda0,phi0$jscomp$0=0<(phi0$jscomp$0+phi1)/2?halfPi:-halfPi),stream.point(sign0,phi0$jscomp$0),stream.lineEnd(),stream.lineStart(),stream.point(sign1,phi0$jscomp$0),stream.point(lambda1$jscomp$0,phi0$jscomp$0),clean=0;else if(sign0!==sign1&&delta>=pi){1E-6>abs(lambda0-sign0)&&(lambda0-=1E-6*sign0);1E-6>abs(lambda1$jscomp$0-sign1)&&(lambda1$jscomp$0-=
1E-6*sign1);delta=lambda0;var phi0=phi0$jscomp$0,lambda1=lambda1$jscomp$0,cosPhi0,cosPhi1,sinLambda0Lambda1=sin(delta-lambda1);phi0$jscomp$0=1E-6<abs(sinLambda0Lambda1)?atan((sin(phi0)*(cosPhi1=cos(phi1))*sin(lambda1)-sin(phi1)*(cosPhi0=cos(phi0))*sin(delta))/(cosPhi0*cosPhi1*sinLambda0Lambda1)):(phi0+phi1)/2;stream.point(sign0,phi0$jscomp$0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0$jscomp$0);clean=0}stream.point(lambda0=lambda1$jscomp$0,phi0$jscomp$0=phi1);sign0=sign1},lineEnd:function(){stream.lineEnd();
lambda0=phi0$jscomp$0=NaN},clean:function(){return 2-clean}}},function(from,to,direction,stream){null==from?(direction*=halfPi,stream.point(-pi,direction),stream.point(0,direction),stream.point(pi,direction),stream.point(pi,0),stream.point(pi,-direction),stream.point(0,-direction),stream.point(-pi,-direction),stream.point(-pi,0),stream.point(-pi,direction)):1E-6<abs(from[0]-to[0])?(from=from[0]<to[0]?pi:-pi,direction=direction*from/2,stream.point(-from,direction),stream.point(0,direction),stream.point(from,
direction)):stream.point(to[0],to[1])},[-pi,-halfPi]),lengthSum,lambda0$2,sinPhi0$1,cosPhi0$1,lengthStream={sphere:noop,point:noop,lineStart:function(){lengthStream.point=lengthPointFirst;lengthStream.lineEnd=lengthLineEnd},lineEnd:noop,polygonStart:noop,polygonEnd:noop},coordinates$jscomp$0=[null,null],object$jscomp$0={type:"LineString",coordinates:coordinates$jscomp$0},containsObjectType={Feature:function(object,point){return containsGeometry(object.geometry,point)},FeatureCollection:function(object,
point){object=object.features;for(var i=-1,n=object.length;++i<n;)if(containsGeometry(object[i].geometry,point))return!0;return!1}},containsGeometryType={Sphere:function(){return!0},Point:function(object,point){return 0===distance(object.coordinates,point)},MultiPoint:function(object,point){object=object.coordinates;for(var i=-1,n=object.length;++i<n;)if(0===distance(object[i],point))return!0;return!1},LineString:function(object,point){return containsLine(object.coordinates,point)},MultiLineString:function(object,
point){object=object.coordinates;for(var i=-1,n=object.length;++i<n;)if(containsLine(object[i],point))return!0;return!1},Polygon:function(object,point){return containsPolygon(object.coordinates,point)},MultiPolygon:function(object,point){object=object.coordinates;for(var i=-1,n=object.length;++i<n;)if(containsPolygon(object[i],point))return!0;return!1},GeometryCollection:function(object,point){object=object.geometries;for(var i=-1,n=object.length;++i<n;)if(containsGeometry(object[i],point))return!0;
return!1}},identity=function(x){return x},areaSum$1=new d3Array.Adder,areaRingSum$1=new d3Array.Adder,x00$jscomp$0,y00$jscomp$0,x0$1,y0$1,areaStream$1={point:noop,lineStart:noop,lineEnd:noop,polygonStart:function(){areaStream$1.lineStart=areaRingStart$1;areaStream$1.lineEnd=areaRingEnd$1},polygonEnd:function(){areaStream$1.lineStart=areaStream$1.lineEnd=areaStream$1.point=noop;areaSum$1.add(abs(areaRingSum$1));areaRingSum$1=new d3Array.Adder},result:function(){var area=areaSum$1/2;areaSum$1=new d3Array.Adder;
return area}},x0$2=Infinity,y0$2=x0$2,x1$jscomp$0=-x0$2,y1$jscomp$0=x1$jscomp$0,boundsStream$1={point:function(x,y){x<x0$2&&(x0$2=x);x>x1$jscomp$0&&(x1$jscomp$0=x);y<y0$2&&(y0$2=y);y>y1$jscomp$0&&(y1$jscomp$0=y)},lineStart:noop,lineEnd:noop,polygonStart:noop,polygonEnd:noop,result:function(){var bounds=[[x0$2,y0$2],[x1$jscomp$0,y1$jscomp$0]];x1$jscomp$0=y1$jscomp$0=-(y0$2=x0$2=Infinity);return bounds}},X0$1=0,Y0$1=0,Z0$1=0,X1$1=0,Y1$1=0,Z1$1=0,X2$1=0,Y2$1=0,Z2$1=0,x00$1,y00$1,x0$3,y0$3,centroidStream$1=
{point:centroidPoint$1,lineStart:centroidLineStart$1,lineEnd:centroidLineEnd$1,polygonStart:function(){centroidStream$1.lineStart=centroidRingStart$1;centroidStream$1.lineEnd=centroidRingEnd$1},polygonEnd:function(){centroidStream$1.point=centroidPoint$1;centroidStream$1.lineStart=centroidLineStart$1;centroidStream$1.lineEnd=centroidLineEnd$1},result:function(){var centroid=Z2$1?[X2$1/Z2$1,Y2$1/Z2$1]:Z1$1?[X1$1/Z1$1,Y1$1/Z1$1]:Z0$1?[X0$1/Z0$1,Y0$1/Z0$1]:[NaN,NaN];X0$1=Y0$1=Z0$1=X1$1=Y1$1=Z1$1=X2$1=
Y2$1=Z2$1=0;return centroid}};PathContext.prototype={_radius:4.5,pointRadius:function(_){return this._radius=_,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath();this._point=NaN},point:function(x,y){switch(this._point){case 0:this._context.moveTo(x,y);this._point=1;break;case 1:this._context.lineTo(x,y);break;default:this._context.moveTo(x+this._radius,y),this._context.arc(x,
y,this._radius,0,tau)}},result:noop};var lengthSum$1=new d3Array.Adder,lengthRing,x00$2,y00$2,x0$4,y0$4,lengthStream$1={point:noop,lineStart:function(){lengthStream$1.point=lengthPointFirst$1},lineEnd:function(){lengthRing&&lengthPoint$1(x00$2,y00$2);lengthStream$1.point=noop},polygonStart:function(){lengthRing=!0},polygonEnd:function(){lengthRing=null},result:function(){var length=+lengthSum$1;lengthSum$1=new d3Array.Adder;return length}};PathString.prototype={_radius:4.5,_circle:circle$1(4.5),pointRadius:function(_){(_=
+_)!==this._radius&&(this._radius=_,this._circle=null);return this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z");this._point=NaN},point:function(x,y){switch(this._point){case 0:this._string.push("M",x,",",y);this._point=1;break;case 1:this._string.push("L",x,",",y);break;default:null==this._circle&&(this._circle=circle$1(this._radius)),this._string.push("M",x,",",y,this._circle)}},
result:function(){if(this._string.length){var result=this._string.join("");this._string=[];return result}return null}};TransformStream.prototype={constructor:TransformStream,point:function(x,y){this.stream.point(x,y)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var cosMinDistance=cos(30*radians),transformRadians=transformer({point:function(x,
y){this.stream.point(x*radians,y*radians)}}),azimuthalEqualAreaRaw=azimuthalRaw(function(cxcy){return sqrt(2/(1+cxcy))});azimuthalEqualAreaRaw.invert=azimuthalInvert(function(z){return 2*asin(z/2)});var azimuthalEquidistantRaw=azimuthalRaw(function(c){return(c=acos(c))&&c/sin(c)});azimuthalEquidistantRaw.invert=azimuthalInvert(function(z){return z});mercatorRaw.invert=function(x,y){return[x,2*atan(exp(y))-halfPi]};equirectangularRaw.invert=equirectangularRaw;var M=sqrt(3)/2;equalEarthRaw.invert=function(x,
y){for(var l=y,l2=l*l,l6=l2*l2*l2,i=0,delta;12>i&&!(delta=l*(1.340264+-.081106*l2+l6*(8.93E-4+.003796*l2))-y,l2=1.340264+3*-.081106*l2+l6*(7*8.93E-4+.034164*l2),l-=delta/=l2,l2=l*l,l6=l2*l2*l2,1E-12>abs(delta));++i);return[M*x*(1.340264+3*-.081106*l2+l6*(7*8.93E-4+.034164*l2))/cos(l),asin(sin(l)/M)]};gnomonicRaw.invert=azimuthalInvert(atan);naturalEarth1Raw.invert=function(x,y){var phi=y,i=25;do{var phi2=phi*phi;var delta=phi2*phi2;phi-=delta=(phi*(1.007226+phi2*(.015085+delta*(-.044475+.028874*phi2-
.005916*delta)))-y)/(1.007226+phi2*(.045255+delta*(-.311325+.259866*phi2-.005916*11*delta)))}while(1E-6<abs(delta)&&0<--i);return[x/(.8707+(phi2=phi*phi)*(-.131979+phi2*(-.013791+phi2*phi2*phi2*(.003971-.001529*phi2)))),phi]};orthographicRaw.invert=azimuthalInvert(asin);stereographicRaw.invert=azimuthalInvert(function(z){return 2*atan(z)});transverseMercatorRaw.invert=function(x,y){return[-y,2*atan(exp(x))-halfPi]};exports.geoAlbers=albers;exports.geoAlbersUsa=function(){function albersUsa(coordinates){var x=
coordinates[0];coordinates=coordinates[1];return point=null,(lower48Point.point(x,coordinates),point)||(alaskaPoint.point(x,coordinates),point)||(hawaiiPoint.point(x,coordinates),point)}function reset(){cache=cacheStream=null;return albersUsa}var cache,cacheStream,lower48=albers(),lower48Point,alaska=conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),alaskaPoint,hawaii=conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),hawaiiPoint,point,pointStream={point:function(x,
y){point=[x,y]}};albersUsa.invert=function(coordinates){var k=lower48.scale(),t=lower48.translate(),x=(coordinates[0]-t[0])/k;k=(coordinates[1]-t[1])/k;return(.12<=k&&.234>k&&-.425<=x&&-.214>x?alaska:.166<=k&&.234>k&&-.214<=x&&-.115>x?hawaii:lower48).invert(coordinates)};albersUsa.stream=function(stream){return cache&&cacheStream===stream?cache:cache=multiplex([lower48.stream(cacheStream=stream),alaska.stream(stream),hawaii.stream(stream)])};albersUsa.precision=function(_){if(!arguments.length)return lower48.precision();
lower48.precision(_);alaska.precision(_);hawaii.precision(_);return reset()};albersUsa.scale=function(_){if(!arguments.length)return lower48.scale();lower48.scale(_);alaska.scale(.35*_);hawaii.scale(_);return albersUsa.translate(lower48.translate())};albersUsa.translate=function(_){if(!arguments.length)return lower48.translate();var k=lower48.scale(),x=+_[0],y=+_[1];lower48Point=lower48.translate(_).clipExtent([[x-.455*k,y-.238*k],[x+.455*k,y+.238*k]]).stream(pointStream);alaskaPoint=alaska.translate([x-
.307*k,y+.201*k]).clipExtent([[x-.425*k+1E-6,y+.12*k+1E-6],[x-.214*k-1E-6,y+.234*k-1E-6]]).stream(pointStream);hawaiiPoint=hawaii.translate([x-.205*k,y+.212*k]).clipExtent([[x-.214*k+1E-6,y+.166*k+1E-6],[x-.115*k-1E-6,y+.234*k-1E-6]]).stream(pointStream);return reset()};albersUsa.fitExtent=function(extent,object){return fitExtent(albersUsa,extent,object)};albersUsa.fitSize=function(size,object){return fitExtent(albersUsa,[[0,0],size],object)};albersUsa.fitWidth=function(width,object){return fitWidth(albersUsa,
width,object)};albersUsa.fitHeight=function(height,object){return fitHeight(albersUsa,height,object)};return albersUsa.scale(1070)};exports.geoArea=function(object){areaSum=new d3Array.Adder;geoStream(object,areaStream);return 2*areaSum};exports.geoAzimuthalEqualArea=function(){return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(179.999)};exports.geoAzimuthalEqualAreaRaw=azimuthalEqualAreaRaw;exports.geoAzimuthalEquidistant=function(){return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(179.999)};
exports.geoAzimuthalEquidistantRaw=azimuthalEquidistantRaw;exports.geoBounds=function(feature){var n,merged,delta;phi1=lambda1=-(lambda0$1=phi0=Infinity);ranges=[];geoStream(feature,boundsStream);if(n=ranges.length){ranges.sort(rangeCompare);feature=1;var a=ranges[0];for(merged=[a];feature<n;++feature){var b=ranges[feature];rangeContains(a,b[0])||rangeContains(a,b[1])?(angle$jscomp$0(a[0],b[1])>angle$jscomp$0(a[0],a[1])&&(a[1]=b[1]),angle$jscomp$0(b[0],a[1])>angle$jscomp$0(a[0],a[1])&&(a[0]=b[0])):
merged.push(a=b)}var deltaMax=-Infinity;n=merged.length-1;feature=0;for(a=merged[n];feature<=n;a=b,++feature)b=merged[feature],(delta=angle$jscomp$0(a[1],b[0]))>deltaMax&&(deltaMax=delta,lambda0$1=b[0],lambda1=a[1])}ranges=range$jscomp$0=null;return Infinity===lambda0$1||Infinity===phi0?[[NaN,NaN],[NaN,NaN]]:[[lambda0$1,phi0],[lambda1,phi1]]};exports.geoCentroid=function(object){W0=W1=X0=Y0=Z0=X1=Y1=Z1=0;X2=new d3Array.Adder;Y2=new d3Array.Adder;Z2=new d3Array.Adder;geoStream(object,centroidStream);
object=+X2;var y=+Y2,z=+Z2,m=hypot(object,y,z);return 1E-12>m&&(object=X1,y=Y1,z=Z1,1E-6>W1&&(object=X0,y=Y0,z=Z0),m=hypot(object,y,z),1E-12>m)?[NaN,NaN]:[atan2(y,object)*degrees,asin(z/m)*degrees]};exports.geoCircle=function(){function circle(){var c=center.apply(this,arguments),r=radius.apply(this,arguments)*radians,p=precision.apply(this,arguments)*radians;ring=[];rotate=rotateRadians(-c[0]*radians,-c[1]*radians,0).invert;circleStream(stream,r,p,1);c={type:"Polygon",coordinates:[ring]};ring=rotate=
null;return c}var center=constant([0,0]),radius=constant(90),precision=constant(6),ring,rotate,stream={point:function(x,y){ring.push(x=rotate(x,y));x[0]*=degrees;x[1]*=degrees}};circle.center=function(_){return arguments.length?(center="function"===typeof _?_:constant([+_[0],+_[1]]),circle):center};circle.radius=function(_){return arguments.length?(radius="function"===typeof _?_:constant(+_),circle):radius};circle.precision=function(_){return arguments.length?(precision="function"===typeof _?_:constant(+_),
circle):precision};return circle};exports.geoClipAntimeridian=clipAntimeridian;exports.geoClipCircle=clipCircle;exports.geoClipExtent=function(){var x0=0,y0=0,x1=960,y1=500,cache,cacheStream,clip;return clip={stream:function(stream){return cache&&cacheStream===stream?cache:cache=clipRectangle(x0,y0,x1,y1)(cacheStream=stream)},extent:function(_){return arguments.length?(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1],cache=cacheStream=null,clip):[[x0,y0],[x1,y1]]}}};exports.geoClipRectangle=clipRectangle;
exports.geoConicConformal=function(){return conicProjection(conicConformalRaw).scale(109.5).parallels([30,30])};exports.geoConicConformalRaw=conicConformalRaw;exports.geoConicEqualArea=conicEqualArea;exports.geoConicEqualAreaRaw=conicEqualAreaRaw;exports.geoConicEquidistant=function(){return conicProjection(conicEquidistantRaw).scale(131.154).center([0,13.9389])};exports.geoConicEquidistantRaw=conicEquidistantRaw;exports.geoContains=function(object,point){return(object&&containsObjectType.hasOwnProperty(object.type)?
containsObjectType[object.type]:containsGeometry)(object,point)};exports.geoDistance=distance;exports.geoEqualEarth=function(){return projection(equalEarthRaw).scale(177.158)};exports.geoEqualEarthRaw=equalEarthRaw;exports.geoEquirectangular=function(){return projection(equirectangularRaw).scale(152.63)};exports.geoEquirectangularRaw=equirectangularRaw;exports.geoGnomonic=function(){return projection(gnomonicRaw).scale(144.049).clipAngle(60)};exports.geoGnomonicRaw=gnomonicRaw;exports.geoGraticule=
graticule;exports.geoGraticule10=function(){return graticule()()};exports.geoIdentity=function(){function reset(){kx=k*sx;ky=k*sy;cache=cacheStream=null;return projection}function projection(p){var x=p[0]*kx;p=p[1]*ky;if(alpha){var t=p*ca-x*sa;x=x*ca+p*sa;p=t}return[x+tx,p+ty]}var k=1,tx=0,ty=0,sx=1,sy=1,alpha=0,ca,sa,x0=null,y0,x1,y1,kx=1,ky=1,transform=transformer({point:function(x,y){x=projection([x,y]);this.stream.point(x[0],x[1])}}),postclip=identity,cache,cacheStream;projection.invert=function(p){var x=
p[0]-tx;p=p[1]-ty;if(alpha){var t=p*ca+x*sa;x=x*ca-p*sa;p=t}return[x/kx,p/ky]};projection.stream=function(stream){return cache&&cacheStream===stream?cache:cache=transform(postclip(cacheStream=stream))};projection.postclip=function(_){return arguments.length?(postclip=_,x0=y0=x1=y1=null,reset()):postclip};projection.clipExtent=function(_){return arguments.length?(postclip=null==_?(x0=y0=x1=y1=null,identity):clipRectangle(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reset()):null==x0?null:[[x0,
y0],[x1,y1]]};projection.scale=function(_){return arguments.length?(k=+_,reset()):k};projection.translate=function(_){return arguments.length?(tx=+_[0],ty=+_[1],reset()):[tx,ty]};projection.angle=function(_){return arguments.length?(alpha=_%360*radians,sa=sin(alpha),ca=cos(alpha),reset()):alpha*degrees};projection.reflectX=function(_){return arguments.length?(sx=_?-1:1,reset()):0>sx};projection.reflectY=function(_){return arguments.length?(sy=_?-1:1,reset()):0>sy};projection.fitExtent=function(extent,
object){return fitExtent(projection,extent,object)};projection.fitSize=function(size,object){return fitExtent(projection,[[0,0],size],object)};projection.fitWidth=function(width,object){return fitWidth(projection,width,object)};projection.fitHeight=function(height,object){return fitHeight(projection,height,object)};return projection};exports.geoInterpolate=function(a,b){var x0=a[0]*radians,y0=a[1]*radians;a=b[0]*radians;b=b[1]*radians;var cy0=cos(y0),sy0=sin(y0),cy1=cos(b),sy1=sin(b),kx0=cy0*cos(x0),
ky0=cy0*sin(x0),kx1=cy1*cos(a),ky1=cy1*sin(a),d=2*asin(sqrt(haversin(b-y0)+cy0*cy1*haversin(a-x0))),k=sin(d);a=d?function(t){var B=sin(t*=d)/k,A=sin(d-t)/k;t=A*kx0+B*kx1;var y=A*ky0+B*ky1;B=A*sy0+B*sy1;return[atan2(y,t)*degrees,atan2(B,sqrt(t*t+y*y))*degrees]}:function(){return[x0*degrees,y0*degrees]};a.distance=d;return a};exports.geoLength=length$jscomp$0;exports.geoMercator=function(){return mercatorProjection(mercatorRaw).scale(961/tau)};exports.geoMercatorRaw=mercatorRaw;exports.geoNaturalEarth1=
function(){return projection(naturalEarth1Raw).scale(175.295)};exports.geoNaturalEarth1Raw=naturalEarth1Raw;exports.geoOrthographic=function(){return projection(orthographicRaw).scale(249.5).clipAngle(90.000001)};exports.geoOrthographicRaw=orthographicRaw;exports.geoPath=function(projection,context){function path(object){object&&("function"===typeof pointRadius&&contextStream.pointRadius(+pointRadius.apply(this,arguments)),geoStream(object,projectionStream(contextStream)));return contextStream.result()}
var pointRadius=4.5,projectionStream,contextStream;path.area=function(object){geoStream(object,projectionStream(areaStream$1));return areaStream$1.result()};path.measure=function(object){geoStream(object,projectionStream(lengthStream$1));return lengthStream$1.result()};path.bounds=function(object){geoStream(object,projectionStream(boundsStream$1));return boundsStream$1.result()};path.centroid=function(object){geoStream(object,projectionStream(centroidStream$1));return centroidStream$1.result()};path.projection=
function(_){return arguments.length?(projectionStream=null==_?(projection=null,identity):(projection=_).stream,path):projection};path.context=function(_){if(!arguments.length)return context;contextStream=null==_?(context=null,new PathString):new PathContext(context=_);"function"!==typeof pointRadius&&contextStream.pointRadius(pointRadius);return path};path.pointRadius=function(_){if(!arguments.length)return pointRadius;pointRadius="function"===typeof _?_:(contextStream.pointRadius(+_),+_);return path};
return path.projection(projection).context(context)};exports.geoProjection=projection;exports.geoProjectionMutator=projectionMutator;exports.geoRotation=rotation$jscomp$0;exports.geoStereographic=function(){return projection(stereographicRaw).scale(250).clipAngle(142)};exports.geoStereographicRaw=stereographicRaw;exports.geoStream=geoStream;exports.geoTransform=function(methods){return{stream:transformer(methods)}};exports.geoTransverseMercator=function(){var m=mercatorProjection(transverseMercatorRaw),
center=m.center,rotate=m.rotate;m.center=function(_){return arguments.length?center([-_[1],_[0]]):(_=center(),[_[1],-_[0]])};m.rotate=function(_){return arguments.length?rotate([_[0],_[1],2<_.length?_[2]+90:90]):(_=rotate(),[_[0],_[1],_[2]-90])};return rotate([0,0,90]).scale(159.155)};exports.geoTransverseMercatorRaw=transverseMercatorRaw;Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$d3_geo$dist$d3_geo.js.map
