{
"version":3,
"file":"goog.i18n.bidi.js",
"lineCount":177,
"mappings":"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",
"sources":["goog/i18n/bidi.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utility functions for supporting Bidi issues.\n */\n\n\n/**\n * Namespace for bidi supporting functions.\n */\ngoog.provide('goog.i18n.bidi');\ngoog.provide('goog.i18n.bidi.Dir');\ngoog.provide('goog.i18n.bidi.DirectionalString');\ngoog.provide('goog.i18n.bidi.Format');\n\n\n/**\n * @define {boolean} FORCE_RTL forces the {@link goog.i18n.bidi.IS_RTL} constant\n * to say that the current locale is a RTL locale.  This should only be used\n * if you want to override the default behavior for deciding whether the\n * current locale is RTL or not.\n *\n * {@see goog.i18n.bidi.IS_RTL}\n */\ngoog.i18n.bidi.FORCE_RTL = goog.define('goog.i18n.bidi.FORCE_RTL', false);\n\n\n/**\n * Constant that defines whether or not the current locale is a RTL locale.\n * If {@link goog.i18n.bidi.FORCE_RTL} is not true, this constant will default\n * to check that {@link goog.LOCALE} is one of a few major RTL locales.\n *\n * <p>This is designed to be a maximally efficient compile-time constant. For\n * example, for the default goog.LOCALE, compiling\n * \"if (goog.i18n.bidi.IS_RTL) alert('rtl') else {}\" should produce no code. It\n * is this design consideration that limits the implementation to only\n * supporting a few major RTL locales, as opposed to the broader repertoire of\n * something like goog.i18n.bidi.isRtlLanguage.\n *\n * <p>Since this constant refers to the directionality of the locale, it is up\n * to the caller to determine if this constant should also be used for the\n * direction of the UI.\n *\n * {@see goog.LOCALE}\n *\n * @type {boolean}\n *\n * TODO(user): write a test that checks that this is a compile-time constant.\n */\n// LINT.IfChange\ngoog.i18n.bidi.IS_RTL =\n    goog.i18n.bidi.FORCE_RTL ||\n    ((goog.LOCALE.substring(0, 2).toLowerCase() == 'ar' ||\n      goog.LOCALE.substring(0, 2).toLowerCase() == 'fa' ||\n      goog.LOCALE.substring(0, 2).toLowerCase() == 'he' ||\n      goog.LOCALE.substring(0, 2).toLowerCase() == 'iw' ||\n      goog.LOCALE.substring(0, 2).toLowerCase() == 'ps' ||\n      goog.LOCALE.substring(0, 2).toLowerCase() == 'sd' ||\n      goog.LOCALE.substring(0, 2).toLowerCase() == 'ug' ||\n      goog.LOCALE.substring(0, 2).toLowerCase() == 'ur' ||\n      goog.LOCALE.substring(0, 2).toLowerCase() == 'yi') &&\n     (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == '-' ||\n      goog.LOCALE.substring(2, 3) == '_')) ||\n    (  // Specific to CKB (Central Kurdish)\n        goog.LOCALE.length >= 3 &&\n        goog.LOCALE.substring(0, 3).toLowerCase() == 'ckb' &&\n        (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == '-' ||\n         goog.LOCALE.substring(3, 4) == '_')) ||\n    (  // 2 letter language codes with RTL scripts\n        goog.LOCALE.length >= 7 &&\n        ((goog.LOCALE.substring(2, 3) == '-' ||\n          goog.LOCALE.substring(2, 3) == '_') &&\n         (goog.LOCALE.substring(3, 7).toLowerCase() == 'adlm' ||\n          goog.LOCALE.substring(3, 7).toLowerCase() == 'arab' ||\n          goog.LOCALE.substring(3, 7).toLowerCase() == 'hebr' ||\n          goog.LOCALE.substring(3, 7).toLowerCase() == 'nkoo' ||\n          goog.LOCALE.substring(3, 7).toLowerCase() == 'rohg' ||\n          goog.LOCALE.substring(3, 7).toLowerCase() == 'thaa'))) ||\n    (  // 3 letter languages codes with RTL scripts\n        goog.LOCALE.length >= 8 &&\n        ((goog.LOCALE.substring(3, 4) == '-' ||\n          goog.LOCALE.substring(3, 4) == '_') &&\n         (goog.LOCALE.substring(4, 8).toLowerCase() == 'adlm' ||\n          goog.LOCALE.substring(4, 8).toLowerCase() == 'arab' ||\n          goog.LOCALE.substring(4, 8).toLowerCase() == 'hebr' ||\n          goog.LOCALE.substring(4, 8).toLowerCase() == 'nkoo' ||\n          goog.LOCALE.substring(4, 8).toLowerCase() == 'rohg' ||\n          goog.LOCALE.substring(4, 8).toLowerCase() == 'thaa')));\n//    closure/RtlLocalesTest.java)\n\n// TODO(b/77919903): Add additional scripts and languages that are RTL,\n// e.g., mende, samaritan, etc.\n\n\n/**\n * Unicode formatting characters and directionality string constants.\n * @enum {string}\n */\ngoog.i18n.bidi.Format = {\n  /** Unicode \"Left-To-Right Embedding\" (LRE) character. */\n  LRE: '\\u202A',\n  /** Unicode \"Right-To-Left Embedding\" (RLE) character. */\n  RLE: '\\u202B',\n  /** Unicode \"Pop Directional Formatting\" (PDF) character. */\n  PDF: '\\u202C',\n  /** Unicode \"Left-To-Right Mark\" (LRM) character. */\n  LRM: '\\u200E',\n  /** Unicode \"Right-To-Left Mark\" (RLM) character. */\n  RLM: '\\u200F'\n};\n\n\n/**\n * Directionality enum.\n * @enum {number}\n */\ngoog.i18n.bidi.Dir = {\n  /**\n   * Left-to-right.\n   */\n  LTR: 1,\n\n  /**\n   * Right-to-left.\n   */\n  RTL: -1,\n\n  /**\n   * Neither left-to-right nor right-to-left.\n   */\n  NEUTRAL: 0\n};\n\n\n/**\n * 'right' string constant.\n * @type {string}\n */\ngoog.i18n.bidi.RIGHT = 'right';\n\n\n/**\n * 'left' string constant.\n * @type {string}\n */\ngoog.i18n.bidi.LEFT = 'left';\n\n\n/**\n * 'left' if locale is RTL, 'right' if not.\n * @type {string}\n */\ngoog.i18n.bidi.I18N_RIGHT =\n    goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;\n\n\n/**\n * 'right' if locale is RTL, 'left' if not.\n * @type {string}\n */\ngoog.i18n.bidi.I18N_LEFT =\n    goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;\n\n\n/**\n * Convert a directionality given in various formats to a goog.i18n.bidi.Dir\n * constant. Useful for interaction with different standards of directionality\n * representation.\n *\n * @param {goog.i18n.bidi.Dir|number|boolean|null} givenDir Directionality given\n *     in one of the following formats:\n *     1. A goog.i18n.bidi.Dir constant.\n *     2. A number (positive = LTR, negative = RTL, 0 = neutral).\n *     3. A boolean (true = RTL, false = LTR).\n *     4. A null for unknown directionality.\n * @param {boolean=} opt_noNeutral Whether a givenDir of zero or\n *     goog.i18n.bidi.Dir.NEUTRAL should be treated as null, i.e. unknown, in\n *     order to preserve legacy behavior.\n * @return {?goog.i18n.bidi.Dir} A goog.i18n.bidi.Dir constant matching the\n *     given directionality. If given null, returns null (i.e. unknown).\n */\ngoog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {\n  if (typeof givenDir == 'number') {\n    // This includes the non-null goog.i18n.bidi.Dir case.\n    return givenDir > 0 ?\n        goog.i18n.bidi.Dir.LTR :\n        givenDir < 0 ? goog.i18n.bidi.Dir.RTL :\n                       opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;\n  } else if (givenDir == null) {\n    return null;\n  } else {\n    // Must be typeof givenDir == 'boolean'.\n    return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;\n  }\n};\n\n\n/**\n * A practical pattern to identify strong LTR character in the BMP.\n * This pattern is not theoretically correct according to the Unicode\n * standard. It is simplified for performance and small code size.\n * It also partially supports LTR scripts beyond U+FFFF by including\n * UTF-16 high surrogate values corresponding to mostly L-class code\n * point ranges.\n * However, low surrogate values and private-use regions are not included\n * in this RegEx.\n * @type {string}\n * @private\n */\ngoog.i18n.bidi.ltrChars_ =\n    'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0900-\\u1FFF' +\n    '\\u200E\\u2C00-\\uD801\\uD804-\\uD839\\uD83C-\\uDBFF' +\n    '\\uF900-\\uFB1C\\uFE00-\\uFE6F\\uFEFD-\\uFFFF';\n\n/**\n * A practical pattern to identify strong RTL character. This pattern is not\n * theoretically correct according to the Unicode standard. It is simplified\n * for performance and small code size.\n * It also partially supports RTL scripts beyond U+FFFF by including\n * UTF-16 high surrogate values corresponding to mostly R- or AL-class\n * code point ranges.\n * However, low surrogate values and private-use regions are not included\n * in this RegEx.\n * @type {string}\n * @private\n */\ngoog.i18n.bidi.rtlChars_ =\n    '\\u0591-\\u06EF\\u06FA-\\u08FF\\u200F\\uD802-\\uD803\\uD83A-\\uD83B' +\n    '\\uFB1D-\\uFDFF\\uFE70-\\uFEFC';\n\n/**\n * Simplified regular expression for an HTML tag (opening or closing) or an HTML\n * escape. We might want to skip over such expressions when estimating the text\n * directionality.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;\n\n\n/**\n * Returns the input text with spaces instead of HTML tags or HTML escapes, if\n * opt_isStripNeeded is true. Else returns the input as is.\n * Useful for text directionality estimation.\n * Note: the function should not be used in other contexts; it is not 100%\n * correct, but rather a good-enough implementation for directionality\n * estimation purposes.\n * @param {string} str The given string.\n * @param {boolean=} opt_isStripNeeded Whether to perform the stripping.\n *     Default: false (to retain consistency with calling functions).\n * @return {string} The given string cleaned of HTML tags / escapes.\n * @private\n */\ngoog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {\n  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, '') : str;\n};\n\n\n/**\n * Regular expression to check for RTL characters, BMP and high surrogate.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.rtlCharReg_ = new RegExp('[' + goog.i18n.bidi.rtlChars_ + ']');\n\n\n/**\n * Regular expression to check for LTR characters.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.ltrCharReg_ = new RegExp('[' + goog.i18n.bidi.ltrChars_ + ']');\n\n\n/**\n * Test whether the given string has any RTL characters in it.\n * @param {string} str The given string that need to be tested.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether the string contains RTL characters.\n */\ngoog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlCharReg_.test(\n      goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\n\n\n/**\n * Test whether the given string has any RTL characters in it.\n * @param {string} str The given string that need to be tested.\n * @return {boolean} Whether the string contains RTL characters.\n * @deprecated Use hasAnyRtl.\n */\ngoog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;\n\n\n/**\n * Test whether the given string has any LTR characters in it.\n * @param {string} str The given string that need to be tested.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether the string contains LTR characters.\n */\ngoog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrCharReg_.test(\n      goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\n\n\n/**\n * Regular expression pattern to check if the first character in the string\n * is LTR.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.ltrRe_ = new RegExp('^[' + goog.i18n.bidi.ltrChars_ + ']');\n\n\n/**\n * Regular expression pattern to check if the first character in the string\n * is RTL.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.rtlRe_ = new RegExp('^[' + goog.i18n.bidi.rtlChars_ + ']');\n\n\n/**\n * Check if the first character in the string is RTL or not.\n * @param {string} str The given string that need to be tested.\n * @return {boolean} Whether the first character in str is an RTL char.\n */\ngoog.i18n.bidi.isRtlChar = function(str) {\n  return goog.i18n.bidi.rtlRe_.test(str);\n};\n\n\n/**\n * Check if the first character in the string is LTR or not.\n * @param {string} str The given string that need to be tested.\n * @return {boolean} Whether the first character in str is an LTR char.\n */\ngoog.i18n.bidi.isLtrChar = function(str) {\n  return goog.i18n.bidi.ltrRe_.test(str);\n};\n\n\n/**\n * Check if the first character in the string is neutral or not.\n * @param {string} str The given string that need to be tested.\n * @return {boolean} Whether the first character in str is a neutral char.\n */\ngoog.i18n.bidi.isNeutralChar = function(str) {\n  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);\n};\n\n\n/**\n * Regular expressions to check if a piece of text is of LTR directionality\n * on first character with strong directionality.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.ltrDirCheckRe_ = new RegExp(\n    '^[^' + goog.i18n.bidi.rtlChars_ + ']*[' + goog.i18n.bidi.ltrChars_ + ']');\n\n\n/**\n * Regular expressions to check if a piece of text is of RTL directionality\n * on first character with strong directionality.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.rtlDirCheckRe_ = new RegExp(\n    '^[^' + goog.i18n.bidi.ltrChars_ + ']*[' + goog.i18n.bidi.rtlChars_ + ']');\n\n\n/**\n * Check whether the first strongly directional character (if any) is RTL.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether RTL directionality is detected using the first\n *     strongly-directional character method.\n */\ngoog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlDirCheckRe_.test(\n      goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\n\n\n/**\n * Check whether the first strongly directional character (if any) is RTL.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether RTL directionality is detected using the first\n *     strongly-directional character method.\n * @deprecated Use startsWithRtl.\n */\ngoog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;\n\n\n/**\n * Check whether the first strongly directional character (if any) is LTR.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether LTR directionality is detected using the first\n *     strongly-directional character method.\n */\ngoog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrDirCheckRe_.test(\n      goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\n\n\n/**\n * Check whether the first strongly directional character (if any) is LTR.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether LTR directionality is detected using the first\n *     strongly-directional character method.\n * @deprecated Use startsWithLtr.\n */\ngoog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;\n\n\n/**\n * Regular expression to check if a string looks like something that must\n * always be LTR even in RTL text, e.g. a URL. When estimating the\n * directionality of text containing these, we treat these as weakly LTR,\n * like numbers.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.isRequiredLtrRe_ = /^http:\\/\\/.*/;\n\n\n/**\n * Check whether the input string either contains no strongly directional\n * characters or looks like a url.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether neutral directionality is detected.\n */\ngoog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {\n  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);\n  return goog.i18n.bidi.isRequiredLtrRe_.test(str) ||\n      !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);\n};\n\n\n/**\n * Regular expressions to check if the last strongly-directional character in a\n * piece of text is LTR.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp(\n    '[' + goog.i18n.bidi.ltrChars_ + ']' +\n    '[^' + goog.i18n.bidi.rtlChars_ + ']*$');\n\n\n/**\n * Regular expressions to check if the last strongly-directional character in a\n * piece of text is RTL.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp(\n    '[' + goog.i18n.bidi.rtlChars_ + ']' +\n    '[^' + goog.i18n.bidi.ltrChars_ + ']*$');\n\n\n/**\n * Check if the exit directionality a piece of text is LTR, i.e. if the last\n * strongly-directional character in the string is LTR.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether LTR exit directionality was detected.\n */\ngoog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrExitDirCheckRe_.test(\n      goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\n\n\n/**\n * Check if the exit directionality a piece of text is LTR, i.e. if the last\n * strongly-directional character in the string is LTR.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether LTR exit directionality was detected.\n * @deprecated Use endsWithLtr.\n */\ngoog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;\n\n\n/**\n * Check if the exit directionality a piece of text is RTL, i.e. if the last\n * strongly-directional character in the string is RTL.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether RTL exit directionality was detected.\n */\ngoog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlExitDirCheckRe_.test(\n      goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\n\n\n/**\n * Check if the exit directionality a piece of text is RTL, i.e. if the last\n * strongly-directional character in the string is RTL.\n * @param {string} str String being checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether RTL exit directionality was detected.\n * @deprecated Use endsWithRtl.\n */\ngoog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;\n\n\n/**\n * A regular expression for matching right-to-left language codes.\n * See {@link #isRtlLanguage} for the design.\n * Note that not all RTL scripts are included.\n * @type {!RegExp}\n * @private\n */\ngoog.i18n.bidi.rtlLocalesRe_ = new RegExp(\n    '^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|' +\n        '.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))' +\n        '(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)',\n    'i');\n\n\n/**\n * Check if a BCP 47 / III language code indicates an RTL language, i.e. either:\n * - a language code explicitly specifying one of the right-to-left scripts,\n *   e.g. \"az-Arab\", or<p>\n * - a language code specifying one of the languages normally written in a\n *   right-to-left script, e.g. \"fa\" (Farsi), except ones explicitly specifying\n *   Latin or Cyrillic script (which are the usual LTR alternatives).<p>\n * The list of right-to-left scripts appears in the 100-199 range in\n * http://www.unicode.org/iso15924/iso15924-num.html, of which Arabic and\n * Hebrew are by far the most widely used. We also recognize Thaana, and N'Ko,\n * which also have significant modern usage. Adlam and Rohingya\n * scripts are now included since they can be expected to be used in the\n * future. The rest (Syriac, Samaritan, Mandaic, etc.) seem to have extremely\n * limited or no modern usage and are not recognized to save on code size. The\n * languages usually written in a right-to-left script are taken as those with\n * Suppress-Script: Hebr|Arab|Thaa|Nkoo|Adlm|Rohg in\n * http://www.iana.org/assignments/language-subtag-registry,\n * as well as Central (or Sorani) Kurdish (ckb), Sindhi (sd) and Uyghur (ug).\n * Other subtags of the language code, e.g. regions like EG (Egypt), are\n * ignored.\n * @param {string} lang BCP 47 (a.k.a III) language code.\n * @return {boolean} Whether the language code is an RTL language.\n */\ngoog.i18n.bidi.isRtlLanguage = function(lang) {\n  return goog.i18n.bidi.rtlLocalesRe_.test(lang);\n};\n\n\n/**\n * Regular expression for bracket guard replacement in text.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.bracketGuardTextRe_ =\n    /(\\(.*?\\)+)|(\\[.*?\\]+)|(\\{.*?\\}+)|(<.*?>+)/g;\n\n\n/**\n * Apply bracket guard using LRM and RLM. This is to address the problem of\n * messy bracket display frequently happens in RTL layout.\n * This function works for plain text, not for HTML. In HTML, the opening\n * bracket might be in a different context than the closing bracket (such as\n * an attribute value).\n * @param {string} s The string that need to be processed.\n * @param {boolean=} opt_isRtlContext specifies default direction (usually\n *     direction of the UI).\n * @return {string} The processed string, with all bracket guarded.\n */\ngoog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {\n  const useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) :\n                                                  opt_isRtlContext;\n  const mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;\n  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + '$&' + mark);\n};\n\n\n/**\n * Enforce the html snippet in RTL directionality regardless of overall context.\n * If the html piece was enclosed by tag, dir will be applied to existing\n * tag, otherwise a span tag will be added as wrapper. For this reason, if\n * html snippet starts with a tag, this tag must enclose the whole piece. If\n * the tag already has a dir specified, this new one will override existing\n * one in behavior (tested on FF and IE).\n * @param {string} html The string that need to be processed.\n * @return {string} The processed string, with directionality enforced to RTL.\n */\ngoog.i18n.bidi.enforceRtlInHtml = function(html) {\n  if (html.charAt(0) == '<') {\n    return html.replace(/<\\w+/, '$& dir=rtl');\n  }\n  // '\\n' is important for FF so that it won't incorrectly merge span groups\n  return '\\n<span dir=rtl>' + html + '</span>';\n};\n\n\n/**\n * Enforce RTL on both end of the given text piece using unicode BiDi formatting\n * characters RLE and PDF.\n * @param {string} text The piece of text that need to be wrapped.\n * @return {string} The wrapped string after process.\n */\ngoog.i18n.bidi.enforceRtlInText = function(text) {\n  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;\n};\n\n\n/**\n * Enforce the html snippet in RTL directionality regardless or overall context.\n * If the html piece was enclosed by tag, dir will be applied to existing\n * tag, otherwise a span tag will be added as wrapper. For this reason, if\n * html snippet starts with a tag, this tag must enclose the whole piece. If\n * the tag already has a dir specified, this new one will override existing\n * one in behavior (tested on FF and IE).\n * @param {string} html The string that need to be processed.\n * @return {string} The processed string, with directionality enforced to RTL.\n */\ngoog.i18n.bidi.enforceLtrInHtml = function(html) {\n  if (html.charAt(0) == '<') {\n    return html.replace(/<\\w+/, '$& dir=ltr');\n  }\n  // '\\n' is important for FF so that it won't incorrectly merge span groups\n  return '\\n<span dir=ltr>' + html + '</span>';\n};\n\n\n/**\n * Enforce LTR on both end of the given text piece using unicode BiDi formatting\n * characters LRE and PDF.\n * @param {string} text The piece of text that need to be wrapped.\n * @return {string} The wrapped string after process.\n */\ngoog.i18n.bidi.enforceLtrInText = function(text) {\n  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;\n};\n\n\n/**\n * Regular expression to find dimensions such as \"padding: .3 0.4ex 5px 6;\"\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.dimensionsRe_ =\n    /:\\s*([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)/g;\n\n\n/**\n * Regular expression for left.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.leftRe_ = /left/gi;\n\n\n/**\n * Regular expression for right.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.rightRe_ = /right/gi;\n\n\n/**\n * Placeholder regular expression for swapping.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.tempRe_ = /%%%%/g;\n\n\n/**\n * Swap location parameters and 'left'/'right' in CSS specification. The\n * processed string will be suited for RTL layout. Though this function can\n * cover most cases, there are always exceptions. It is suggested to put\n * those exceptions in separate group of CSS string.\n * @param {string} cssStr CSS spefication string.\n * @return {string} Processed CSS specification string.\n */\ngoog.i18n.bidi.mirrorCSS = function(cssStr) {\n  return cssStr\n      .\n      // reverse dimensions\n      replace(goog.i18n.bidi.dimensionsRe_, ':$1 $4 $3 $2')\n      .replace(goog.i18n.bidi.leftRe_, '%%%%')\n      .  // swap left and right\n      replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT)\n      .replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);\n};\n\n\n/**\n * Regular expression for hebrew double quote substitution, finding quote\n * directly after hebrew characters.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\\u0591-\\u05f2])\"/g;\n\n\n/**\n * Regular expression for hebrew single quote substitution, finding quote\n * directly after hebrew characters.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.singleQuoteSubstituteRe_ = /([\\u0591-\\u05f2])'/g;\n\n\n/**\n * Replace the double and single quote directly after a Hebrew character with\n * GERESH and GERSHAYIM. In such case, most likely that's user intention.\n * @param {string} str String that need to be processed.\n * @return {string} Processed string with double/single quote replaced.\n */\ngoog.i18n.bidi.normalizeHebrewQuote = function(str) {\n  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, '$1\\u05f4')\n      .replace(goog.i18n.bidi.singleQuoteSubstituteRe_, '$1\\u05f3');\n};\n\n\n/**\n * Regular expression to split a string into \"words\" for directionality\n * estimation based on relative word counts.\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.wordSeparatorRe_ = /\\s+/;\n\n\n/**\n * Regular expression to check if a string contains any numerals. Used to\n * differentiate between completely neutral strings and those containing\n * numbers, which are weakly LTR.\n *\n * Native Arabic digits (\\u0660 - \\u0669) are not included because although they\n * do flow left-to-right inside a number, this is the case even if the  overall\n * directionality is RTL, and a mathematical expression using these digits is\n * supposed to flow right-to-left overall, including unary plus and minus\n * appearing to the right of a number, and this does depend on the overall\n * directionality being RTL. The digits used in Farsi (\\u06F0 - \\u06F9), on the\n * other hand, are included, since Farsi math (including unary plus and minus)\n * does flow left-to-right.\n * TODO: Consider other systems of digits, e.g., Adlam.\n *\n * @type {RegExp}\n * @private\n */\ngoog.i18n.bidi.hasNumeralsRe_ = /[\\d\\u06f0-\\u06f9]/;\n\n\n/**\n * This constant controls threshold of RTL directionality.\n * @type {number}\n * @private\n */\ngoog.i18n.bidi.rtlDetectionThreshold_ = 0.40;\n\n\n/**\n * Estimates the directionality of a string based on relative word counts.\n * If the number of RTL words is above a certain percentage of the total number\n * of strongly directional words, returns RTL.\n * Otherwise, if any words are strongly or weakly LTR, returns LTR.\n * Otherwise, returns UNKNOWN, which is used to mean \"neutral\".\n * Numbers are counted as weakly LTR.\n * @param {string} str The string to be checked.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {goog.i18n.bidi.Dir} Estimated overall directionality of `str`.\n */\ngoog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {\n  let rtlCount = 0;\n  let totalCount = 0;\n  let hasWeaklyLtr = false;\n  const tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml)\n                     .split(goog.i18n.bidi.wordSeparatorRe_);\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (goog.i18n.bidi.startsWithRtl(token)) {\n      rtlCount++;\n      totalCount++;\n    } else if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {\n      hasWeaklyLtr = true;\n    } else if (goog.i18n.bidi.hasAnyLtr(token)) {\n      totalCount++;\n    } else if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {\n      hasWeaklyLtr = true;\n    }\n  }\n\n  return totalCount == 0 ?\n      (hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL) :\n      (rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ?\n           goog.i18n.bidi.Dir.RTL :\n           goog.i18n.bidi.Dir.LTR);\n};\n\n\n/**\n * Check the directionality of a piece of text, return true if the piece of\n * text should be laid out in RTL direction.\n * @param {string} str The piece of text that need to be detected.\n * @param {boolean=} opt_isHtml Whether str is HTML / HTML-escaped.\n *     Default: false.\n * @return {boolean} Whether this piece of text should be laid out in RTL.\n */\ngoog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {\n  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) ==\n      goog.i18n.bidi.Dir.RTL;\n};\n\n\n/**\n * Sets text input element's directionality and text alignment based on a\n * given directionality. Does nothing if the given directionality is unknown or\n * neutral.\n * @param {Element} element Input field element to set directionality to.\n * @param {goog.i18n.bidi.Dir|number|boolean|null} dir Desired directionality,\n *     given in one of the following formats:\n *     1. A goog.i18n.bidi.Dir constant.\n *     2. A number (positive = LRT, negative = RTL, 0 = neutral).\n *     3. A boolean (true = RTL, false = LTR).\n *     4. A null for unknown directionality.\n */\ngoog.i18n.bidi.setElementDirAndAlign = function(element, dir) {\n  if (element) {\n    const htmlElement = /** @type {!HTMLElement} */ (element);\n    dir = goog.i18n.bidi.toDir(dir);\n    if (dir) {\n      htmlElement.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ?\n          goog.i18n.bidi.RIGHT :\n          goog.i18n.bidi.LEFT;\n      htmlElement.dir = dir == goog.i18n.bidi.Dir.RTL ? 'rtl' : 'ltr';\n    }\n  }\n};\n\n\n/**\n * Sets element dir based on estimated directionality of the given text.\n * @param {!Element} element\n * @param {string} text\n */\ngoog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {\n  const htmlElement = /** @type {!HTMLElement} */ (element);\n  switch (goog.i18n.bidi.estimateDirection(text)) {\n    case (goog.i18n.bidi.Dir.LTR):\n      htmlElement.dir = 'ltr';\n      break;\n    case (goog.i18n.bidi.Dir.RTL):\n      htmlElement.dir = 'rtl';\n      break;\n    default:\n      // Default for no direction, inherit from document.\n      htmlElement.removeAttribute('dir');\n  }\n};\n\n\n\n/**\n * Strings that have an (optional) known direction.\n *\n * Implementations of this interface are string-like objects that carry an\n * attached direction, if known.\n * @interface\n */\ngoog.i18n.bidi.DirectionalString = function() {};\n\n\n/**\n * Interface marker of the DirectionalString interface.\n *\n * This property can be used to determine at runtime whether or not an object\n * implements this interface.  All implementations of this interface set this\n * property to `true`.\n * @type {boolean}\n */\ngoog.i18n.bidi.DirectionalString.prototype\n    .implementsGoogI18nBidiDirectionalString;\n\n\n/**\n * Retrieves this object's known direction (if any).\n * @return {?goog.i18n.bidi.Dir} The known direction. Null if unknown.\n */\ngoog.i18n.bidi.DirectionalString.prototype.getDirection;\n"],
"names":["goog","provide","i18n","bidi","FORCE_RTL","define","IS_RTL","LOCALE","substring","toLowerCase","length","Format","LRE","RLE","PDF","LRM","RLM","Dir","LTR","RTL","NEUTRAL","RIGHT","LEFT","I18N_RIGHT","I18N_LEFT","toDir","goog.i18n.bidi.toDir","givenDir","opt_noNeutral","ltrChars_","rtlChars_","htmlSkipReg_","stripHtmlIfNeeded_","goog.i18n.bidi.stripHtmlIfNeeded_","str","opt_isStripNeeded","replace","rtlCharReg_","RegExp","ltrCharReg_","hasAnyRtl","goog.i18n.bidi.hasAnyRtl","opt_isHtml","test","hasRtlChar","hasAnyLtr","goog.i18n.bidi.hasAnyLtr","ltrRe_","rtlRe_","isRtlChar","goog.i18n.bidi.isRtlChar","isLtrChar","goog.i18n.bidi.isLtrChar","isNeutralChar","goog.i18n.bidi.isNeutralChar","ltrDirCheckRe_","rtlDirCheckRe_","startsWithRtl","goog.i18n.bidi.startsWithRtl","isRtlText","startsWithLtr","goog.i18n.bidi.startsWithLtr","isLtrText","isRequiredLtrRe_","isNeutralText","goog.i18n.bidi.isNeutralText","ltrExitDirCheckRe_","rtlExitDirCheckRe_","endsWithLtr","goog.i18n.bidi.endsWithLtr","isLtrExitText","endsWithRtl","goog.i18n.bidi.endsWithRtl","isRtlExitText","rtlLocalesRe_","isRtlLanguage","goog.i18n.bidi.isRtlLanguage","lang","bracketGuardTextRe_","guardBracketInText","goog.i18n.bidi.guardBracketInText","s","opt_isRtlContext","useRtl","undefined","mark","enforceRtlInHtml","goog.i18n.bidi.enforceRtlInHtml","html","charAt","enforceRtlInText","goog.i18n.bidi.enforceRtlInText","text","enforceLtrInHtml","goog.i18n.bidi.enforceLtrInHtml","enforceLtrInText","goog.i18n.bidi.enforceLtrInText","dimensionsRe_","leftRe_","rightRe_","tempRe_","mirrorCSS","goog.i18n.bidi.mirrorCSS","cssStr","doubleQuoteSubstituteRe_","singleQuoteSubstituteRe_","normalizeHebrewQuote","goog.i18n.bidi.normalizeHebrewQuote","wordSeparatorRe_","hasNumeralsRe_","rtlDetectionThreshold_","estimateDirection","goog.i18n.bidi.estimateDirection","rtlCount","totalCount","hasWeaklyLtr","tokens","split","i","token","detectRtlDirectionality","goog.i18n.bidi.detectRtlDirectionality","setElementDirAndAlign","goog.i18n.bidi.setElementDirAndAlign","element","dir","htmlElement","style","textAlign","setElementDirByTextDirectionality","goog.i18n.bidi.setElementDirByTextDirectionality","removeAttribute","DirectionalString","goog.i18n.bidi.DirectionalString","prototype","implementsGoogI18nBidiDirectionalString","getDirection"]
}
