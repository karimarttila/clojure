{
"version":3,
"file":"com.cognitect.transit.types.js",
"lineCount":981,
"mappings":"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",
"sources":["com/cognitect/transit/types.js"],
"sourcesContent":["// Copyright 2014 Cognitect. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide(\"com.cognitect.transit.types\");\ngoog.require(\"com.cognitect.transit.util\");\ngoog.require(\"com.cognitect.transit.eq\");\ngoog.require(\"goog.math.Long\");\n\ngoog.scope(function() {\n\n    var types = com.cognitect.transit.types,\n        util  = com.cognitect.transit.util,\n        eq    = com.cognitect.transit.eq,\n        Long  = goog.math.Long;\n\n    if(typeof Symbol != \"undefined\") {\n        types.ITERATOR = Symbol.iterator;\n    } else {\n        types.ITERATOR = \"@@iterator\";\n    }\n\n    /**\n     * @constructor\n     */\n    types.TaggedValue = function Transit$TaggedValue(tag, rep) {\n        this.tag = tag;\n        this.rep = rep;\n        this.hashCode = -1;\n    };\n\n    types.TaggedValue.prototype.toString = function() {\n        return \"[TaggedValue: \" + this.tag + \", \" + this.rep + \"]\";\n    };\n\n    types.TaggedValue.prototype.equiv = function(other) {\n        return eq.equals(this, other);\n    };\n    types.TaggedValue.prototype[\"equiv\"] = types.TaggedValue.prototype.equiv;\n\n    types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {\n        if(other instanceof types.TaggedValue) {\n            return (this.tag === other.tag) && eq.equals(this.rep, other.rep);\n        } else {\n            return false;\n        }\n    };\n\n    types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {\n        if(this.hashCode === -1) {\n            this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));\n        }\n        return this.hashCode;\n    };\n\n    types.taggedValue = function(tag, rep) {\n        return new types.TaggedValue(tag, rep);\n    };\n\n    types.isTaggedValue = function(x) {\n        return x instanceof types.TaggedValue;\n    };\n\n    types.nullValue = function() {\n        return null;\n    };\n\n    types.boolValue = function(s) {\n        return s === \"t\";\n    };\n\n    types.MAX_INT = Long.fromString(\"9007199254740991\");\n    types.MIN_INT = Long.fromString(\"-9007199254740991\");\n\n    types.intValue = function(s) {\n        if(typeof s === \"number\") {\n            return s;\n        } else if(s instanceof Long) {\n            return s;\n        } else {\n            var n = Long.fromString(s, 10);\n            if(n.greaterThan(types.MAX_INT) ||\n                n.lessThan(types.MIN_INT)) {\n                return n;\n            } else {\n                return n.toNumber();\n            }\n        }\n    };\n\n    Long.prototype.equiv = function(other) {\n        return eq.equals(this, other);\n    };\n    Long.prototype[\"equiv\"] = Long.prototype.equiv;\n\n    Long.prototype.com$cognitect$transit$equals = function(other) {\n        return (other instanceof Long) && this.equals(other);\n    };\n\n    Long.prototype.com$cognitect$transit$hashCode = function() {\n        return this.toInt();\n    };\n\n    types.isInteger = function(x) {\n        if(x instanceof Long) {\n            return true;\n        } else {\n            return (typeof x === \"number\") && !isNaN(x) && !(x === Infinity) && (parseFloat(x) === parseInt(x, 10));\n        }\n    };\n\n    types.floatValue = function(s) {\n        return parseFloat(s);\n    };\n\n    types.bigInteger = function(s) {\n        return types.taggedValue(\"n\", s);\n    };\n\n    types.isBigInteger = function(x) {\n        return (x instanceof types.TaggedValue) && (x.tag === \"n\");\n    };\n\n    types.bigDecimalValue = function(s) {\n        return types.taggedValue(\"f\", s);\n    };\n\n    types.isBigDecimal = function(x) {\n        return (x instanceof types.TaggedValue) && (x.tag === \"f\");\n    };\n\n    types.charValue = function(s) {\n        return s;\n    };\n\n    /**\n     * @constructor\n     */\n    types.Keyword = function Transit$Keyword(name) {\n        this._name = name;\n        this.hashCode = -1;\n    };\n\n    types.Keyword.prototype.toString = function() {\n        return \":\"+this._name;\n    };\n\n    types.Keyword.prototype[\"namespace\"] = function() {\n        var idx = this._name.indexOf(\"/\");\n        if(idx != -1) {\n            return this._name.substring(0, idx);\n        } else {\n            return null;\n        }\n    };\n\n    types.Keyword.prototype[\"name\"] = function() {\n        var idx = this._name.indexOf(\"/\");\n        if(idx != -1) {\n            return this._name.substring(idx+1, this._name.length);\n        } else {\n            return this._name;\n        }\n    };\n\n    types.Keyword.prototype.equiv = function(other) {\n        return eq.equals(this, other);\n    };\n    types.Keyword.prototype[\"equiv\"] = types.Keyword.prototype.equiv;\n\n    types.Keyword.prototype.com$cognitect$transit$equals = function(other) {\n        return (other instanceof types.Keyword) && this._name == other._name;\n    };\n\n    types.Keyword.prototype.com$cognitect$transit$hashCode = function() {\n        if(this.hashCode === -1) {\n            this.hashCode = eq.hashCode(this._name);\n        }\n        return this.hashCode;\n    };\n\n    types.keyword = function(s) {\n        return new types.Keyword(s);\n    };\n\n    types.isKeyword = function(x) {\n        return x instanceof types.Keyword;\n    };\n\n    /**\n     * @constructor\n     */\n    types.Symbol = function Transit$Symbol(name) {\n        this._name = name;\n        this.hashCode = -1;\n    };\n\n    types.Symbol.prototype[\"namespace\"] = function() {\n        var idx = this._name.indexOf(\"/\");\n        if(idx != -1) {\n            return this._name.substring(0, idx);\n        } else {\n            return null;\n        }\n    };\n\n    types.Symbol.prototype[\"name\"] = function() {\n        var idx = this._name.indexOf(\"/\");\n        if(idx != -1) {\n            return this._name.substring(idx+1, this._name.length);\n        } else {\n            return this._name;\n        }\n    };\n\n    types.Symbol.prototype.toString = function() {\n        return this._name;\n    };\n\n    types.Symbol.prototype.equiv = function(other) {\n        return eq.equals(this, other);\n    };\n    types.Symbol.prototype[\"equiv\"] = types.Symbol.prototype.equiv;\n\n    types.Symbol.prototype.com$cognitect$transit$equals = function(other) {\n        return (other instanceof types.Symbol) && this._name == other._name;\n    };\n\n    types.Symbol.prototype.com$cognitect$transit$hashCode = function() {\n        if(this.hashCode === -1) {\n            this.hashCode = eq.hashCode(this._name);\n        }\n        return this.hashCode;\n    };\n\n    types.symbol = function(s) {\n        return new types.Symbol(s);\n    };\n\n    types.isSymbol = function(x) {\n        return x instanceof types.Symbol;\n    };\n\n    types.hexFor = function(aLong, sidx, eidx) {\n        var ret   = \"\";\n\n        eidx  = eidx || (sidx+1);\n\n        for(var i=sidx, shift=(7-i)*8, mask=Long.fromInt(0xff).shiftLeft(shift); i < eidx; i++, shift-=8, mask=mask.shiftRightUnsigned(8)) {\n            var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);\n            if(s.length == 1) {\n                s = \"0\" + s;\n            }\n            ret += s;\n        }\n\n        return ret;\n    };\n\n    /**\n     * @constructor\n     */\n    types.UUID = function Transit$UUID(high, low) {\n        this.high = high;\n        this.low = low;\n        this.hashCode = -1;\n    };\n\n    types.UUID.prototype.getLeastSignificantBits = function() {\n        return this.low;\n    };\n\n    types.UUID.prototype.getMostSignificantBits = function() {\n        return this.high;\n    };\n\n    types.UUID.prototype.toString = function() {\n        var s    = \"\",\n            hi64 = this.high,\n            lo64 = this.low;\n\n        s += types.hexFor(hi64, 0, 4) + \"-\";\n        s += types.hexFor(hi64, 4, 6) + \"-\";\n        s += types.hexFor(hi64, 6, 8) + \"-\";\n        s += types.hexFor(lo64, 0, 2) + \"-\";\n        s += types.hexFor(lo64, 2, 8);\n\n        return s;\n    };\n\n    types.UUID.prototype.equiv = function(other) {\n        return eq.equals(this, other);\n    };\n    types.UUID.prototype[\"equiv\"] = types.UUID.prototype.equiv;\n\n    types.UUID.prototype.com$cognitect$transit$equals = function(other) {\n        return (other instanceof types.UUID) && this.high.equals(other.high) && this.low.equals(other.low);\n    };\n\n    types.UUID.prototype.com$cognitect$transit$hashCode = function() {\n        if(this.hashCode === -1) {\n            // TODO: follow http://hg.openjdk.java.net/jdk6/jdk6/jdk/file/2d585507a41b/src/share/classes/java/util/UUID.java\n            this.hashCode = eq.hashCode(this.toString());\n        }\n        return this.hashCode;\n    };\n\n    types.UUIDfromString = function uuidFromString(s) {\n        s = s.replace(/-/g, \"\");\n\n        var hi64 = null,\n            lo64 = null,\n            hi32 = 0,\n            lo32 = 0,\n            off  = 24,\n            i    = 0;\n\n        for(hi32=0, i=0, off= 24; i < 8; i+=2, off-=8) {\n            hi32 |= (parseInt(s.substring(i,i+2),16) << off);\n        }\n\n        for(lo32=0, i=8, off=24; i < 16; i+=2, off-=8) {\n            lo32 |= (parseInt(s.substring(i,i+2),16) << off);\n        }\n\n        hi64 = Long.fromBits(lo32, hi32);\n\n        for(hi32=0, i=16, off=24; i < 24; i+=2, off-=8) {\n            hi32 |= (parseInt(s.substring(i,i+2),16) << off);\n        }\n\n        for(lo32=0, i=24, off=24; i < 32; i+=2, off-=8) {\n            lo32 |= (parseInt(s.substring(i,i+2),16) << off);\n        }\n\n        lo64 = Long.fromBits(lo32, hi32);\n\n        return new types.UUID(hi64, lo64);\n    };\n\n    types.uuid = function(s) {\n        return types.UUIDfromString(s);\n    };\n\n    types.isUUID = function(x) {\n        return x instanceof types.UUID;\n    };\n\n    types.date = function(s) {\n        s = typeof s === \"number\" ? s : parseInt(s, 10);\n        return new Date(s);\n    };\n\n    types.verboseDate = function(s) {\n        return new Date(s);\n    };\n\n    Date.prototype.com$cognitect$transit$equals = function(other) {\n        if(other instanceof Date) {\n            return this.valueOf() === other.valueOf();\n        } else {\n            return false;\n        }\n    };\n\n    Date.prototype.com$cognitect$transit$hashCode = function() {\n        return this.valueOf();\n    };\n\n    /**\n     * @param {string} str\n     * @param {*=} decoder\n     * @returns {com.cognitect.transit.types.TaggedValue|Uint8Array}\n     */\n    types.binary = function(str, decoder) {\n        if((!decoder || (decoder.preferBuffers !== false)) && (typeof goog.global.Buffer != \"undefined\")) {\n            return new goog.global.Buffer(str, \"base64\");\n        } else if(typeof Uint8Array != \"undefined\") {\n            return util.Base64ToUint8(str);\n        } else {\n            return types.taggedValue(\"b\", str);\n        }\n    };\n\n    types.isBinary = function(x) {\n        if((typeof goog.global.Buffer != \"undefined\") && (x instanceof goog.global.Buffer)) {\n            return true;\n        } else if((typeof Uint8Array != \"undefined\") && (x instanceof Uint8Array)) {\n            return true;\n        } else {\n            return (x instanceof types.TaggedValue) && (x.tag === \"b\");\n        }\n    };\n\n    types.uri = function(s) {\n        return types.taggedValue(\"r\", s);\n    };\n\n    types.isURI = function(x) {\n        return (x instanceof types.TaggedValue) && (x.tag === \"r\");\n    };\n\n    /**\n     * @const\n     * @type {number}\n     */\n    types.KEYS = 0;\n\n    /**\n     * @const\n     * @type {number}\n     */\n    types.VALUES = 1;\n\n    /**\n     * @const\n     * @type {number}\n     */\n    types.ENTRIES = 2;\n\n    /**\n     * @constructor\n     */\n    types.TransitArrayMapIterator = function Transit$ArrayMapIterator(entries, type) {\n        this.entries = entries;\n        this.type = type || types.KEYS;\n        this.idx = 0;\n    };\n\n    types.TransitArrayMapIterator.prototype.next = function() {\n        if(this.idx < this.entries.length) {\n\n            var value = null;\n\n            if(this.type === types.KEYS) {\n                value = this.entries[this.idx];\n            } else if(this.type === types.VALUES) {\n                value = this.entries[this.idx+1];\n            } else {\n                value = [this.entries[this.idx], this.entries[this.idx+1]];\n            }\n\n            var ret = {\n                \"value\": value,\n                \"done\": false\n            };\n\n            this.idx+=2;\n\n            return ret;\n        } else {\n            return {\"value\": null, \"done\": true}\n        }\n    };\n    types.TransitArrayMapIterator.prototype[\"next\"] = types.TransitArrayMapIterator.prototype.next;\n\n    types.TransitArrayMapIterator.prototype[types.ITERATOR] = function() {\n        return this;\n    };\n\n    /**\n     * @constructor\n     */\n    types.TransitMapIterator = function Transit$MapIterator(map, type) {\n        this.map = map;\n        this.type = type || types.KEYS;\n        this.keys = this.map.getKeys();\n        this.idx = 0;\n        /** @type {?Object} */\n        this.bucket = null;\n        this.bucketIdx = 0;\n    };\n\n    types.TransitMapIterator.prototype.next = function() {\n        if(this.idx < this.map.size) {\n            if((this.bucket == null) || !(this.bucketIdx < this.bucket.length)) {\n                this.bucket = this.map.map[this.keys[this.idx]];\n                this.bucketIdx = 0;\n            }\n\n            var value = null;\n            if(this.type === types.KEYS) {\n                value = this.bucket[this.bucketIdx];\n            } else if(this.type === types.VALUES) {\n                value = this.bucket[this.bucketIdx+1];\n            } else {\n                value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx+1]];\n            }\n\n            var ret = {\n                \"value\": value,\n                \"done\": false\n            };\n\n            this.idx++;\n            this.bucketIdx+=2;\n\n            return ret;\n        } else {\n            return {\"value\": null, \"done\": true};\n        }\n    };\n    types.TransitMapIterator.prototype[\"next\"] = types.TransitMapIterator.prototype.next;\n\n    types.TransitMapIterator.prototype[types.ITERATOR] = function() {\n        return this;\n    };\n\n    types.mapEquals = function(me, you) {\n        if ((me instanceof types.TransitMap) && types.isMap(you)) {\n            if(me.size !== you.size) return false;\n            for (var code in me.map) {\n                var bucket = me.map[code];\n                for (var j = 0; j < bucket.length; j+=2) {\n                    if (!eq.equals(bucket[j+1], you.get(bucket[j]))) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        } else if((me instanceof types.TransitArrayMap) && types.isMap(you)) {\n            if(me.size !== you.size) return false;\n            var entries = me._entries;\n            for (var j = 0; j < entries.length; j+=2) {\n                if (!eq.equals(entries[j+1], you.get(entries[j]))) {\n                    return false;\n                }\n            }\n            return true;\n        } else if(you != null && (typeof you === \"object\")) {\n            var ks    = util.objectKeys(you),\n                kslen = ks.length;\n            if(me.size === kslen) {\n                for(var i = 0 ; i < kslen; i++) {\n                    var k = ks[i];\n                    if(!me.has(k) || !eq.equals(you[k], me.get(k))) {\n                        return false;\n                    }\n                }\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * @const\n     * @type {number}\n     */\n    types.SMALL_ARRAY_MAP_THRESHOLD = 8;\n\n    /**\n     * @const\n     * @type {number}\n     */\n    types.ARRAY_MAP_THRESHOLD = 32;\n\n    /**\n     * @const\n     * @type {number}\n     */\n    types.ARRAY_MAP_ACCESS_THRESHOLD = 32;\n\n    types.print = function(x) {\n        if(x == null) {\n            return \"null\";\n        } if(goog.typeOf(x) === \"array\") {\n            return \"[\" + x.toString() + \"]\";\n        } else if(goog.typeOf(x) === \"string\") {\n            return \"\\\"\" + x + \"\\\"\";\n        } else {\n            return x.toString();\n        }\n    };\n\n    types.printMap = function(map) {\n        var idx = 0,\n            str = \"TransitMap {\";\n        map.forEach(function(v, k) {\n            str += types.print(k) + \" => \" + types.print(v);\n            if(idx < map.size-1) {\n                str += \", \";\n            }\n            idx++;\n        });\n        return str + \"}\";\n    };\n\n    types.printSet = function(set) {\n        var idx  = 0,\n            str  = \"TransitSet {\";\n        set.forEach(function(v) {\n            str += types.print(v);\n            if(idx < set.size-1) {\n                str += \", \";\n            }\n            idx++;\n        });\n        return str + \"}\";\n    };\n\n    /**\n     * @constructor\n     * @param {Array} entries\n     */\n    types.TransitArrayMap = function Transit$ArrayMap(entries) {\n        this._entries = entries;\n        this.backingMap = null;\n        this.hashCode = -1;\n        this.size = entries.length / 2;\n        this.accesses = 0;\n    };\n\n    types.TransitArrayMap.prototype.toString = function() {\n        return types.printMap(this);\n    };\n\n    types.TransitArrayMap.prototype[\"inspect\"] = function() {\n        return this.toString();\n    };\n\n    types.TransitArrayMap.prototype.convert = function() {\n        if(this.backingMap) {\n            throw Error(\"Invalid operation, already converted\");\n        }\n        if(this.size < types.SMALL_ARRAY_MAP_THRESHOLD) return false;\n        this.accesses++;\n        if(this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {\n            this.backingMap = types.map(this._entries, false, true);\n            this._entries = [];\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    types.TransitArrayMap.prototype.clear = function() {\n        this.hashCode = -1;\n        if(this.backingMap) {\n            this.backingMap.clear();\n            this.size = 0;\n        } else {\n            this._entries = [];\n            this.size = 0;\n        }\n    };\n    types.TransitArrayMap.prototype[\"clear\"] = types.TransitArrayMap.prototype.clear;\n\n    types.TransitArrayMap.prototype.keys = function() {\n        if(this.backingMap) {\n            return this.backingMap.keys();\n        } else {\n            return new types.TransitArrayMapIterator(this._entries, types.KEYS);\n        }\n    };\n    types.TransitArrayMap.prototype[\"keys\"] = types.TransitArrayMap.prototype.keys;\n\n    types.TransitArrayMap.prototype.keySet = function() {\n        if(this.backingMap) {\n            return this.backingMap.keySet();\n        } else {\n            var ret = [];\n            for(var i = 0, j = 0; j < this._entries.length; i++, j+=2) {\n                ret[i] = this._entries[j];\n            }\n            return ret;\n        }\n    };\n    types.TransitArrayMap.prototype[\"keySet\"] = types.TransitArrayMap.prototype.keySet;\n\n    types.TransitArrayMap.prototype.entries = function() {\n        if(this.backingMap) {\n            return this.backingMap.entries();\n        } else {\n            return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);\n        }\n    };\n    types.TransitArrayMap.prototype[\"entries\"] = types.TransitArrayMap.prototype.entries;\n\n    types.TransitArrayMap.prototype.values = function() {\n        if(this.backingMap) {\n            return this.backingMap.values();\n        } else {\n            return new types.TransitArrayMapIterator(this._entries, types.VALUES);\n        }\n    };\n    types.TransitArrayMap.prototype[\"values\"] = types.TransitArrayMap.prototype.values;\n\n    /**\n     * @param {function(*,*)} f\n     */\n    types.TransitArrayMap.prototype.forEach = function(f) {\n        if(this.backingMap) {\n            this.backingMap.forEach(f);\n        } else {\n            for(var i = 0; i < this._entries.length; i+=2) {\n                f(this._entries[i+1], this._entries[i]);\n            }\n        }\n    };\n    types.TransitArrayMap.prototype[\"forEach\"] = types.TransitArrayMap.prototype.forEach;\n\n    /**\n     * @param {*} k\n     * @param {*=} notFound\n     * @returns {*}\n     */\n    types.TransitArrayMap.prototype.get = function(k, notFound) {\n        if(this.backingMap) {\n            return this.backingMap.get(k);\n        } else {\n            if(this.convert()) {\n                return this.get(k);\n            } else {\n                for(var i = 0; i < this._entries.length; i+=2) {\n                    if(eq.equals(this._entries[i], k)) {\n                        return this._entries[i+1];\n                    }\n                }\n                return notFound;\n            }\n        }\n    };\n    types.TransitArrayMap.prototype[\"get\"] = types.TransitArrayMap.prototype.get;\n\n    types.TransitArrayMap.prototype.has = function(k) {\n        if(this.backingMap) {\n            return this.backingMap.has(k);\n        } else {\n            if(this.convert()) {\n                return this.has(k);\n            } else {\n                for(var i = 0; i < this._entries.length; i+=2) {\n                    if(eq.equals(this._entries[i], k)) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        }\n    };\n    types.TransitArrayMap.prototype[\"has\"] = types.TransitArrayMap.prototype.has;\n\n    types.TransitArrayMap.prototype.set = function(k, v) {\n        this.hashCode = -1;\n        if(this.backingMap) {\n            this.backingMap.set(k, v);\n            this.size = this.backingMap.size;\n        } else {\n            for(var i = 0; i < this._entries.length; i+=2) {\n                if(eq.equals(this._entries[i], k)) {\n                    this._entries[i+1] = v;\n                    return;\n                }\n            }\n\n            this._entries.push(k);\n            this._entries.push(v);\n            this.size++;\n\n            if(this.size > types.ARRAY_MAP_THRESHOLD) {\n                this.backingMap = types.map(this._entries, false, true);\n                this._entries = null;\n            }\n        }\n    };\n    types.TransitArrayMap.prototype[\"set\"] = types.TransitArrayMap.prototype.set;\n\n    types.TransitArrayMap.prototype[\"delete\"] = function(k) {\n        this.hashCode = -1;\n        if(this.backingMap) {\n            var ret = this.backingMap.delete(k);\n            this.size = this.backingMap.size;\n            return ret;\n        } else {\n            for(var i = 0; i < this._entries.length; i+=2) {\n                if(eq.equals(this._entries[i], k)) {\n                    var ret = this._entries[i+1];\n                    this._entries.splice(i, 2);\n                    this.size--;\n                    return ret;\n                }\n            }\n        }\n    };\n\n    types.TransitArrayMap.prototype.clone = function() {\n        var clone = types.map();\n\n        this.forEach(function(v, k) {\n            clone.set(k, v);\n        });\n\n        return clone;\n    };\n    types.TransitArrayMap.prototype[\"clone\"] = types.TransitArrayMap.prototype.clone;\n\n    types.TransitArrayMap.prototype[types.ITERATOR] = function() {\n        return this.entries();\n    };\n\n    types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {\n        if(this.backingMap) {\n            return this.backingMap.com$cognitect$transit$hashCode();\n        } else {\n            if(this.hashCode === -1) {\n                this.hashCode = eq.hashMapLike(this);\n            }\n            return this.hashCode;\n        }\n    };\n\n    types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {\n        if(this.backingMap) {\n            return types.mapEquals(this.backingMap, other);\n        } else {\n            return types.mapEquals(this, other);\n        }\n    };\n\n    /**\n     * TransitMap\n     *   A hash map. Support arbitrarily complex keys. Lookup is based on the value of the\n     *   the key not identity. Otherwise the API follows the ES6 map interface:\n     *   http://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n     * @constructor\n     * @param {null|Array=} keys\n     * @param {null|Object=} map\n     * @param {null|number=} size\n     */\n    types.TransitMap = function Transit$Map(keys, map, size) {\n        this.map = map || {};\n        this._keys = keys || [];\n        this.size = size || 0;\n        this.hashCode = -1;\n    };\n\n    types.TransitMap.prototype.toString = function() {\n        return types.printMap(this);\n    };\n\n    types.TransitMap.prototype[\"inspect\"] = function() {\n        return this.toString();\n    };\n\n    types.TransitMap.prototype.clear = function() {\n        this.hashCode = -1;\n        this.map = {};\n        this._keys = [];\n        this.size = 0;\n    };\n    types.TransitMap.prototype[\"clear\"] = types.TransitMap.prototype.clear;\n\n    types.TransitMap.prototype.getKeys = function() {\n        if(this._keys != null) {\n            return this._keys;\n        } else {\n            return util.objectKeys(this.map);\n        }\n    };\n\n    types.TransitMap.prototype[\"delete\"] = function(k) {\n        this.hashCode = -1;\n        this._keys = null;\n        var code   = eq.hashCode(k),\n            bucket = this.map[code];\n\n        for(var i = 0; i < bucket.length; i+=2) {\n            if(eq.equals(k, bucket[i])) {\n                var ret = bucket[i+1];\n                bucket.splice(i,2);\n                if(bucket.length === 0) {\n                    delete this.map[code];\n                }\n                this.size--;\n                return ret;\n            }\n        }\n    };\n\n    types.TransitMap.prototype.entries = function() {\n        return new types.TransitMapIterator(this, types.ENTRIES);\n    };\n    types.TransitMap.prototype[\"entries\"] = types.TransitMap.prototype.entries;\n\n    types.TransitMap.prototype.forEach = function(callback) {\n        var ks = this.getKeys();\n        for(var i = 0; i < ks.length; i++) {\n            var bucket = this.map[ks[i]];\n            for(var j = 0; j < bucket.length; j+=2) {\n                callback(bucket[j+1], bucket[j], this);\n            }\n        }\n    };\n    types.TransitMap.prototype[\"forEach\"] = types.TransitMap.prototype.forEach;\n\n    types.TransitMap.prototype.get = function(k, notFound) {\n        var code   = eq.hashCode(k),\n            bucket = this.map[code];\n        if(bucket != null) {\n            for(var i = 0; i < bucket.length; i+=2) {\n                if(eq.equals(k,bucket[i])) {\n                    return bucket[i+1];\n                }\n            }\n        } else {\n            return notFound;\n        }\n    };\n    types.TransitMap.prototype[\"get\"] = types.TransitMap.prototype.get;\n\n    types.TransitMap.prototype.has = function(k) {\n        var code   = eq.hashCode(k),\n            bucket = this.map[code];\n        if(bucket != null) {\n            for(var i = 0; i < bucket.length; i+=2) {\n                if(eq.equals(k, bucket[i])) {\n                    return true;\n                }\n            }\n            return false;\n        } else {\n            return false;\n        }\n    };\n    types.TransitMap.prototype[\"has\"] = types.TransitMap.prototype.has;\n\n    types.TransitMap.prototype.keys = function() {\n        return new types.TransitMapIterator(this, types.KEYS);\n    };\n    types.TransitMap.prototype[\"keys\"] = types.TransitMap.prototype.keys;\n\n    types.TransitMap.prototype.keySet = function() {\n        var keys = this.getKeys(),\n            ret  = [];\n\n        for(var i = 0; i < keys.length; i++) {\n            var bucket = this.map[keys[i]];\n            for(var j = 0; j < bucket.length; j+=2) {\n                ret.push(bucket[j]);\n            }\n        }\n\n        return ret;\n    };\n    types.TransitMap.prototype[\"keySet\"] = types.TransitMap.prototype.keySet;\n\n    types.TransitMap.prototype.set = function(k, v) {\n        this.hashCode = -1;\n        var code = eq.hashCode(k),\n            bucket = this.map[code];\n        if(bucket == null) {\n            if(this._keys) {\n                this._keys.push(code);\n            }\n            this.map[code] = [k, v];\n            this.size++;\n        } else {\n            var newEntry = true;\n            for(var i = 0; i < bucket.length; i+=2) {\n                if(eq.equals(v, bucket[i])) {\n                    newEntry = false;\n                    bucket[i] = v;\n                    break;\n                }\n            }\n            if(newEntry) {\n                bucket.push(k);\n                bucket.push(v);\n                this.size++;\n            }\n        }\n    };\n    types.TransitMap.prototype[\"set\"] = types.TransitMap.prototype.set;\n\n    types.TransitMap.prototype.values = function() {\n        return new types.TransitMapIterator(this, types.VALUES);\n    };\n    types.TransitMap.prototype[\"values\"] = types.TransitMap.prototype.values;\n\n    types.TransitMap.prototype.clone = function() {\n        var clone = types.map();\n\n        this.forEach(function(v, k) {\n           clone.set(k, v);\n        });\n\n        return clone;\n    };\n    types.TransitMap.prototype[\"clone\"] = types.TransitMap.prototype.clone;\n\n    types.TransitMap.prototype[types.ITERATOR] = function() {\n        return this.entries();\n    };\n\n    types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {\n        if(this.hashCode === -1) {\n            this.hashCode = eq.hashMapLike(this);\n        }\n        return this.hashCode;\n    };\n\n    types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {\n        return types.mapEquals(this, other);\n    };\n\n    /**\n     * @param {Array=} arr\n     * @param {boolean=} checkDups\n     * @param {boolean=} hashMap\n     * @returns {com.cognitect.transit.MapLike}\n     */\n    types.map = function(arr, checkDups, hashMap) {\n        arr = arr || [];\n        checkDups = (checkDups === false) ? checkDups : true;\n        hashMap = (hashMap === true) ? hashMap : false;\n\n        if(!hashMap && (arr.length <= (types.ARRAY_MAP_THRESHOLD*2))) {\n            if(checkDups) {\n                var t = arr;\n                arr = [];\n                for(var i = 0; i < t.length; i+=2) {\n                    var seen = false;\n                    for(var j = 0; j < arr.length; j+=2) {\n                        if(eq.equals(arr[j], t[i])) {\n                            arr[j+1] = t[i+1];\n                            seen = true;\n                            break;\n                        }\n                    }\n                    if(!seen) {\n                        arr.push(t[i]);\n                        arr.push(t[i+1]);\n                    }\n                }\n            }\n            return new types.TransitArrayMap(arr);\n        } else {\n            var map  = {},\n                keys = [],\n                size = 0;\n            for(var i = 0; i < arr.length; i+=2) {\n                var code = eq.hashCode(arr[i]),\n                    bucket = map[code];\n                if(bucket == null) {\n                    keys.push(code);\n                    map[code] = [arr[i], arr[i+1]];\n                    size++;\n                } else {\n                    var newEntry = true;\n                    for(var j = 0; j < bucket.length; j+= 2) {\n                        if(eq.equals(bucket[j], arr[i])) {\n                            bucket[j+1] = arr[i+1];\n                            newEntry = false;\n                            break;\n                        }\n                    }\n                    if(newEntry) {\n                        bucket.push(arr[i]);\n                        bucket.push(arr[i+1]);\n                        size++;\n                    }\n                }\n            }\n            return new types.TransitMap(keys, map, size);\n        }\n    };\n\n    types.isArrayMap = function(x) {\n        return (x instanceof types.TransitArrayMap);\n    };\n\n    types.isMap = function(x) {\n        return ((x instanceof types.TransitArrayMap) ||\n                (x instanceof types.TransitMap));\n    };\n\n    /**\n     * @constructor\n     * @param {com.cognitect.transit.MapLike} map\n     */\n    types.TransitSet = function Transit$Set(map) {\n        this.map = map;\n        this.size = map.size;\n    };\n\n    types.TransitSet.prototype.toString = function() {\n        return types.printSet(this);\n    };\n\n    types.TransitSet.prototype[\"inspect\"] = function() {\n        return this.toString();\n    };\n\n    types.TransitSet.prototype.add = function(value) {\n        this.map.set(value, value);\n        this.size = this.map.size;\n    };\n    types.TransitSet.prototype[\"add\"] = types.TransitSet.prototype.add;\n\n    types.TransitSet.prototype.clear = function() {\n        this.map = new types.TransitMap();\n        this.size = 0;\n    };\n    types.TransitSet.prototype[\"clear\"] = types.TransitSet.prototype.clear;\n\n    types.TransitSet.prototype[\"delete\"] = function(value) {\n        var ret = this.map.delete(value);\n        this.size = this.map.size;\n        return ret;\n    };\n\n    types.TransitSet.prototype.entries = function() {\n        return this.map.entries();\n    };\n    types.TransitSet.prototype[\"entries\"] = types.TransitSet.prototype.entries;\n\n    /**\n     * @param {function(*,*)} iterator\n     * @param {Object=} thisArg\n     */\n    types.TransitSet.prototype.forEach = function(iterator, thisArg) {\n        var self = this;\n        this.map.forEach(function(v, k, m) {\n            iterator(k, self);\n        });\n    };\n    types.TransitSet.prototype[\"forEach\"] = types.TransitSet.prototype.forEach;\n\n    types.TransitSet.prototype.has = function(value) {\n        return this.map.has(value);\n    };\n    types.TransitSet.prototype[\"has\"] = types.TransitSet.prototype.has;\n\n    types.TransitSet.prototype.keys = function() {\n        return this.map.keys();\n    };\n    types.TransitSet.prototype[\"keys\"] = types.TransitSet.prototype.keys;\n\n    types.TransitSet.prototype.keySet = function() {\n        return this.map.keySet();\n    };\n    types.TransitSet.prototype[\"keySet\"] = types.TransitSet.prototype.keySet;\n\n    types.TransitSet.prototype.values = function() {\n        return this.map.values();\n    };\n    types.TransitSet.prototype[\"values\"] = types.TransitSet.prototype.values;\n\n    types.TransitSet.prototype.clone = function() {\n        var clone = types.set();\n\n        this.forEach(function(k) {\n            clone.add(k);\n        });\n\n        return clone;\n    };\n    types.TransitSet.prototype[\"clone\"] = types.TransitSet.prototype.clone;\n\n    types.TransitSet.prototype[types.ITERATOR] = function() {\n        return this.values();\n    };\n\n    types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {\n        if(other instanceof types.TransitSet) {\n            if(this.size === other.size) {\n                return eq.equals(this.map, other.map);\n            }\n        } else {\n            return false;\n        }\n    };\n\n    types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {\n        return eq.hashCode(this.map);\n    };\n\n    /**\n     * @param {Array=} arr\n     * @returns {com.cognitect.transit.SetLike}\n     */\n    types.set = function(arr) {\n        arr = arr || [];\n\n        var map  = {},\n            keys = [],\n            size = 0;\n\n        for(var i = 0; i < arr.length; i++) {\n            var code = eq.hashCode(arr[i]),\n                vals = map[code];\n            if(vals == null) {\n                keys.push(code);\n                map[code] = [arr[i], arr[i]];\n                size++\n            } else {\n                var newEntry = true;\n                for(var j = 0; j < vals.length; j+= 2) {\n                    if(eq.equals(vals[j], arr[i])) {\n                        newEntry = false;\n                        break;\n                    }\n                }\n                if(newEntry) {\n                    vals.push(arr[i]);\n                    vals.push(arr[i]);\n                    size++;\n                }\n            }\n        }\n\n        return new types.TransitSet(new types.TransitMap(keys, map, size));\n    };\n\n    types.isSet = function(x) {\n        return x instanceof types.TransitSet;\n    };\n\n    types.quoted = function(obj) {\n        return types.taggedValue(\"'\", obj);\n    };\n\n    types.isQuoted = function(x) {\n        return (x instanceof types.TaggedValue) && (x.tag === \"'\");\n    };\n\n    types.list = function(xs) {\n        return types.taggedValue(\"list\", xs);\n    };\n\n    types.isList = function(x) {\n        return (x instanceof types.TaggedValue) && (x.tag === \"list\");\n    };\n\n    types.link = function(rep) {\n        return types.taggedValue(\"link\", rep);\n    };\n\n    types.isLink = function(x) {\n        return (x instanceof types.TaggedValue) && (x.tag === \"link\")\n    };\n\n    types.specialDouble = function(v) {\n        switch(v) {\n            case \"-INF\":\n                return -Infinity;\n            case \"INF\":\n                return Infinity;\n            case \"NaN\":\n                return NaN;\n            default:\n                throw new Error(\"Invalid special double value \" + v);\n                break;\n        }\n    };\n\n});\n\n"],
"names":["goog","provide","require","scope","types","com","cognitect","transit","util","eq","Long","math","Symbol","ITERATOR","iterator","TaggedValue","types.TaggedValue","Transit$TaggedValue","tag","rep","hashCode","prototype","toString","types.TaggedValue.prototype.toString","equiv","types.TaggedValue.prototype.equiv","other","equals","com$cognitect$transit$equals","types.TaggedValue.prototype.com$cognitect$transit$equals","com$cognitect$transit$hashCode","types.TaggedValue.prototype.com$cognitect$transit$hashCode","hashCombine","taggedValue","types.taggedValue","isTaggedValue","types.isTaggedValue","x","nullValue","types.nullValue","boolValue","types.boolValue","s","MAX_INT","fromString","MIN_INT","intValue","types.intValue","n","greaterThan","lessThan","toNumber","Long.prototype.equiv","Long.prototype.com$cognitect$transit$equals","Long.prototype.com$cognitect$transit$hashCode","toInt","isInteger","types.isInteger","isNaN","Infinity","parseFloat","parseInt","floatValue","types.floatValue","bigInteger","types.bigInteger","isBigInteger","types.isBigInteger","bigDecimalValue","types.bigDecimalValue","isBigDecimal","types.isBigDecimal","charValue","types.charValue","Keyword","types.Keyword","Transit$Keyword","name","_name","types.Keyword.prototype.toString","idx","indexOf","substring","length","types.Keyword.prototype.equiv","types.Keyword.prototype.com$cognitect$transit$equals","types.Keyword.prototype.com$cognitect$transit$hashCode","keyword","types.keyword","isKeyword","types.isKeyword","types.Symbol","Transit$Symbol","types.Symbol.prototype.toString","types.Symbol.prototype.equiv","types.Symbol.prototype.com$cognitect$transit$equals","types.Symbol.prototype.com$cognitect$transit$hashCode","symbol","types.symbol","isSymbol","types.isSymbol","hexFor","types.hexFor","aLong","sidx","eidx","ret","i","shift","mask","fromInt","shiftLeft","shiftRightUnsigned","and","UUID","types.UUID","Transit$UUID","high","low","getLeastSignificantBits","types.UUID.prototype.getLeastSignificantBits","getMostSignificantBits","types.UUID.prototype.getMostSignificantBits","types.UUID.prototype.toString","hi64","lo64","types.UUID.prototype.equiv","types.UUID.prototype.com$cognitect$transit$equals","types.UUID.prototype.com$cognitect$transit$hashCode","UUIDfromString","types.UUIDfromString","uuidFromString","replace","hi32","lo32","off","fromBits","uuid","types.uuid","isUUID","types.isUUID","date","types.date","Date","verboseDate","types.verboseDate","Date.prototype.com$cognitect$transit$equals","valueOf","Date.prototype.com$cognitect$transit$hashCode","binary","types.binary","str","decoder","preferBuffers","global","Buffer","Uint8Array","Base64ToUint8","isBinary","types.isBinary","uri","types.uri","isURI","types.isURI","KEYS","VALUES","ENTRIES","TransitArrayMapIterator","types.TransitArrayMapIterator","Transit$ArrayMapIterator","entries","type","next","types.TransitArrayMapIterator.prototype.next","value","TransitMapIterator","types.TransitMapIterator","Transit$MapIterator","map","keys","getKeys","bucket","bucketIdx","types.TransitMapIterator.prototype.next","size","mapEquals","types.mapEquals","me","you","TransitMap","isMap","code","j","get","TransitArrayMap","_entries","ks","objectKeys","kslen","k","has","SMALL_ARRAY_MAP_THRESHOLD","ARRAY_MAP_THRESHOLD","ARRAY_MAP_ACCESS_THRESHOLD","print","types.print","typeOf","printMap","types.printMap","forEach","v","printSet","types.printSet","set","types.TransitArrayMap","Transit$ArrayMap","backingMap","accesses","types.TransitArrayMap.prototype.toString","convert","types.TransitArrayMap.prototype.convert","Error","clear","types.TransitArrayMap.prototype.clear","types.TransitArrayMap.prototype.keys","keySet","types.TransitArrayMap.prototype.keySet","types.TransitArrayMap.prototype.entries","values","types.TransitArrayMap.prototype.values","types.TransitArrayMap.prototype.forEach","f","types.TransitArrayMap.prototype.get","notFound","types.TransitArrayMap.prototype.has","types.TransitArrayMap.prototype.set","push","delete","splice","clone","types.TransitArrayMap.prototype.clone","types.TransitArrayMap.prototype.com$cognitect$transit$hashCode","hashMapLike","types.TransitArrayMap.prototype.com$cognitect$transit$equals","types.TransitMap","Transit$Map","_keys","types.TransitMap.prototype.toString","types.TransitMap.prototype.clear","types.TransitMap.prototype.getKeys","types.TransitMap.prototype.entries","types.TransitMap.prototype.forEach","callback","types.TransitMap.prototype.get","types.TransitMap.prototype.has","types.TransitMap.prototype.keys","types.TransitMap.prototype.keySet","types.TransitMap.prototype.set","newEntry","types.TransitMap.prototype.values","types.TransitMap.prototype.clone","types.TransitMap.prototype.com$cognitect$transit$hashCode","types.TransitMap.prototype.com$cognitect$transit$equals","types.map","arr","checkDups","hashMap","t","seen","isArrayMap","types.isArrayMap","types.isMap","TransitSet","types.TransitSet","Transit$Set","types.TransitSet.prototype.toString","add","types.TransitSet.prototype.add","types.TransitSet.prototype.clear","types.TransitSet.prototype.entries","types.TransitSet.prototype.forEach","thisArg","self","m","types.TransitSet.prototype.has","types.TransitSet.prototype.keys","types.TransitSet.prototype.keySet","types.TransitSet.prototype.values","types.TransitSet.prototype.clone","types.TransitSet.prototype.com$cognitect$transit$equals","types.TransitSet.prototype.com$cognitect$transit$hashCode","types.set","vals","isSet","types.isSet","quoted","types.quoted","obj","isQuoted","types.isQuoted","list","types.list","xs","isList","types.isList","link","types.link","isLink","types.isLink","specialDouble","types.specialDouble","NaN"]
}
