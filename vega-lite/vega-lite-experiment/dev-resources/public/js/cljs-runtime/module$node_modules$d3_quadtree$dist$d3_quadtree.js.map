{
"version":3,
"file":"module$node_modules$d3_quadtree$dist$d3_quadtree.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/d3-quadtree/dist/d3-quadtree.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_quadtree$dist$d3_quadtree\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-quadtree/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction tree_add(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don\u2019t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can\u2019t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn\u2019t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nexports.quadtree = quadtree;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","d3","add","tree","x","y","d","isNaN","parent","node","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","xm","ym","right","bottom","length","i","xp","_x","call","yp","_y","next","Array","j","Quad","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","prototype","treeProto.copy","child","source","target","pop","push","tree_add","cover","n","xz","yz","Infinity","tree_cover","Math","floor","z","tree_data","visit","extent","tree_extent","_","arguments","find","tree_find","radius","x2","y2","x3","y3","quads","q","dx","dy","d2","sqrt","remove","tree_remove","previous","retainer","removeAll","root","tree_root","size","tree_size","tree_visit","callback","visitAfter","tree_visitAfter","tree_x","tree_y","Object","defineProperty","value"]
}
