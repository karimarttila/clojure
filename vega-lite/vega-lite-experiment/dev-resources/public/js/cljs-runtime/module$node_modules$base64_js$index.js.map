{
"version":3,
"file":"module$node_modules$base64_js$index.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/base64-js/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$base64_js$index\"] = function(global,require,module,exports) {\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","getLens","b64","len","length","Error","validLen","indexOf","placeHoldersLen","encodeChunk","uint8","start","end","output","i","tmp","push","lookup","join","byteLength","lens","toByteArray","arr","Arr","curByte","revLookup","charCodeAt","fromByteArray","extraBytes","parts","len2","maxChunkLength","Uint8Array","Array","code"]
}
