{"version":3,"sources":["ajax/protocols.cljc"],"mappings":"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","names":["ajax$protocols$AjaxImpl$_js_ajax_request$dyn","x__4428__auto__","m__4429__auto__","ajax.protocols/-js-ajax-request","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","ajax.protocols/AjaxImpl","this","request","handler","ajax$protocols$AjaxRequest$_abort$dyn","ajax.protocols/-abort","ajax.protocols/AjaxRequest","ajax$protocols$AjaxResponse$_status$dyn","ajax.protocols/-status","ajax$protocols$AjaxResponse$_status_text$dyn","ajax.protocols/-status-text","ajax$protocols$AjaxResponse$_get_all_headers$dyn","ajax.protocols/-get-all-headers","ajax$protocols$AjaxResponse$_body$dyn","ajax.protocols/-body","ajax$protocols$AjaxResponse$_get_response_header$dyn","ajax.protocols/-get-response-header","ajax$protocols$AjaxResponse$_was_aborted$dyn","ajax.protocols/-was-aborted","ajax.protocols/AjaxResponse","header","ajax$protocols$Interceptor$_process_request$dyn","ajax.protocols/-process-request","ajax$protocols$Interceptor$_process_response$dyn","ajax.protocols/-process-response","ajax.protocols/Interceptor","response","this__4380__auto__","k__4381__auto__","this__4382__auto__","k75346","else__4383__auto__","G__75350","cljs.core/Keyword","status","body","status-text","headers","was-aborted","cljs.core.get","__extmap","this__4399__auto__","f__4400__auto__","init__4401__auto__","cljs.core.reduce","ret__4402__auto__","p__75351","vec__75352","k__4403__auto__","cljs.core.nth","v__4404__auto__","this__4394__auto__","writer__4395__auto__","opts__4396__auto__","pr-pair__4397__auto__","keyval__4398__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__75345","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4378__auto__","__meta","this__4375__auto__","__hash","this__4384__auto__","cljs.core/count","this__4376__auto__","h__4238__auto__","coll__4377__auto__","cljs.core/hash-unordered-coll","this75347","other75348","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","this__4389__auto__","k__4390__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4387__auto__","k__4388__auto__","pred__75380","cljs.core/keyword-identical?","expr__75381","cljs.core.assoc","this__4392__auto__","cljs.core/seq","cljs.core/MapEntry","this__4379__auto__","this__4385__auto__","entry__4386__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","ajax.protocols/Response","this__4423__auto__","cljs.core/List","writer__4424__auto__","cljs.core/-write","G__75349","extmap__4419__auto__","G__75402","cljs.core/record?","ajax.protocols/->Response","ajax.protocols/map->Response"],"sourcesContent":["(ns ajax.protocols)\n\n(defprotocol AjaxImpl\n  \"An abstraction for a javascript class that implements\n   Ajax calls.\"\n  (-js-ajax-request [this request handler]\n    \"Makes an actual ajax request.  All parameters except opts\n     are in JS format.  Should return an AjaxRequest.\"))\n\n(defprotocol AjaxRequest\n  \"An abstraction for a running ajax request.\"\n  (-abort [this]\n    \"Aborts a running ajax request, if possible.\"))\n\n(defprotocol AjaxResponse\n  \"An abstraction for an ajax response.\"\n  (-status [this]\n    \"Returns the HTTP Status of the response as an integer.\")\n  (-status-text [this]\n    \"Returns the HTTP Status Text of the response as a string.\")\n  (-get-all-headers [this]\n    \"Returns all headers as a map.\")\n  (-body [this]\n    \"Returns the response body as a string or as type specified in response-format such as a blob or arraybuffer.\")\n  (-get-response-header [this header]\n    \"Gets the specified response header (specified by a string) as a string.\")\n  (-was-aborted [this]\n    \"Was the response aborted.\"))\n\n(defprotocol Interceptor\n  \"An abstraction for something that processes requests and responses.\"\n  (-process-request [this request]\n    \"Transforms the opts\")\n  (-process-response [this response]\n    \"Transforms the raw response (an implementation of AjaxResponse)\"))\n\n(defrecord Response [status body status-text headers was-aborted]\n  AjaxResponse\n  (-body [this] (:body this))\n  (-status [this] (:status this))\n  (-status-text [this] (:status-text this))\n  (-get-all-headers [this] (:headers this))\n  (-get-response-header [this header] (get (:headers this) header))\n  (-was-aborted [this] (:was-aborted this)))\n"]}