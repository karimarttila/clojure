{
"version":3,
"file":"module$node_modules$vega_selections$build$vega_selection.js",
"lineCount":13,
"mappings":"AAAAA,cAAA,CAAe,wDAAf,CAA6E,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,gBAAvB,CAAgC,CACpH,SAAS,CAACH,MAAD,CAASI,OAAT,CAAkB,CACP,QAAnB,GAAA,MAAOD,iBAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DE,OAAA,CAAQD,gBAAR,CAAiBF,OAAA,CAAQ,+CAAR,CAAjB,CAAuCA,OAAA,CAAQ,2DAAR,CAAvC,CAA/D,CACkB,UAAlB,GAAA,MAAOI,OAAP,EAAgCA,MAAhC,CAAuCC,GAAvC,CAA6CD,MAAA,CAAO,CAAC,SAAD,CAAY,WAAZ,CAAyB,iBAAzB,CAAP,CAAoDD,OAApD,CAA7C,EACCJ,MAAA,CAA+B,WAAtB,GAAA,MAAOO,WAAP;AAAoCA,UAApC,CAAiDP,MAAjD,EAA2DQ,IAApE,CAA0EJ,OAAA,CAAQJ,MAAR,CAAeS,IAAf,CAAsB,EAAtB,CAA0BT,MAA1B,CAAiCS,IAAjC,CAAuCT,MAAvC,CAA8CS,IAA9C,CAD3E,CAF0B,CAA3B,CAAA,CAIC,IAJD,CAIQ,QAAS,CAACN,OAAD,CAAUO,QAAV,CAAoBC,cAApB,CAAoC,CAsDpDC,QAASA,oBAAmB,CAACC,CAAD,CAAI,CAC9B,MAAO,SAAA,CAACC,CAAD,CAAIC,CAAJ,CAAU,CAAU,CAAA,CAAAF,CAAA,CAAEC,CAAF,CAAV,OApDVE,EAAA,CAoD0BD,CApD1B,CAAQ,EAAR,CAAaC,CAAA,CAoDaD,CApDb,CAAQ,CAAR,CAAYC,CAAA,EAoDCD,CApDD,CAAS,CAAT,CAAaE,GAoD5B,CADa,CAmBhCC,QAASA,UAAS,CAACC,KAAD,CAAQC,KAAR,CAAe,CAAA,IAC3BC,OAASD,KAATC,CAAeA,MACfC,MAAAA,CAASF,KAATE,CAAeA,MAMnB,KAR+B,IAG3BC,EAAIF,MAAJE,CAAWC,MAHgB,CAI3BC,EAAI,CAJuB,CAK3BC,IAL2B,CAM3Bb,CAEJ,CAAOY,CAAP,CAAWF,CAAX,CAAc,EAAEE,CAAhB,CAQE,GAPAZ,CAOI,CAPAQ,MAAA,CAAOI,CAAP,CAOA,CANJZ,CAMI,CANFc,MAME,CANOjB,QAMP,CANgBkB,KAMhB,CANsBD,MAMtB,EANgCjB,QAAA,CAASkB,KAAT,CAAef,CAAf,CAAiBe,KAAjB,CAMhC,CALJF,IAKI,CALGb,CAAA,CAAEc,MAAF,CAASR,KAAT,CAKH,CAJAT,QAAA,CAASmB,MAAT,CAAgBH,IAAhB,CAIA,GAJuBA,IAIvB,CAJ8BhB,QAAA,CAASoB,QAAT,CAAkBJ,IAAlB,CAI9B,EAHAhB,QAAA,CAASmB,MAAT,CAAgBP,KAAA,CAAOG,CAAP,CAAhB,CAGA;CAH4BH,KAAA,CAAOG,CAAP,CAG5B,CAHwCf,QAAA,CAASoB,QAAT,CAAkBR,KAAA,CAAOG,CAAP,CAAlB,CAGxC,EAFAf,QAAA,CAASmB,MAAT,CAAgBP,KAAA,CAAOG,CAAP,CAAA,CAAU,CAAV,CAAhB,CAEA,GAF+BH,KAAA,CAAOG,CAAP,CAE/B,CAF2CH,KAAA,CAAOG,CAAP,CAAA,CAAUM,GAAV,CAAcrB,QAAd,CAAuBoB,QAAvB,CAE3C,EAvBUE,GAuBV,GAAAnB,CAAA,CAAEoB,IAAN,CAGE,IAAIvB,QAAA,CAASwB,OAAT,CAAiBZ,KAAA,CAAOG,CAAP,CAAjB,CAAA,CAAwD,CAAxD,CAA8BH,KAAA,CAAOG,CAAP,CAAA,CAAUU,OAAV,CAAkBT,IAAlB,CAA9B,CAA4DA,IAA5D,GAAqEJ,KAAA,CAAOG,CAAP,CAAzE,CACE,MAAO,CAAA,CADT,CAHF,IAOE,IA7BiBW,GA6BjB,GAAIvB,CAAJ,CAAMoB,IAAN,CACE,IAAI,CAACvB,QAAA,CAAS2B,OAAT,CAAiBX,IAAjB,CAAuBJ,KAAA,CAAOG,CAAP,CAAvB,CAAL,CAAwC,MAAO,CAAA,CAA/C,CADF,IAEO,IA5BSa,MA4BT,GAAIzB,CAAJ,CAAMoB,IAAN,CAEL,IAAI,CAACvB,QAAA,CAAS2B,OAAT,CAAiBX,IAAjB,CAAuBJ,KAAA,CAAOG,CAAP,CAAvB,CAAkC,CAAA,CAAlC,CAAwC,CAAA,CAAxC,CAAL,CAAqD,MAAO,CAAA,CAA5D,CAFK,IAGA,IAjCUc,KAiCV,GAAI1B,CAAJ,CAAMoB,IAAN,CAEL,IAAI,CAACvB,QAAA,CAAS2B,OAAT,CAAiBX,IAAjB,CAAuBJ,KAAA,CAAOG,CAAP,CAAvB,CAAkC,CAAA,CAAlC,CAAyC,CAAA,CAAzC,CAAL,CAAsD,MAAO,CAAA,CAA7D,CAFK,IAGA,IAnCSe,MAmCT,GAAI3B,CAAJ,CAAMoB,IAAN,EACD,CAACvB,QAAA,CAAS2B,OAAT,CAAiBX,IAAjB,CAAuBJ,KAAA,CAAOG,CAAP,CAAvB,CAAkC,CAAA,CAAlC,CAAyC,CAAA,CAAzC,CADA,CACgD,MAAO,CAAA,CAKlE,OAAO,CAAA,CArCwB;AAgGjC,IAAMgB,YAAc/B,QAAA,CAASkB,KAAT,CAxGCc,SAwGD,CAApB,CACMC,OApKNC,QAAkB,CAAC/B,CAAD,CAAI,CAUpBgC,QAASA,KAAI,CAAC7B,CAAD,CAAID,CAAJ,CAAO+B,EAAP,CAAWC,EAAX,CAAe,CAChB,IAAV,EAAID,EAAJ,GAAgBA,EAAhB,CAAqB,CAArB,CACU,KAAV,EAAIC,EAAJ,GAAgBA,EAAhB,CAAqB/B,CAArB,CAAuBQ,MAAvB,CAEA,KAAA,CAAOsB,EAAP,CAAYC,EAAZ,CAAA,CAAgB,CACd,IAAMC,IAAMF,EAANE,CAAWD,EAAXC,GAAkB,CACC,EAAzB,CAAIC,OAAA,CAAQjC,CAAA,CAAEgC,GAAF,CAAR,CAAgBjC,CAAhB,CAAJ,CAA4B+B,EAA5B,CAAiCE,GAAjC,CAAuC,CAAvC,CAA8CD,EAA9C,CAAmDC,GAFrC,CAKhB,MAAOF,GATmB,CAT5B,IAAII,MAAQrC,CAAZ,CACIoC,QAAUpC,CAEG,EAAjB,GAAIA,CAAJ,CAAMW,MAAN,GACE0B,KAEA,CAFQA,QAAA,CAACpC,CAAD,CAAIC,CAAJ,CAAU,CAAA,MAAAF,EAAA,CAAEC,CAAF,CAAA,CAAOC,CAAP,CAElB,CAAAkC,OAAA,CAAUrC,mBAAA,CAAoBC,CAApB,CAHZ,CAqCA,OAAO,CACLgC,KAAAA,IADK,CAELM,OATFA,QAAe,CAACnC,CAAD,CAAID,CAAJ,CAAO+B,EAAP,CAAWC,EAAX,CAAe,CAClB,IAAV,EAAID,EAAJ,GAAgBA,EAAhB,CAAqB,CAArB,CACU,KAAV,EAAIC,EAAJ,GAAgBA,EAAhB,CAAqB/B,CAArB,CAAuBQ,MAAvB,CACMC,GAAAA,CAAIoB,IAAA,CAAK7B,CAAL,CAAQD,CAAR,CAAW+B,EAAX,CAAeC,EAAf,CAAoB,CAApB,CACV,OAAOtB,GAAA,CAAIqB,EAAJ,EAAUI,KAAA,CAAMlC,CAAA,CAAES,EAAF,CAAM,CAAN,CAAN,CAAgBV,CAAhB,CAAV,CAA+B,CAACmC,KAAA,CAAMlC,CAAA,CAAES,EAAF,CAAN,CAAYV,CAAZ,CAAhC,CAAiDU,EAAjD,CAAqD,CAArD,CAAyDA,EAJpC,CAOvB,CAGL2B,MAtBFA,QAAc,CAACpC,CAAD,CAAID,CAAJ,CAAO+B,EAAP,CAAWC,EAAX,CAAe,CACjB,IAAV;AAAID,EAAJ,GAAgBA,EAAhB,CAAqB,CAArB,CACU,KAAV,EAAIC,EAAJ,GAAgBA,EAAhB,CAAqB/B,CAArB,CAAuBQ,MAAvB,CAEA,KAAA,CAAOsB,EAAP,CAAYC,EAAZ,CAAA,CAAgB,CACd,IAAMC,IAAMF,EAANE,CAAWD,EAAXC,GAAkB,CACC,EAAzB,CAAIC,OAAA,CAAQjC,CAAA,CAAEgC,GAAF,CAAR,CAAgBjC,CAAhB,CAAJ,CAA4BgC,EAA5B,CAAiCC,GAAjC,CAA0CF,EAA1C,CAA+CE,GAA/C,CAAqD,CAFvC,CAKhB,MAAOF,GAToB,CAmBtB,CAzCa,CAoKP,CAASL,WAAT,CADf,CAEMY,WAAaV,MAAbU,CAAoBR,IAF1B,CAGMS,YAAcX,MAAdW,CAAqBF,KAH3B,CAqHIG,IAAM,CACRC,QAASA,QAAS,CAACC,IAAD,CAAOC,KAAP,CAAc,CAC9B,GAAI,CAACD,IAAD,CAAMjC,MAAV,CAAkB,MAAOkC,MAIzB,KAL8B,IAE1BjC,EAAI,CAFsB,CAG1BF,EAAImC,KAAJnC,CAAUC,MAEd,CAAOC,CAAP,CAAWF,CAAX,CAAc,EAAEE,CAAhB,CAAgD,CAA7B,CAAIgC,IAAA,CAAKtB,OAAL,CAAauB,KAAA,CAAMjC,CAAN,CAAb,CAAJ,EAAgCgC,IAAA,CAAKE,IAAL,CAAUD,KAAA,CAAMjC,CAAN,CAAV,CAEnD,OAAOgC,KAPuB,CADxB,CAURG,YAAaA,QAAS,CAACH,IAAD,CAAOC,KAAP,CAAc,CAClC,MAAQD,KAAD,CAAMjC,MAAN,CAAuBiC,IAAA,CAAKI,MAAL,CAAY,QAAA,CAAAC,CAAA,CAAK,CAAA,MAAoB,EAApB,EAAAJ,KAAA,CAAMvB,OAAN,CAAc2B,CAAd,CAAA,CAAjB,CAAvB,CAAeJ,KADY,CAV5B,CAaRK,QAASA,QAAS,CAACN,IAAD,CAAOC,KAAP,CAAc,CAAA,IAC1BZ,GAAKpC,QAAA,CAASoB,QAAT,CAAkB4B,KAAA,CAAM,CAAN,CAAlB,CADqB;AAE1BX,GAAKrC,QAAA,CAASoB,QAAT,CAAkB4B,KAAA,CAAM,CAAN,CAAlB,CAELZ,GAAJ,CAASC,EAAT,GACED,EACA,CADKY,KAAA,CAAM,CAAN,CACL,CAAAX,EAAA,CAAKW,KAAA,CAAM,CAAN,CAFP,CAKA,IAAI,CAACD,IAAD,CAAMjC,MAAV,CAAkB,MAAO,CAACsB,EAAD,CAAKC,EAAL,CACrBU,KAAA,CAAK,CAAL,CAAJ,CAAcX,EAAd,GAAkBW,IAAA,CAAK,CAAL,CAAlB,CAA4BX,EAA5B,CACIW,KAAA,CAAK,CAAL,CAAJ,CAAcV,EAAd,GAAkBU,IAAA,CAAK,CAAL,CAAlB,CAA4BV,EAA5B,CACA,OAAOU,KAZuB,CAbxB,CA2BRO,YAAaA,QAAS,CAACP,IAAD,CAAOC,KAAP,CAAc,CAAA,IAC9BZ,GAAKpC,QAAA,CAASoB,QAAT,CAAkB4B,KAAA,CAAM,CAAN,CAAlB,CADyB,CAE9BX,GAAKrC,QAAA,CAASoB,QAAT,CAAkB4B,KAAA,CAAM,CAAN,CAAlB,CAELZ,GAAJ,CAASC,EAAT,GACED,EACA,CADKY,KAAA,CAAM,CAAN,CACL,CAAAX,EAAA,CAAKW,KAAA,CAAM,CAAN,CAFP,CAKA,IAAI,CAACD,IAAD,CAAMjC,MAAV,CAAkB,MAAO,CAACsB,EAAD,CAAKC,EAAL,CAEzB,IAAIA,EAAJ,CAASU,IAAA,CAAK,CAAL,CAAT,EAAoBA,IAAA,CAAK,CAAL,CAApB,CAA8BX,EAA9B,CACE,MAAO,EAEHW,KAAA,CAAK,CAAL,CAAJ,CAAcX,EAAd,GAAkBW,IAAA,CAAK,CAAL,CAAlB,CAA4BX,EAA5B,CACIW,KAAA,CAAK,CAAL,CAAJ,CAAcV,EAAd,GAAkBU,IAAA,CAAK,CAAL,CAAlB,CAA4BV,EAA5B,CAGF,OAAOU,KAlB2B,CA3B5B,CAqEVtD,QAAA,CAAQ8D,eAAR,CAtLAA,QAAwB,CAACC,IAAD,CAAO/C,KAAP,CAAcgD,EAAd,CAAkB,CACxC,IAAMC,KAAO,IAAA,CAAKC,OAAL,CAAaD,IAAb,CAAkBF,IAAlB,CACPI,KAAAA;AAAUF,IAAA,CAAOA,IAAP,CAAY9C,MAAZ,CAAmBoC,KAAnB,CAA2B,EACrCa,KAAAA,CAAUH,IAAA,CAAOA,IAAA,CAzGNI,YAyGM,CAAP,EAA2BJ,IAAA,CAzG1BI,YAyG0B,CAA3B,CAA4Cd,KAA5C,CAAoDe,IAAAA,EAC9DC,GAAAA,CAvHUC,WAuHVD,GAAYP,EACZT,MAAAA,CAAQjB,WAAA,CAAYtB,KAAZ,CAJd,KAKMyD,MAAQvB,UAAA,CAAWiB,IAAX,CAAoBZ,KAApB,CAEd,IADIkB,KACJ,GADcN,IACd,CADsB9C,MACtB,EAAIiB,WAAA,CAAY6B,IAAA,CAAQM,KAAR,CAAZ,CAAJ,GAAoClB,KAApC,CAA2C,MAAO,CAAA,CAElD,IAAIa,IAAJ,EAAeG,EAAf,CAA0B,CACxB,GAAqB,CAArB,GAAIH,IAAJ,CAAYM,IAAZ,CAAwB,MAAO,CAAA,CAC/B,IAAIvB,WAAA,CAAYgB,IAAZ,CAAqBZ,KAArB,CAAJ,CAAkCkB,KAAlC,CAA0CL,IAA1C,CAAkDM,IAAlD,CAAwD,MAAO,CAAA,CAFvC,CAK1B,MAAO,CAAA,CAfiC,CAuL1C1E,QAAA,CAAQ2E,gBAAR,CAzIAA,QAAyB,CAACZ,IAAD,CAAOC,EAAP,CAAWY,OAAX,CAAoBC,GAApB,CAAyB,CAE5CV,IAAAA,CAAU,CADVF,IACU,CADH,IAAA,CAAKC,OAAL,CAAaD,IAAb,CAAkBF,IAAlB,CACG,EAAOE,IAAP,CAAY9C,MAAZ,CAAmBoC,KAAnB,CAA2B,EAkBzC,KApBgD,IAG5CuB,SAAW,EAHiC,CAI5CC,SAAW,EAJiC,CAK5CC,MAAQ,EALoC,CAM5C/D,KAN4C,CAO5CC,MAP4C,CAS5C+D,aAT4C;AAU5CxD,cAV4C,CAW5CyD,GAX4C,CAY5CC,OAZ4C,CAe5C/D,EAAI+C,IAAJ/C,CAAYC,MAfgC,CAgB5CC,EAAI,CAhBwC,CAiB5C8D,UAjB4C,CAkB5CC,CAEJ,CAAO/D,CAAP,CAAWF,CAAX,CAAc,EAAEE,CAAhB,CAAmB,CACjBL,KAAA,CAAQkD,IAAA,CAAQ7C,CAAR,CACR2D,cAAA,CAAOhE,KAAP,CAAagE,IACb/D,OAAA,CAASD,KAAT,CAAeC,MACfC,MAAA,CAASF,KAAT,CAAeE,MAEViE,WAAA,CAAI,CAAT,KAAYC,CAAZ,CAAgBnE,MAAhB,CAAuBG,MAAvB,CAA+B+D,UAA/B,CAAmCC,CAAnC,CAAsC,EAAED,UAAxC,CACE3D,cAKA,CALQP,MAAA,CAAOkE,UAAP,CAKR,CAJAF,GAIA,CAJMJ,QAAA,CAASrD,cAAT,CAAeA,KAAf,CAIN,GAJgCqD,QAAA,CAASrD,cAAT,CAAeA,KAAf,CAIhC,CAJwD,EAIxD,EAHA0D,OAGA,CAHUD,GAAA,CAAID,aAAJ,CAGV,GAHwBC,GAAA,CAAID,aAAJ,CAGxB,CAHoC,EAGpC,EAFAD,KAAA,CAAMvD,cAAN,CAAYA,KAAZ,CAEA,CAFqBK,cAErB,CAF4BL,cAAA,CAAMK,IAAN,CAAWwD,MAAX,CAAkB,CAAlB,CAE5B,CADAC,cACA,CADQnC,GAAA,CAAItB,cAAJ,CAAW,QAAX,CACR,CAAAoD,GAAA,CAAID,aAAJ,CAAA,CAAYM,cAAA,CAAMJ,OAAN;AAAe5E,QAAA,CAASiF,KAAT,CAAerE,KAAA,CAAOiE,UAAP,CAAf,CAAf,CASVR,QAAJ,GACEO,OACA,CADUJ,QAAA,CAASE,aAAT,CACV,GAD6BF,QAAA,CAASE,aAAT,CAC7B,CAD8C,EAC9C,EAAAE,OAAA,CAAQ3B,IAAR,CAAajD,QAAA,CAASiF,KAAT,CAAerE,KAAf,CAAA,CAAuBsE,MAAvB,CAA8B,QAAA,CAACC,GAAD,CAAMC,IAAN,CAAYP,CAAZ,CAAmB,CAAA,MAAAM,IAAA,CAAIxE,MAAA,CAAOkE,CAAP,CAAJ,CAAc3D,KAAd,CAAA,CAAuBkE,IAAvB,CAA6BD,GAA7B,CAAjD,CAAoF,EAApF,CAAb,CAFF,CArBiB,CA4BnB1B,EAAA,CAAKA,EAAL,EAhNY4B,OAiNZC,OAAA,CAAOC,IAAP,CAAYhB,QAAZ,CAAA,CAAsBiB,OAAtB,CAA8B,QAAA,CAAAtE,KAAA,CAAS,CACrCqD,QAAA,CAASrD,KAAT,CAAA,CAAkBoE,MAAA,CAAOC,IAAP,CAAYhB,QAAA,CAASrD,KAAT,CAAZ,CAAA,CAA6BG,GAA7B,CAAiC,QAAA,CAAAqD,IAAA,CAAQ,CAAA,MAAAH,SAAA,CAASrD,KAAT,CAAA,CAAgBwD,IAAhB,CAAA,CAAzC,CAAA,CAAgEQ,MAAhE,CAAuE,QAAA,CAACO,GAAD,CAAML,IAAN,CAAe,CAAA,MAAQrB,KAAAA,EAAR,GAAA0B,GAAA,CAAoBL,IAApB,CAA2BvC,GAAA,CAAI4B,KAAA,CAAMvD,KAAN,CAAJ,CAAmB,GAAnB,CAAyBuC,EAAzB,CAAA,CAA6BgC,GAA7B,CAAkCL,IAAlC,CAA3B,CAAtF,CADmB,CAAvC,CAGAxB,KAAA,CAAU0B,MAAA,CAAOC,IAAP,CAAYf,QAAZ,CAENH,QAAJ,EAAeT,IAAf,CAAuB9C,MAAvB;CAEE,OAAA,CAA+B,EAA/B,CAAA,aAAA,CAEI,EAFJ,CAAAyD,QAAA,CADYD,GAAAoB,CArNAC,SAqNAD,CAtNAE,SAuNZ,CAAA,CAxNUP,OAwNM,GAAA5B,EAAA,EAAe,OAAA,CArNxBoC,EAqNwB,CACvBjC,IAAA,CAAQsB,MAAR,CAAe,QAAA,CAACO,GAAD,CAAMK,CAAN,CAAa,CAAA,MAAAL,IAAA,CAAIxC,IAAJ,CAAA,KAAA,CAAAwC,GAAA,CAAA,OAAA,CAAA,iBAAA,CAAYjB,QAAA,CAASsB,CAAT,CAAZ,CAAA,CAAA,CAA0BL,GAA1B,CAA5B,CAA4D,EAA5D,CADuB,CAAA,OAAf,GAEZ,aAAA,CAtNIM,GAsNJ,CACKnC,IAAA,CAAQvC,GAAR,CAAY,QAAA,CAAAyE,CAAA,CAAM,CAAA,IAAA,oBAAA,EAAA,OAAA,oBAAA,CAxNpBD,EAwNoB,CACjBrB,QAAA,CAASsB,CAAT,CADiB,CAAA,mBAAA,CAAlB,CADL,CAAA,aAFY,CAFlB,CAWA,OAAOvB,SAjEyC,CA0IlD9E,QAAA,CAAQuG,aAAR,CArOAA,QAAsB,CAACxC,IAAD,CAAO/C,KAAP,CAAcgD,EAAd,CAAkB,CAAA,IAClCC,KAAO,IAAA,CAAKC,OAAL,CAAaD,IAAb,CAAkBF,IAAlB,CACPI,KAAAA,CAAUF,IAAA,CAAOA,IAAP,CAAY9C,MAAZ,CAAmBoC,KAAnB,CAA2B,EACrCa,KAAAA,CAAUH,IAAA,CAAOA,IAAA,CA5DJI,YA4DI,CAAP;AAA2BJ,IAAA,CA5DxBI,YA4DwB,CAA3B,CAA4Cd,KAA5C,CAAoDe,IAAAA,EAC9DC,GAAAA,CA1EYC,WA0EZD,GAAYP,EAShB,KAbsC,IAKlC5C,EAAI+C,IAAJ/C,CAAYC,MALsB,CAMlCC,EAAI,CAN8B,CAOlCL,KAPkC,CAQlCuF,IARkC,CASlCC,KATkC,CAUlCxB,IAGJ,CAAO3D,CAAP,CAAWF,CAAX,CAAc,EAAEE,CAAhB,CAGE,GAFAL,KAEI,CAFIkD,IAAA,CAAQ7C,CAAR,CAEJ,CAAA8C,IAAA,EAAWG,EAAf,CAKE,IAHAiC,IAGI,CAHGA,IAGH,EAHW,EAGX,CAFJC,KAEI,CAFID,IAAA,CAAKvB,IAAL,CAAYhE,KAAZ,CAAkBgE,IAAlB,CAEJ,EAF+B,CAE/B,CAAU,EAAV,GAAAwB,KAAJ,CAAA,CACAC,KAAA,CAAI3F,SAAA,CAAUC,KAAV,CAAiBC,KAAjB,CACJuF,KAAA,CAAKvB,IAAL,CAAA,CAAayB,KAAA,CAAI,EAAJ,CAAS,EAAED,KAGxB,IAAIC,KAAJ,EAA0B,CAA1B,GAAStC,IAAT,CAAiBM,IAAjB,CAA6B,MAAO,CAAA,CACpC,IAAI,CAACgC,KAAL,EAAUD,KAAV,GAAoBrC,IAAA,CAAQuC,GAAR,CAAY1B,IAAZ,CAApB,CAAsCwB,KAAtC,CAA6C,MAAO,CAAA,CANpD,CAAA,CALF,IAgBE,IAHAC,KAGI,CAHA3F,SAAA,CAAUC,KAAV,CAAiBC,KAAjB,CAGA,CAAAsD,EAAA,CAAYmC,KAAhB,CAAmB,MAAOA,MAO9B,OAAOtF,EAAP,EAAYmD,EAvC0B,CAsOxCvE,QAAA,CAAQ4G,eAAR,CA/JAA,QAAwB,CAACpB,KAAD,CAAQlC,IAAR,CAAc,CACpC,MAAOkC,MAAA,CAAM5D,GAAN,CAAU,QAAA,CAAAhB,CAAA,CAAK,CAAA,MAAAL,SAAA,CAASsG,MAAT,CAAgB,CACpC1F,OAAQmC,IAAA,CAAKpC,MAAL,CAAYU,GAAZ,CAAgB,QAAA,CAAAlB,CAAA,CAAK,CAAA,MAAA,CAACA,CAAD,CAAGc,MAAH;CAAcd,CAAd,CAAgBc,MAAhB,CAAyBjB,QAAA,CAASkB,KAAT,CAAef,CAAf,CAAiBe,KAAjB,CAAzB,GAAmDb,CAAnD,CAAqDI,KAArD,CAAA,CAArB,CAD4B,CAAhB,CAEnBsC,IAFmB,CAAA,CAAf,CAD6B,CAgKtCtD,QAAA,CAAQ8G,gBAAR,CAtBAA,QAAyB,CAAC/C,IAAD,CAAOgD,IAAP,CAAaC,KAAb,CAAoBC,MAApB,CAA4B,CAC/CF,IAAA,CAAK,CAAL,CAAJ,CAAYjF,IAAZ,GAAqBtB,cAArB,CAAoC0G,OAApC,EAA6C3G,QAAA,CAAS4G,KAAT,CAAe,iEAAf,CACvClD,KAAAA,CAAO8C,IAAA,CAAK,CAAL,CAAP9C,CAAeV,KACfS,KAAAA,CAAoB,CAApBA,EAAK+C,IAAL/C,CAAU3C,MAAV2C,EAAyBzD,QAAA,CAAS6G,IAAT,CAAcL,IAAd,CAAzB/C,CAA6CT,KADnD,KAIM8D,SARWC,GAQXD,CAAwBpD,IA7RdO,YA+RhB,GAAIR,IAAJ,EAAyBzD,QAAA,CAASgH,cAAT,CAAwBN,MAAxB,CAHPO,OAGO,CAAzB,GACEP,MAAA,CAJgBO,OAIhB,CADF,CACsBR,KAAA,CAAMS,OAAN,CAAcxD,IAAd,CAAA,CAAoByD,SAApB,CAA8BV,KAA9B,CALRvF,MAKQ,CADtB,CAKKlB,SAAA,CAASgH,cAAT,CAAwBN,MAAxB,CAAgCI,QAAhC,CAAL,GACEJ,MAAA,CAAOI,QAAP,CADF;AACqBL,KAAA,CAAMS,OAAN,CAAcxD,IAAd,CAAA,CAAoB0D,SAApB,EADrB,CAbmD,CAwBrD9B,OAAA,CAAO+B,cAAP,CAAsB5H,OAAtB,CAA+B,YAA/B,CAA6C,CAAEuD,MAAO,CAAA,CAAT,CAA7C,CAzWoD,CAJrD,CADoH;",
"sources":["node_modules/vega-selections/build/vega-selection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_selections$build$vega_selection\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('vega-expression')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'vega-expression'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.vega));\n}(this, (function (exports, vegaUtil, vegaExpression) { 'use strict';\n\n  function ascending (a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector (f) {\n    let delta = f;\n    let compare = f;\n\n    if (f.length === 1) {\n      delta = (d, x) => f(d) - x;\n\n      compare = ascendingComparator(f);\n    }\n\n    function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        const mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    }\n\n    function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        const mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n\n    function center(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      const i = left(a, x, lo, hi - 1);\n      return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n    }\n\n    return {\n      left,\n      center,\n      right\n    };\n  }\n\n  function ascendingComparator(f) {\n    return (d, x) => ascending(f(d), x);\n  }\n\n  const Intersect = 'intersect';\n  const Union = 'union';\n  const VlMulti = 'vlMulti';\n  const VlPoint = 'vlPoint';\n  const Or = 'or';\n  const And = 'and';\n\n  const SELECTION_ID = '_vgsid_',\n        TYPE_ENUM = 'E',\n        TYPE_RANGE_INC = 'R',\n        TYPE_RANGE_EXC = 'R-E',\n        TYPE_RANGE_LE = 'R-LE',\n        TYPE_RANGE_RE = 'R-RE',\n        UNIT_INDEX = 'index:unit'; // TODO: revisit date coercion?\n\n  function testPoint(datum, entry) {\n    var fields = entry.fields,\n        values = entry.values,\n        n = fields.length,\n        i = 0,\n        dval,\n        f;\n\n    for (; i < n; ++i) {\n      f = fields[i];\n      f.getter = vegaUtil.field.getter || vegaUtil.field(f.field);\n      dval = f.getter(datum);\n      if (vegaUtil.isDate(dval)) dval = vegaUtil.toNumber(dval);\n      if (vegaUtil.isDate(values[i])) values[i] = vegaUtil.toNumber(values[i]);\n      if (vegaUtil.isDate(values[i][0])) values[i] = values[i].map(vegaUtil.toNumber);\n\n      if (f.type === TYPE_ENUM) {\n        // Enumerated fields can either specify individual values (single/multi selections)\n        // or an array of values (interval selections).\n        if (vegaUtil.isArray(values[i]) ? values[i].indexOf(dval) < 0 : dval !== values[i]) {\n          return false;\n        }\n      } else {\n        if (f.type === TYPE_RANGE_INC) {\n          if (!vegaUtil.inrange(dval, values[i])) return false;\n        } else if (f.type === TYPE_RANGE_RE) {\n          // Discrete selection of bins test within the range [bin_start, bin_end).\n          if (!vegaUtil.inrange(dval, values[i], true, false)) return false;\n        } else if (f.type === TYPE_RANGE_EXC) {\n          // 'R-E'/'R-LE' included for completeness.\n          if (!vegaUtil.inrange(dval, values[i], false, false)) return false;\n        } else if (f.type === TYPE_RANGE_LE) {\n          if (!vegaUtil.inrange(dval, values[i], false, true)) return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Tests if a tuple is contained within an interactive selection.\n   * @param {string} name - The name of the data set representing the selection.\n   *  Tuples in the dataset are of the form\n   *  {unit: string, fields: array<fielddef>, values: array<*>}.\n   *  Fielddef is of the form\n   *  {field: string, channel: string, type: 'E' | 'R'} where\n   *  'type' identifies whether tuples in the dataset enumerate\n   *  values for the field, or specify a continuous range.\n   * @param {object} datum - The tuple to test for inclusion.\n   * @param {string} op - The set operation for combining selections.\n   *   One of 'intersect' or 'union' (default).\n   * @return {boolean} - True if the datum is in the selection, false otherwise.\n   */\n\n\n  function selectionTest(name, datum, op) {\n    var data = this.context.data[name],\n        entries = data ? data.values.value : [],\n        unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,\n        intersect = op === Intersect,\n        n = entries.length,\n        i = 0,\n        entry,\n        miss,\n        count,\n        unit,\n        b;\n\n    for (; i < n; ++i) {\n      entry = entries[i];\n\n      if (unitIdx && intersect) {\n        // multi selections union within the same unit and intersect across units.\n        miss = miss || {};\n        count = miss[unit = entry.unit] || 0; // if we've already matched this unit, skip.\n\n        if (count === -1) continue;\n        b = testPoint(datum, entry);\n        miss[unit] = b ? -1 : ++count; // if we match and there are no other units return true\n        // if we've missed against all tuples in this unit return false\n\n        if (b && unitIdx.size === 1) return true;\n        if (!b && count === unitIdx.get(unit).count) return false;\n      } else {\n        b = testPoint(datum, entry); // if we find a miss and we do require intersection return false\n        // if we find a match and we don't require intersection return true\n\n        if (intersect ^ b) return b;\n      }\n    } // if intersecting and we made it here, then we saw no misses\n    // if not intersecting, then we saw no matches\n    // if no active selections, return false\n\n\n    return n && intersect;\n  }\n  const selectionId = vegaUtil.field(SELECTION_ID),\n        bisect = bisector(selectionId),\n        bisectLeft = bisect.left,\n        bisectRight = bisect.right;\n  function selectionIdTest(name, datum, op) {\n    const data = this.context.data[name],\n          entries = data ? data.values.value : [],\n          unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,\n          intersect = op === Intersect,\n          value = selectionId(datum),\n          index = bisectLeft(entries, value);\n    if (index === entries.length) return false;\n    if (selectionId(entries[index]) !== value) return false;\n\n    if (unitIdx && intersect) {\n      if (unitIdx.size === 1) return true;\n      if (bisectRight(entries, value) - index < unitIdx.size) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Maps an array of scene graph items to an array of selection tuples.\n   * @param {string} name  - The name of the dataset representing the selection.\n   * @param {string} unit  - The name of the unit view.\n   *\n   * @returns {array} An array of selection entries for the given unit.\n   */\n\n  function selectionTuples(array, base) {\n    return array.map(x => vegaUtil.extend({\n      values: base.fields.map(f => (f.getter || (f.getter = vegaUtil.field(f.field)))(x.datum))\n    }, base));\n  }\n\n  /**\n   * Resolves selection for use as a scale domain or reads via the API.\n   * @param {string} name - The name of the dataset representing the selection\n   * @param {string} [op='union'] - The set operation for combining selections.\n   *                 One of 'intersect' or 'union' (default).\n   * @param {boolean} isMulti - Identifies a \"multi\" selection to perform more\n   *                 expensive resolution computation.\n   * @param {boolean} vl5 - With Vega-Lite v5, \"multi\" selections are now called \"point\"\n   *                 selections, and thus the resolved tuple should reflect this name.\n   *                 This parameter allows us to reflect this change without triggering\n   *                 a major version bump for Vega.\n   * @returns {object} An object of selected fields and values.\n   */\n\n  function selectionResolve(name, op, isMulti, vl5) {\n    var data = this.context.data[name],\n        entries = data ? data.values.value : [],\n        resolved = {},\n        multiRes = {},\n        types = {},\n        entry,\n        fields,\n        values,\n        unit,\n        field,\n        res,\n        resUnit,\n        type,\n        union,\n        n = entries.length,\n        i = 0,\n        j,\n        m; // First union all entries within the same unit.\n\n    for (; i < n; ++i) {\n      entry = entries[i];\n      unit = entry.unit;\n      fields = entry.fields;\n      values = entry.values;\n\n      for (j = 0, m = fields.length; j < m; ++j) {\n        field = fields[j];\n        res = resolved[field.field] || (resolved[field.field] = {});\n        resUnit = res[unit] || (res[unit] = []);\n        types[field.field] = type = field.type.charAt(0);\n        union = ops[type + '_union'];\n        res[unit] = union(resUnit, vegaUtil.array(values[j]));\n      } // If the same multi-selection is repeated over views and projected over\n      // an encoding, it may operate over different fields making it especially\n      // tricky to reliably resolve it. At best, we can de-dupe identical entries\n      // but doing so may be more computationally expensive than it is worth.\n      // Instead, for now, we simply transform our store representation into\n      // a more human-friendly one.\n\n\n      if (isMulti) {\n        resUnit = multiRes[unit] || (multiRes[unit] = []);\n        resUnit.push(vegaUtil.array(values).reduce((obj, curr, j) => (obj[fields[j].field] = curr, obj), {}));\n      }\n    } // Then resolve fields across units as per the op.\n\n\n    op = op || Union;\n    Object.keys(resolved).forEach(field => {\n      resolved[field] = Object.keys(resolved[field]).map(unit => resolved[field][unit]).reduce((acc, curr) => acc === undefined ? curr : ops[types[field] + '_' + op](acc, curr));\n    });\n    entries = Object.keys(multiRes);\n\n    if (isMulti && entries.length) {\n      const key = vl5 ? VlPoint : VlMulti;\n      resolved[key] = op === Union ? {\n        [Or]: entries.reduce((acc, k) => (acc.push(...multiRes[k]), acc), [])\n      } : {\n        [And]: entries.map(k => ({\n          [Or]: multiRes[k]\n        }))\n      };\n    }\n\n    return resolved;\n  }\n  var ops = {\n    E_union: function (base, value) {\n      if (!base.length) return value;\n      var i = 0,\n          n = value.length;\n\n      for (; i < n; ++i) if (base.indexOf(value[i]) < 0) base.push(value[i]);\n\n      return base;\n    },\n    E_intersect: function (base, value) {\n      return !base.length ? value : base.filter(v => value.indexOf(v) >= 0);\n    },\n    R_union: function (base, value) {\n      var lo = vegaUtil.toNumber(value[0]),\n          hi = vegaUtil.toNumber(value[1]);\n\n      if (lo > hi) {\n        lo = value[1];\n        hi = value[0];\n      }\n\n      if (!base.length) return [lo, hi];\n      if (base[0] > lo) base[0] = lo;\n      if (base[1] < hi) base[1] = hi;\n      return base;\n    },\n    R_intersect: function (base, value) {\n      var lo = vegaUtil.toNumber(value[0]),\n          hi = vegaUtil.toNumber(value[1]);\n\n      if (lo > hi) {\n        lo = value[1];\n        hi = value[0];\n      }\n\n      if (!base.length) return [lo, hi];\n\n      if (hi < base[0] || base[1] < lo) {\n        return [];\n      } else {\n        if (base[0] < lo) base[0] = lo;\n        if (base[1] > hi) base[1] = hi;\n      }\n\n      return base;\n    }\n  };\n\n  const DataPrefix = ':',\n        IndexPrefix = '@';\n  function selectionVisitor(name, args, scope, params) {\n    if (args[0].type !== vegaExpression.Literal) vegaUtil.error('First argument to selection functions must be a string literal.');\n    const data = args[0].value,\n          op = args.length >= 2 && vegaUtil.peek(args).value,\n          field = 'unit',\n          indexName = IndexPrefix + field,\n          dataName = DataPrefix + data; // eslint-disable-next-line no-prototype-builtins\n\n    if (op === Intersect && !vegaUtil.hasOwnProperty(params, indexName)) {\n      params[indexName] = scope.getData(data).indataRef(scope, field);\n    } // eslint-disable-next-line no-prototype-builtins\n\n\n    if (!vegaUtil.hasOwnProperty(params, dataName)) {\n      params[dataName] = scope.getData(data).tuplesRef();\n    }\n  }\n\n  exports.selectionIdTest = selectionIdTest;\n  exports.selectionResolve = selectionResolve;\n  exports.selectionTest = selectionTest;\n  exports.selectionTuples = selectionTuples;\n  exports.selectionVisitor = selectionVisitor;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","vegaUtil","vegaExpression","ascendingComparator","f","d","x","a","NaN","testPoint","datum","entry","fields","values","n","length","i","dval","getter","field","isDate","toNumber","map","TYPE_ENUM","type","isArray","indexOf","TYPE_RANGE_INC","inrange","TYPE_RANGE_RE","TYPE_RANGE_EXC","TYPE_RANGE_LE","selectionId","SELECTION_ID","bisect","bisector","left","lo","hi","mid","compare","delta","center","right","bisectLeft","bisectRight","ops","E_union","base","value","push","E_intersect","filter","v","R_union","R_intersect","selectionIdTest","name","op","data","context","entries","unitIdx","UNIT_INDEX","undefined","intersect","Intersect","index","size","selectionResolve","isMulti","vl5","resolved","multiRes","types","unit","res","resUnit","j","m","charAt","union","array","reduce","obj","curr","Union","Object","keys","forEach","acc","key","VlPoint","VlMulti","Or","k","And","selectionTest","miss","count","b","get","selectionTuples","extend","selectionVisitor","args","scope","params","Literal","error","peek","dataName","DataPrefix","hasOwnProperty","indexName","getData","indataRef","tuplesRef","defineProperty"]
}
